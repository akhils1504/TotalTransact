<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.7.3 on win32)" generated="20210405 18:46:51.860" rpa="false">
<suite id="s1" name="AdminPortal" source="C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Headless\AdminPortal.robot">
<kw name="Setup Test Suite" library="CommonKeywordsAndVariables" type="setup">
<kw name="Get Current Date" library="robot.libraries.DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%m/%d/%Y</arg>
</arguments>
<assign>
<var>${today}</var>
</assign>
<msg timestamp="20210405 18:46:52.509" level="INFO">${today} = 04/05/2021</msg>
<status status="PASS" starttime="20210405 18:46:52.509" endtime="20210405 18:46:52.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${today}</arg>
<arg>${today}</arg>
</arguments>
<msg timestamp="20210405 18:46:52.510" level="INFO">${today} = 04/05/2021</msg>
<status status="PASS" starttime="20210405 18:46:52.509" endtime="20210405 18:46:52.510"></status>
</kw>
<kw name="Log Variables" library="BuiltIn">
<doc>Logs all variables in the current scope with given log level.</doc>
<msg timestamp="20210405 18:46:52.512" level="INFO">${/} = \</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${:} = ;</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${\n} = 
</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${account_location_id} = ACCOUNT_LOCATION_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${account_search_string} = Downtown</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${accountAchAccountId} = PROCESSING_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${accountCardId} = SIGNATURE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${ach_created_customer_id} = ACH_CREATED_CUSTOMER_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${ach_pmt_acct_id} = ACH_PAYMENT_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${acount_location_name_uniqueifier} = ACCOUNT_LOCATION_UNIQUEIFIER_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${admin_appName} = ADMIN</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${air_way_bill_number} = AIRWAY_BILL_NUMBER_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${alert_id} = ALERT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${Amount} = Amount_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${api_key} = API_KEY_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${api_key_id} = API_KEY_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${api_key_name} = API_KEY_NAME_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${api_processing_account_id} = API_PROCESSING_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${appName} = SBPS</msg>
<msg timestamp="20210405 18:46:52.512" level="INFO">${BankAccountType} = BankAccountType_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${BusinessName} = BUSINESS_NAME_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${card_institution_search_string} = FDC Compass</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${card_processor_id} = CARD_PROCESSOR_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${card_processor_search_string} = CYBERSOURCE</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${cc_created_customer_id} = CC_CREATED_CUSTOMER_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${cc_pmt_acct_id} = CC_PAYMENT_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${cc_processor_based_failure_amount} = 5</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${compName} = Total Transact</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${country_id} = COUNTRY_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${country_search_string} = United States</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${custom_field_id} = CUSTOM_FIELD_ID</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${custom_field_name} = CUSTOM_FIELD_NAME</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${customer_name_random_part} = CUSTOMER_NAME_RANDOM_PART_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${customerid} = OrganizationType id_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${DEBUG_FILE} = NONE</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${enable_burp_proxy} = false</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${endpoint_id} = ENDPOINT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${endpoint_search_string} = Topaz Reseller</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${EXECDIR} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${external_id} = EXTERNAL_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${False} = False</msg>
<msg timestamp="20210405 18:46:52.513" level="INFO">${fee_schedule_id} = FEE_SCHEDULE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${fee_schedule_name} = FEE_SCHEDULE_NAME</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${first_name} = FIRST NAME</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${gateway_profile_search_string} = ptest</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${gateway_profiles_id} = GATEWAY_PROFILE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${last_name} = LAST NAME</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${LOG_FILE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results\log-20210405-184651.html</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${LOG_LEVEL} = INFO</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${merchant__org_id} = merchant__org_id_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${merchant_external_id} = merchant_external_id_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${merchant_id} = MERCHANT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${merchant_merchant_id} = merchant_merchant_id_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${None} = None</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${null} = None</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${OrganizationTypeid} = OrganizationType id_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${OUTPUT_DIR} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${OUTPUT_FILE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results\output-20210405-184651.xml</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${payment_external_id} = PAYMENT_EXTERNAL_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${payment_id} = PAYMENT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${payment_schedule_id} = PAYMENT_SCHEDULE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${PREV_TEST_MESSAGE} = </msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${PREV_TEST_NAME} = </msg>
<msg timestamp="20210405 18:46:52.514" level="INFO">${PREV_TEST_STATUS} = </msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${processing_account_email_type_id} = PROCESSING_ACCOUNT_EMAIL_TYPE_ID</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${processing_account_email_type_search_str} = CHANGE_NEXT_PAYMENT_DATE_EMAILS</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${processing_account_id} = PROCESSING_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${processing_account_location_id} = ACCOUNT_LOCATION_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${profile_id} = PROFILE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${REPORT_FILE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results\report-20210405-184651.html</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${reseller_id} = RESELLER_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${reseller_search_string} = Topaz Reseller</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${reset_password} = PASSWORD</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${reset_username} = USER NAME</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${scheduleId} = SIGNATURE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${session_id} = SESSION_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${signature} = ODI4MjA2MTN8MjAxOC0xMS0zMCAwNzowNjowNyBVVEN8aGREZFZWaUxLdEx3aXpxckBmdW5kdGVjaC5jb218OTYyYTcwMTZmYWEwYTI4ZjNiYzM3NDNhZGU0NzFmNzM0Y2U4MA==</msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${SPACE} =  </msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${successflag} = </msg>
<msg timestamp="20210405 18:46:52.515" level="INFO">${SUITE_DOCUMENTATION} = Exercises the system as much as possible to give clues to Burp Suite for testing. BURP MUST BE SET TO LISTEN ON LOCALHOST:8080</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">&amp;{SUITE_METADATA} = { }</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${SUITE_NAME} = AdminPortal</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${SUITE_SOURCE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Headless\AdminPortal.robot</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${TEMPDIR} = C:\Users\AKHIL~1.KUM\AppData\Local\Temp</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${testServer} = NO_ENVIRONMENT_SELECTED</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${time_zone_search_string} = (-10:00) Hawaii</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${timezone_id} = TIMEZONE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${today} = 04/05/2021</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${True} = True</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${user_search_string} = tsodamerchant</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${Userid} = Userid_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${yesterday} = Subtract Time From Date NULL 1d result_format=%m/%d/%Y exclude_millis=True date_format=%m/%d/%Y</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${zero_fee_schedule_id} = ZERO_FEE_SCHEDULE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${zero_fee_schedule_name} = Zero Fee Schedule</msg>
<msg timestamp="20210405 18:46:52.516" level="INFO">${zero_fee_schedule_name_upper} = ZERO FEE SCHEDULE</msg>
<status status="PASS" starttime="20210405 18:46:52.510" endtime="20210405 18:46:52.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testServer}'=='NO_ENVIRONMENT_SELECTED'</arg>
<arg>Get Selection From User</arg>
<arg>Select the desired test environment and press OK.</arg>
<arg>AzureCustint</arg>
<arg>AzureDevint</arg>
<arg>AzurePerformanceEngineering</arg>
<arg>AzureQA</arg>
<arg>Local</arg>
</arguments>
<assign>
<var>${testServerRequested}</var>
</assign>
<kw name="Get Selection From User" library="Dialogs">
<doc>Pauses test execution and asks user to select a value.</doc>
<arguments>
<arg>Select the desired test environment and press OK.</arg>
<arg>AzureCustint</arg>
<arg>AzureDevint</arg>
<arg>AzurePerformanceEngineering</arg>
<arg>AzureQA</arg>
<arg>Local</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:52.517" endtime="20210405 18:46:57.404"></status>
</kw>
<msg timestamp="20210405 18:46:57.404" level="INFO">${testServerRequested} = AzureCustint</msg>
<status status="PASS" starttime="20210405 18:46:52.517" endtime="20210405 18:46:57.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testServer}'=='NO_ENVIRONMENT_SELECTED'</arg>
<arg>Set Suite Variable</arg>
<arg>\${testServer}</arg>
<arg>${testServerRequested}</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${testServer}</arg>
<arg>${testServerRequested}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.407" level="INFO">${testServer} = AzureCustint</msg>
<status status="PASS" starttime="20210405 18:46:57.406" endtime="20210405 18:46:57.407"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.405" endtime="20210405 18:46:57.407"></status>
</kw>
<kw name="Import Resource" library="BuiltIn">
<doc>Imports a resource file with the given path.</doc>
<arguments>
<arg>C:\\Users\\akhil.kumar\\Perforce\\akhil.kumar_TRV-LT-AKHILK_9539\\TotalTransact\\Robot\\sbps\\main\\TotalTransact\\variables/TotalTransact/../../variables/${testServer}-environment.resource</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:57.407" endtime="20210405 18:46:57.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${testServer}</arg>
<arg>${testServer}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.462" level="INFO">${testServer} = AzureCustint</msg>
<status status="PASS" starttime="20210405 18:46:57.462" endtime="20210405 18:46:57.462"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Selected test environment is ${testServer}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:57.463" endtime="20210405 18:46:57.463"></status>
</kw>
<kw name="Reset User Password" library="CommonKeywordsAndVariables">
<arguments>
<arg>${username}</arg>
<arg>${password_hash}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>(echo update users set password = '${password_hash_to_reset}', user_status_id = 2 where name like '${username_to_reset}'; &amp; echo commit;) | sqlplus -s ${db_ls_schema_name}/ls@${db_host}:${db_port}/${db_service}</arg>
</arguments>
<assign>
<var>${resetPasswordCommand}</var>
</assign>
<msg timestamp="20210405 18:46:57.465" level="INFO">${resetPasswordCommand} = (echo update users set password = '9jA2hBIIyF82fLsmgN6oEl0AE3I=', user_status_id = 2 where name like 'tsodamerchant'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng</msg>
<status status="PASS" starttime="20210405 18:46:57.465" endtime="20210405 18:46:57.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resetPasswordCommand}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.466" level="INFO">(echo update users set password = '9jA2hBIIyF82fLsmgN6oEl0AE3I=', user_status_id = 2 where name like 'tsodamerchant'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng</msg>
<status status="PASS" starttime="20210405 18:46:57.465" endtime="20210405 18:46:57.466"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${resetPasswordCommand}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210405 18:46:57.479" level="INFO">Running command '(echo update users set password = '9jA2hBIIyF82fLsmgN6oEl0AE3I=', user_status_id = 2 where name like 'tsodamerchant'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng 2&gt;&amp;1'.</msg>
<msg timestamp="20210405 18:46:57.529" level="INFO">${rc} = 255</msg>
<status status="PASS" starttime="20210405 18:46:57.466" endtime="20210405 18:46:57.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.530" level="INFO">255</msg>
<status status="PASS" starttime="20210405 18:46:57.530" endtime="20210405 18:46:57.530"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.463" endtime="20210405 18:46:57.530"></status>
</kw>
<kw name="Reset User Password" library="CommonKeywordsAndVariables">
<arguments>
<arg>${admin_username}</arg>
<arg>${admin_password_hash}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>(echo update users set password = '${password_hash_to_reset}', user_status_id = 2 where name like '${username_to_reset}'; &amp; echo commit;) | sqlplus -s ${db_ls_schema_name}/ls@${db_host}:${db_port}/${db_service}</arg>
</arguments>
<assign>
<var>${resetPasswordCommand}</var>
</assign>
<msg timestamp="20210405 18:46:57.532" level="INFO">${resetPasswordCommand} = (echo update users set password = '8FePHnF0saQcTqjG4X96ijuIySo=', user_status_id = 2 where name like 'admin'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng</msg>
<status status="PASS" starttime="20210405 18:46:57.531" endtime="20210405 18:46:57.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resetPasswordCommand}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.532" level="INFO">(echo update users set password = '8FePHnF0saQcTqjG4X96ijuIySo=', user_status_id = 2 where name like 'admin'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng</msg>
<status status="PASS" starttime="20210405 18:46:57.532" endtime="20210405 18:46:57.532"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${resetPasswordCommand}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210405 18:46:57.542" level="INFO">Running command '(echo update users set password = '8FePHnF0saQcTqjG4X96ijuIySo=', user_status_id = 2 where name like 'admin'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng 2&gt;&amp;1'.</msg>
<msg timestamp="20210405 18:46:57.620" level="INFO">${rc} = 255</msg>
<status status="PASS" starttime="20210405 18:46:57.532" endtime="20210405 18:46:57.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.620" level="INFO">255</msg>
<status status="PASS" starttime="20210405 18:46:57.620" endtime="20210405 18:46:57.621"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.530" endtime="20210405 18:46:57.621"></status>
</kw>
<kw name="Reset User Password" library="CommonKeywordsAndVariables">
<arguments>
<arg>${dhl_username}</arg>
<arg>${dhl_password_hash}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>(echo update users set password = '${password_hash_to_reset}', user_status_id = 2 where name like '${username_to_reset}'; &amp; echo commit;) | sqlplus -s ${db_ls_schema_name}/ls@${db_host}:${db_port}/${db_service}</arg>
</arguments>
<assign>
<var>${resetPasswordCommand}</var>
</assign>
<msg timestamp="20210405 18:46:57.622" level="INFO">${resetPasswordCommand} = (echo update users set password = '8FePHnF0saQcTqjG4X96ijuIySo=', user_status_id = 2 where name like 'dhluser'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng</msg>
<status status="PASS" starttime="20210405 18:46:57.622" endtime="20210405 18:46:57.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resetPasswordCommand}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.623" level="INFO">(echo update users set password = '8FePHnF0saQcTqjG4X96ijuIySo=', user_status_id = 2 where name like 'dhluser'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng</msg>
<status status="PASS" starttime="20210405 18:46:57.623" endtime="20210405 18:46:57.623"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>${resetPasswordCommand}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210405 18:46:57.632" level="INFO">Running command '(echo update users set password = '8FePHnF0saQcTqjG4X96ijuIySo=', user_status_id = 2 where name like 'dhluser'; &amp; echo commit;) | sqlplus -s ci_totalt_ls/ls@10.192.1.165:1521/azmseng 2&gt;&amp;1'.</msg>
<msg timestamp="20210405 18:46:57.664" level="INFO">${rc} = 255</msg>
<status status="PASS" starttime="20210405 18:46:57.623" endtime="20210405 18:46:57.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20210405 18:46:57.665" level="INFO">255</msg>
<status status="PASS" starttime="20210405 18:46:57.665" endtime="20210405 18:46:57.665"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.621" endtime="20210405 18:46:57.665"></status>
</kw>
<kw name="Create Sessions" library="CommonKeywordsAndVariables">
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>debug</arg>
</arguments>
<msg timestamp="20210405 18:46:57.666" level="INFO">Log level changed from INFO to DEBUG.</msg>
<status status="PASS" starttime="20210405 18:46:57.666" endtime="20210405 18:46:57.666"></status>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20210405 18:46:57.666" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20210405 18:46:57.666" endtime="20210405 18:46:57.666"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>http=localhost:8080</arg>
<arg>https=localhost:8080</arg>
</arguments>
<assign>
<var>${proxies}</var>
</assign>
<msg timestamp="20210405 18:46:57.667" level="INFO">${proxies} = {'http': 'localhost:8080', 'https': 'localhost:8080'}</msg>
<status status="PASS" starttime="20210405 18:46:57.667" endtime="20210405 18:46:57.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${enable_burp_proxy}'=='true'</arg>
<arg>Create Session</arg>
<arg>regularSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
<arg>proxies=${proxies}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:57.667" endtime="20210405 18:46:57.668"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>'${enable_burp_proxy}'=='true'</arg>
<arg>Create Session</arg>
<arg>regularSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>regularSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20210405 18:46:57.669" level="INFO">Creating Session using : alias=regularSession, url=http://10.192.1.220:8003, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<msg timestamp="20210405 18:46:57.669" level="DEBUG">Creating session: regularSession</msg>
<status status="PASS" starttime="20210405 18:46:57.668" endtime="20210405 18:46:57.669"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.668" endtime="20210405 18:46:57.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${enable_burp_proxy}'=='true'</arg>
<arg>Create Session</arg>
<arg>adminSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
<arg>proxies=${proxies}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:57.670" endtime="20210405 18:46:57.670"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>'${enable_burp_proxy}'=='true'</arg>
<arg>Create Session</arg>
<arg>adminSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>adminSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20210405 18:46:57.671" level="INFO">Creating Session using : alias=adminSession, url=http://10.192.1.220:8003, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<msg timestamp="20210405 18:46:57.671" level="DEBUG">Creating session: adminSession</msg>
<status status="PASS" starttime="20210405 18:46:57.671" endtime="20210405 18:46:57.671"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.670" endtime="20210405 18:46:57.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${enable_burp_proxy}'=='true'</arg>
<arg>Create Session</arg>
<arg>dhlSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
<arg>proxies=${proxies}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:57.672" endtime="20210405 18:46:57.672"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>'${enable_burp_proxy}'=='true'</arg>
<arg>Create Session</arg>
<arg>dhlSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dhlSession</arg>
<arg>${url}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20210405 18:46:57.673" level="INFO">Creating Session using : alias=dhlSession, url=http://10.192.1.220:8003, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<msg timestamp="20210405 18:46:57.673" level="DEBUG">Creating session: dhlSession</msg>
<status status="PASS" starttime="20210405 18:46:57.672" endtime="20210405 18:46:57.673"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.672" endtime="20210405 18:46:57.673"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.665" endtime="20210405 18:46:57.673"></status>
</kw>
<kw name="Log Variables" library="BuiltIn">
<doc>Logs all variables in the current scope with given log level.</doc>
<msg timestamp="20210405 18:46:57.677" level="INFO">${/} = \</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${:} = ;</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${\n} = 
</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${account_location_id} = ACCOUNT_LOCATION_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${account_location_search_default} = State Street Account</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${account_location_time_zone_default} = (-07:00) US Mountain Time</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${account_search_string} = Downtown</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${accountAchAccountId} = PROCESSING_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${accountCardId} = SIGNATURE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${ach_created_customer_id} = ACH_CREATED_CUSTOMER_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${ach_pmt_acct_id} = ACH_PAYMENT_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${acount_location_name_uniqueifier} = ACCOUNT_LOCATION_UNIQUEIFIER_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${address_default} = 345 One Street Lane</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${admin_appName} = ADMIN</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${admin_compName} = Total Transact</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${admin_password} = Finastra1!</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${admin_password_hash} = 8FePHnF0saQcTqjG4X96ijuIySo=</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${admin_username} = admin</msg>
<msg timestamp="20210405 18:46:57.677" level="INFO">${air_way_bill_number} = AIRWAY_BILL_NUMBER_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${alert_id} = ALERT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${Amount} = Amount_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${api_key} = API_KEY_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${api_key_id} = API_KEY_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${api_key_name} = API_KEY_NAME_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${api_processing_account_id} = API_PROCESSING_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${appName} = SBPS</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${authorization_agreement} = True</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${BankAccountType} = BankAccountType_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${browser} = Firefox</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${BusinessName} = BUSINESS_NAME_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${captcha_safe_url} = 10.192.1.220:8003</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${card_institution_alternate_default} = Monetra Loopback Emulator</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${card_institution_default} = Monetra Loopback Emulator</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${card_institution_search_string} = Monetra Loopback Emulator</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${card_processor_default} = MONETRA-AZ</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${card_processor_id} = CARD_PROCESSOR_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${card_processor_search_string} = MONETRA-AZ</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${cc_created_customer_id} = CC_CREATED_CUSTOMER_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${cc_pmt_acct_id} = CC_PAYMENT_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.678" level="INFO">${cc_processor_based_failure_amount} = 5</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${city_default} = Salt Lake Ciy Utah</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${compName} = Topaz Soda</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${country_id} = COUNTRY_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${country_search_string} = United States</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${custom_field_id} = CUSTOM_FIELD_ID</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${custom_field_name} = CUSTOM_FIELD_NAME</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${customer_id_default} = IN6sp4M9EL0Ps7cK</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${customer_name_random_part} = CUSTOMER_NAME_RANDOM_PART_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${customer_search_default} = qBlIiQWIkZIfDyJVKpoC</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${customerid} = OrganizationType id_FOUND</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${cvv_default} = 999</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${cvv_dhl_default} = 111</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${db_base_schema_name} = ci_totalt_sbps_base</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${db_base_schema_password} = sbps</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${db_host} = 10.192.1.165</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${db_ls_schema_name} = ci_totalt_ls</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${db_port} = 1521</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${db_service} = azmseng</msg>
<msg timestamp="20210405 18:46:57.679" level="INFO">${DEBUG_FILE} = NONE</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${dhl_password} = Finastra1!</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${dhl_password_hash} = 8FePHnF0saQcTqjG4X96ijuIySo=</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${dhl_username} = dhluser</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${disable_credit_card_tests} = False</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${email_address_default} = Kara.Jensen@seleniumtest.com</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${email_domain_default} = seleniumtest</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${enable_burp_proxy} = false</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${endpoint_id} = ENDPOINT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${endpoint_search_string} = Topaz Reseller</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${EXECDIR} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${expiration_date_default} = 12/23</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${expiration_month} = Date %m</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${expiration_year} = Date %y</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${external_id} = EXTERNAL_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${False} = False</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${fee_schedule_id} = FEE_SCHEDULE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${fee_schedule_name} = FEE_SCHEDULE_NAME</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${first_name} = FIRST NAME</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${first_name_default} = Kara</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${fullname_default} = John Doe</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${gateway_profile_search_string} = ptest</msg>
<msg timestamp="20210405 18:46:57.680" level="INFO">${gateway_profiles_id} = GATEWAY_PROFILE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${gateway_time_zone_default} = (-07:00) US Mountain Time</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${last_name} = LAST NAME</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${last_name_default} = Jensen</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${latency_time_default} = 15s</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${LOG_FILE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results\log-20210405-184651.html</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${LOG_LEVEL} = DEBUG</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant__org_id} = merchant__org_id_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant_external_id} = merchant_external_id_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant_id} = MERCHANT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant_merchant_id} = merchant_merchant_id_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant_search_default} = Sapphire Auto</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant_search_string} = Topaz Soda</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${merchant_time_zone_default} = (-07:00) US Mountain Time</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${None} = None</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${null} = None</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${OrganizationTypeid} = OrganizationType id_FOUND</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${OUTPUT_DIR} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results</msg>
<msg timestamp="20210405 18:46:57.681" level="INFO">${OUTPUT_FILE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results\output-20210405-184651.xml</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${password} = Finastra1!</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${password_hash} = 9jA2hBIIyF82fLsmgN6oEl0AE3I=</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_account_ach_name_default} = Selenium ACH</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_account_card_name_default} = Selenium Card</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_account_default} = Add New</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_date_default} = 02/13/2019</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_external_id} = PAYMENT_EXTERNAL_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_id} = PAYMENT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_mount_default} = 345.90</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_schedule_id} = PAYMENT_SCHEDULE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${payment_specialty_mount_default} = 69.00</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${phone_authorization} = False</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${phone_default} = 8018018001</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${PREV_TEST_MESSAGE} = </msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${PREV_TEST_NAME} = </msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${PREV_TEST_STATUS} = </msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${processing_account_email_type_id} = PROCESSING_ACCOUNT_EMAIL_TYPE_ID</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${processing_account_email_type_search_str} = CHANGE_NEXT_PAYMENT_DATE_EMAILS</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${processing_account_id} = PROCESSING_ACCOUNT_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.682" level="INFO">${processing_account_location_id} = ACCOUNT_LOCATION_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${processing_account_search_string} = Downtown</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${profile_id} = PROFILE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${refportal_url} = http://10.192.1.220:8003</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${REPORT_FILE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Results\report-20210405-184651.html</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${reseller_default} = Sapphire Reseller</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${reseller_id} = RESELLER_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${reseller_search_string} = Topaz Reseller</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${reset_password} = PASSWORD</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${reset_username} = USER NAME</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${scheduleId} = SIGNATURE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${session_id} = SESSION_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${signature} = ODI4MjA2MTN8MjAxOC0xMS0zMCAwNzowNjowNyBVVEN8aGREZFZWaUxLdEx3aXpxckBmdW5kdGVjaC5jb218OTYyYTcwMTZmYWEwYTI4ZjNiYzM3NDNhZGU0NzFmNzM0Y2U4MA==</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${SPACE} =  </msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${state_default} = UT</msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${successflag} = </msg>
<msg timestamp="20210405 18:46:57.683" level="INFO">${SUITE_DOCUMENTATION} = Exercises the system as much as possible to give clues to Burp Suite for testing. BURP MUST BE SET TO LISTEN ON LOCALHOST:8080</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">&amp;{SUITE_METADATA} = { }</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${SUITE_NAME} = AdminPortal</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${SUITE_SOURCE} = C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\TestCases\Headless\AdminPortal.robot</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${TEMPDIR} = C:\Users\AKHIL~1.KUM\AppData\Local\Temp</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${testServer} = AzureCustint</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${testServerRequested} = AzureCustint</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${time_zone_search_string} = (-10:00) Hawaii</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${timezone_id} = TIMEZONE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${today} = 04/05/2021</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${True} = True</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${url} = http://10.192.1.220:8003</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${user_search_string} = tsodamerchant</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${Userid} = Userid_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.684" level="INFO">${username} = tsodamerchant</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${wait_time_default} = 15s</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${written_authorization} = True</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${yesterday} = Subtract Time From Date NULL 1d result_format=%m/%d/%Y exclude_millis=True date_format=%m/%d/%Y</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${zero_fee_schedule_id} = ZERO_FEE_SCHEDULE_ID_NOT_FOUND</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${zero_fee_schedule_name} = Zero Fee Schedule</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${zero_fee_schedule_name_upper} = ZERO FEE SCHEDULE</msg>
<msg timestamp="20210405 18:46:57.685" level="INFO">${zip_code_default} = 80493</msg>
<status status="PASS" starttime="20210405 18:46:57.674" endtime="20210405 18:46:57.685"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:52.508" endtime="20210405 18:46:57.685"></status>
</kw>
<test id="s1-t1" name="Authenticate to the Admin Server">
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>debug</arg>
</arguments>
<msg timestamp="20210405 18:46:57.687" level="INFO">Log level changed from DEBUG to DEBUG.</msg>
<status status="PASS" starttime="20210405 18:46:57.686" endtime="20210405 18:46:57.687"></status>
</kw>
<kw name="Login to Admin">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username=${admin_username}</arg>
<arg>password=${admin_password}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:46:57.688" level="INFO">&amp;{data} = { username=admin | password=Finastra1! }</msg>
<status status="PASS" starttime="20210405 18:46:57.688" endtime="20210405 18:46:57.689"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:46:57.689" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:46:57.689" endtime="20210405 18:46:57.689"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${headers}</arg>
<arg>referer=${url}/sbpsAdmin</arg>
</arguments>
<status status="PASS" starttime="20210405 18:46:57.689" endtime="20210405 18:46:57.690"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/login/authenticate</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:46:57.690" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:46:57.699" level="DEBUG">Starting new HTTP connection (1): 10.192.1.220:8003</msg>
<msg timestamp="20210405 18:47:08.148" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/login/authenticate HTTP/1.1" 302 267</msg>
<msg timestamp="20210405 18:47:10.276" level="DEBUG">http://10.192.1.220:8003 "GET /sbpsAdmin/ HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:47:10.935" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/login/authenticate (redirected) 
 path_url=/sbpsAdmin/login/authenticate 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'referer': 'http://10.192.1.220:8003/sbpsAdmin', 'Content-Length': '36'} 
 body=username=admin&amp;password=Finastra1%21 
 </msg>
<msg timestamp="20210405 18:47:10.936" level="DEBUG">send: bPOST /sbpsAdmin/login/authenticate HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nreferer: http://10.192.1.220:8003/sbpsAdmin\nContent-Length: 36\n\n
send: busername=admin&amp;password=Finastra1%21
reply: HTTP/1.1 302 Moved Temporarily\n
header: Date: Mon, 05 Apr 2021 13:17:02 GMT
header: Location: http://10.192.1.220:8003/sbpsAdmin/
header: Content-Length: 267
header: Content-Type: text/html
header: X-ORACLE-DMS-ECID: 9272fcab-5833-4d1d-af3c-eaec0d084d22-0000001d
header: X-ORACLE-DMS-RID: 0
header: Set-Cookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300; path=/sbpsAdmin/; HttpOnly
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin
send: bGET /sbpsAdmin/ HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nreferer: http://10.192.1.220:8003/sbpsAdmin\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\n\n
reply: HTTP/1.1 200 OK\n
header: Cache-Control: no-cache, no-store, max-age=0, must-revalidate
header: Date: Mon, 05 Apr 2021 13:17:07 GMT
header: Pragma: no-cache
header: Transfer-Encoding: chunked
header: Content-Type: text/html;charset=UTF-8
header: Content-Security-Policy: default-src self *.google.com *.gstatic.com; style-src self unsafe-inline; img-src * data:; frame-ancestors none; form-action self; script-src self *.google.com *.gstatic.com unsafe-inline unsafe-eval
header: X-ORACLE-DMS-RID: 0
header: X-Content-Type-Options: nosniff
header: X-ORACLE-DMS-ECID: 9272fcab-5833-4d1d-af3c-eaec0d084d22-0000001e
header: Content-Language: en-US
header: X-XSS-Protection: 1; mode=block
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin
header: X-Frame-Options: DENY
header: 0: 0</msg>
<msg timestamp="20210405 18:47:10.936" level="INFO">GET Response : url=http://10.192.1.220:8003/sbpsAdmin/ 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Date': 'Mon, 05 Apr 2021 13:17:07 GMT', 'Pragma': 'no-cache', 'Transfer-Encoding': 'chunked', 'Content-Type': 'text/html;charset=UTF-8', 'Content-Security-Policy': "default-src 'self' *.google.com *.gstatic.com; style-src 'self' 'unsafe-inline'; img-src * data:; frame-ancestors 'none'; form-action 'self'; script-src 'self' *.google.com *.gstatic.com 'unsafe-inline' 'unsafe-eval'", 'X-ORACLE-DMS-RID': '0', 'X-Content-Type-Options': 'nosniff', 'X-ORACLE-DMS-ECID': '9272fcab-5833-4d1d-af3c-eaec0d084d22-0000001e', 'Content-Language': 'en-US', 'X-XSS-Protection': '1; mode=block', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Frame-Options': 'DENY', '0': '0'} 
 body=

&lt;!DOCTYPE html&gt;



&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Small Business Payment Suite&lt;/title&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    
        &lt;link rel="shortcut icon" href="/sbpsStatic/themes/default/images/favicon.png" type="image/x-icon"/&gt;
    
    
        &lt;link href="/sbpsStatic/themes/default/SB-all.css" rel="stylesheet" type="text/css"/&gt;
    
    
        &lt;link href="/sbpsStatic/themes/default/custom.css" type="text/css"
              rel="stylesheet" media="screen, projection"/&gt;
    

    
        &lt;script type="text/javascript" src="/sbpsStatic/js/sbpsutil.js"&gt;&lt;/script&gt;
    
    &lt;script type="text/javascript"&gt;
        sbpsutil.appVersion = '';
        sbpsutil.context = '/sbpsStatic';
        sbpsutil.requestURL = 'http://10.192.1.220:8003/sbpsAdmin/';
        sbpsutil.protoHeader = '';
        sbpsutil.servletPath = '';
        sbpsutil.contextPath = '/sbpsAdmin';
        
        sbpsutil.url = sbpsutil.requestURL.substr(0, sbpsutil.requestURL.lastIndexOf(sbpsutil.contextPath)) + sbpsutil.contextPath
        if (sbpsutil.url.length === 0 || sbpsutil.url === 'http:' || sbpsutil.url === 'https:') {
            sbpsutil.url = sbpsutil.requestURL.substr(0, sbpsutil.requestURL.lastIndexOf('/'));
        }
        if (sbpsutil.url.length === 0) {
            sbpsutil.url = sbpsutil.requestURL;
        }
        if (sbpsutil.protoHeader === 'https' || sbpsutil.url === 'http') {
            sbpsutil.url = sbpsutil.url.replace(/^http[s]?/, sbpsutil.protoHeader);
        }
        sbpsutil.staticUrl = sbpsutil.url.substring(0, sbpsutil.url.indexOf(sbpsutil.contextPath)) + sbpsutil.context;
        sbpsutil.loadingUrl = sbpsutil.staticUrl + '/loading.html';
        sbpsutil.logoutUrl = '/sbpsAdmin/logoff';
        sbpsutil.logout = function () {
            document.location = sbpsutil.logoutUrl;
        }
        
        sbpsutil.t = null;
        
        
        sbpsutil.sessionid = "f8219c82-f3a1-433c-a470-3ea2b8711c8b";
        
        sbpsutil.systemManagerURL = "http://10.192.1.220:8003/ndportal";
    &lt;/script&gt;
    &lt;script type="text/javascript" src="/sbpsAdmin/login/getMessages"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="/sbpsStatic/extjs4adminapp/app.js"&gt;&lt;/script&gt;
    &lt;r:layoutResources/&gt;
    
    
    &lt;meta name="layout" content="main"/&gt;

&lt;/head&gt;

&lt;body&gt;
&lt;div id="background"&gt;
    &lt;div class="bg-header"&gt;&lt;/div&gt;

    &lt;div class="bg-content"&gt;&lt;/div&gt;

    &lt;div class="bg-sidebar"&gt;&lt;/div&gt;

    &lt;div class="bg-footer"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="appContent" class="layout"&gt;&lt;/div&gt;


&lt;r:layoutResources/&gt;
&lt;/body&gt; 
 </msg>
<msg timestamp="20210405 18:47:10.936" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:46:57.690" endtime="20210405 18:47:10.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20210405 18:47:10.937" level="INFO">

&lt;!DOCTYPE html&gt;



&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Small Business Payment Suite&lt;/title&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    
        &lt;link rel="shortcut icon" href="/sbpsStatic/themes/default/images/favicon.png" type="image/x-icon"/&gt;
    
    
        &lt;link href="/sbpsStatic/themes/default/SB-all.css" rel="stylesheet" type="text/css"/&gt;
    
    
        &lt;link href="/sbpsStatic/themes/default/custom.css" type="text/css"
              rel="stylesheet" media="screen, projection"/&gt;
    

    
        &lt;script type="text/javascript" src="/sbpsStatic/js/sbpsutil.js"&gt;&lt;/script&gt;
    
    &lt;script type="text/javascript"&gt;
        sbpsutil.appVersion = '';
        sbpsutil.context = '/sbpsStatic';
        sbpsutil.requestURL = 'http://10.192.1.220:8003/sbpsAdmin/';
        sbpsutil.protoHeader = '';
        sbpsutil.servletPath = '';
        sbpsutil.contextPath = '/sbpsAdmin';
        
        sbpsutil.url = sbpsutil.requestURL.substr(0, sbpsutil.requestURL.lastIndexOf(sbpsutil.contextPath)) + sbpsutil.contextPath
        if (sbpsutil.url.length === 0 || sbpsutil.url === 'http:' || sbpsutil.url === 'https:') {
            sbpsutil.url = sbpsutil.requestURL.substr(0, sbpsutil.requestURL.lastIndexOf('/'));
        }
        if (sbpsutil.url.length === 0) {
            sbpsutil.url = sbpsutil.requestURL;
        }
        if (sbpsutil.protoHeader === 'https' || sbpsutil.url === 'http') {
            sbpsutil.url = sbpsutil.url.replace(/^http[s]?/, sbpsutil.protoHeader);
        }
        sbpsutil.staticUrl = sbpsutil.url.substring(0, sbpsutil.url.indexOf(sbpsutil.contextPath)) + sbpsutil.context;
        sbpsutil.loadingUrl = sbpsutil.staticUrl + '/loading.html';
        sbpsutil.logoutUrl = '/sbpsAdmin/logoff';
        sbpsutil.logout = function () {
            document.location = sbpsutil.logoutUrl;
        }
        
        sbpsutil.t = null;
        
        
        sbpsutil.sessionid = "f8219c82-f3a1-433c-a470-3ea2b8711c8b";
        
        sbpsutil.systemManagerURL = "http://10.192.1.220:8003/ndportal";
    &lt;/script&gt;
    &lt;script type="text/javascript" src="/sbpsAdmin/login/getMessages"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="/sbpsStatic/extjs4adminapp/app.js"&gt;&lt;/script&gt;
    &lt;r:layoutResources/&gt;
    
    
    &lt;meta name="layout" content="main"/&gt;

&lt;/head&gt;

&lt;body&gt;
&lt;div id="background"&gt;
    &lt;div class="bg-header"&gt;&lt;/div&gt;

    &lt;div class="bg-content"&gt;&lt;/div&gt;

    &lt;div class="bg-sidebar"&gt;&lt;/div&gt;

    &lt;div class="bg-footer"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="appContent" class="layout"&gt;&lt;/div&gt;


&lt;r:layoutResources/&gt;
&lt;/body&gt;</msg>
<status status="PASS" starttime="20210405 18:47:10.936" endtime="20210405 18:47:10.937"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${resp.content.decode('utf-8')}</arg>
<arg>sbpsutil.sessionid = "(.*?)"</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${session_id}</var>
</assign>
<msg timestamp="20210405 18:47:10.938" level="INFO">${session_id} = ['f8219c82-f3a1-433c-a470-3ea2b8711c8b']</msg>
<status status="PASS" starttime="20210405 18:47:10.937" endtime="20210405 18:47:10.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${session_id[0]}</arg>
</arguments>
<msg timestamp="20210405 18:47:10.938" level="INFO">f8219c82-f3a1-433c-a470-3ea2b8711c8b</msg>
<status status="PASS" starttime="20210405 18:47:10.938" endtime="20210405 18:47:10.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${session_id}</arg>
<arg>${session_id[0]}</arg>
</arguments>
<msg timestamp="20210405 18:47:10.939" level="INFO">${session_id} = f8219c82-f3a1-433c-a470-3ea2b8711c8b</msg>
<status status="PASS" starttime="20210405 18:47:10.939" endtime="20210405 18:47:10.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>&lt;title&gt;Small Business Payment Suite&lt;/title&gt;</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:10.939" endtime="20210405 18:47:10.940"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>&lt;title&gt;Login&lt;/title&gt;</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:10.940" endtime="20210405 18:47:10.940"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>You entered an invalid username or password</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:10.940" endtime="20210405 18:47:10.941"></status>
</kw>
<status status="PASS" starttime="20210405 18:46:57.687" endtime="20210405 18:47:10.941"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210405 18:46:57.685" endtime="20210405 18:47:10.942" critical="yes"></status>
</test>
<test id="s1-t2" name="GetSessionIdleTimeOut">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:47:10.945" level="INFO">&amp;{data} = { csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b }</msg>
<status status="PASS" starttime="20210405 18:47:10.944" endtime="20210405 18:47:10.945"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:47:10.946" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:47:10.946" endtime="20210405 18:47:10.946"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/xGetSessionIdleTimeOut</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:47:10.947" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:47:31.887" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/xGetSessionIdleTimeOut HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:47:31.888" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/xGetSessionIdleTimeOut 
 path_url=/sbpsAdmin/xGetSessionIdleTimeOut 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '46'} 
 body=csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b 
 </msg>
<msg timestamp="20210405 18:47:31.888" level="DEBUG">send: bPOST /sbpsAdmin/xGetSessionIdleTimeOut HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 46\n\n
send: bcsrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b
reply: HTTP/1.1 200 OK\n
header: Date: Mon, 05 Apr 2021 13:17:30 GMT
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin</msg>
<msg timestamp="20210405 18:47:31.888" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/xGetSessionIdleTimeOut 
 status=200, reason=OK 
 headers={'Date': 'Mon, 05 Apr 2021 13:17:30 GMT', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'} 
 body={"timeout":30} 
 </msg>
<msg timestamp="20210405 18:47:31.888" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:47:10.947" endtime="20210405 18:47:31.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20210405 18:47:31.890" level="INFO">{"timeout":30}</msg>
<status status="PASS" starttime="20210405 18:47:31.889" endtime="20210405 18:47:31.890"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${resp.text}</arg>
<arg>"timeout"</arg>
</arguments>
<assign>
<var>${success}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>"timeout"</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:31.891" endtime="20210405 18:47:31.891"></status>
</kw>
<msg timestamp="20210405 18:47:31.891" level="INFO">${success} = True</msg>
<status status="PASS" starttime="20210405 18:47:31.891" endtime="20210405 18:47:31.891"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${success}'</arg>
<arg>'True'</arg>
</arguments>
<msg timestamp="20210405 18:47:31.892" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210405 18:47:31.892" endtime="20210405 18:47:31.892"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210405 18:47:10.944" endtime="20210405 18:47:31.893" critical="yes"></status>
</test>
<test id="s1-t3" name="Retrieve Reseller List and Select Reseller">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>page</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210405 18:47:31.896" level="INFO">${data} = {'page': '1'}</msg>
<status status="PASS" starttime="20210405 18:47:31.895" endtime="20210405 18:47:31.896"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>start</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:31.896" endtime="20210405 18:47:31.897"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>limit</arg>
<arg>25</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:31.898" endtime="20210405 18:47:31.898"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:31.899" endtime="20210405 18:47:31.899"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:47:31.900" endtime="20210405 18:47:31.900"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:47:31.901" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:47:31.901" endtime="20210405 18:47:31.901"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/reseller/xList</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:47:31.902" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:04.618" level="FAIL">ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))</msg>
<msg timestamp="20210405 18:48:04.618" level="DEBUG">Traceback (most recent call last):
  File "C:\Python37\lib\site-packages\RequestsLibrary\DeprecatedKeywords.py", line 144, in post_request
    timeout=timeout)
  File "C:\Python37\lib\site-packages\RequestsLibrary\SessionKeywords.py", line 573, in _common_request
    **kwargs)
  File "C:\Python37\lib\site-packages\requests\sessions.py", line 581, in post
    return self.request('POST', url, data=data, json=json, **kwargs)
  File "C:\Python37\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "C:\Python37\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "C:\Python37\lib\site-packages\requests\adapters.py", line 498, in send
    raise ConnectionError(err, request=request)</msg>
<status status="FAIL" starttime="20210405 18:47:31.902" endtime="20210405 18:48:04.618"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20210405 18:47:31.894" endtime="20210405 18:48:04.619" critical="yes">ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))</status>
</test>
<test id="s1-t4" name="Read Card Processors">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>page</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210405 18:48:04.622" level="INFO">${data} = {'page': '1'}</msg>
<status status="PASS" starttime="20210405 18:48:04.621" endtime="20210405 18:48:04.622"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>start</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:04.622" endtime="20210405 18:48:04.623"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>limit</arg>
<arg>25</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:04.624" endtime="20210405 18:48:04.624"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:04.625" endtime="20210405 18:48:04.625"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:04.626" endtime="20210405 18:48:04.626"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:48:04.627" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:48:04.627" endtime="20210405 18:48:04.627"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/configuration/xReadCardProcessors</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:48:04.630" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:04.635" level="DEBUG">Starting new HTTP connection (2): 10.192.1.220:8003</msg>
<msg timestamp="20210405 18:48:08.307" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/configuration/xReadCardProcessors HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:48:08.312" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/configuration/xReadCardProcessors 
 path_url=/sbpsAdmin/configuration/xReadCardProcessors 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '85'} 
 body=page=1&amp;start=0&amp;limit=25&amp;csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530 
 </msg>
<msg timestamp="20210405 18:48:08.312" level="DEBUG">send: bPOST /sbpsAdmin/configuration/xReadCardProcessors HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 85\n\n
send: bpage=1&amp;start=0&amp;limit=25&amp;csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530
reply: HTTP/1.1 200 OK\n
header: Cache-Control: no-cache, no-store, max-age=0, must-revalidate
header: Date: Mon, 05 Apr 2021 13:18:04 GMT
header: Pragma: no-cache
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: Content-Security-Policy: default-src self *.google.com *.gstatic.com; style-src self unsafe-inline; img-src * data:; frame-ancestors none; form-action self; script-src self *.google.com *.gstatic.com unsafe-inline unsafe-eval
header: X-ORACLE-DMS-RID: 0
header: X-Content-Type-Options: nosniff
header: X-ORACLE-DMS-ECID: 9272fcab-5833-4d1d-af3c-eaec0d084d22-0000001f
header: X-XSS-Protection: 1; mode=block
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin
header: X-Frame-Options: DENY
header: 0: 0</msg>
<msg timestamp="20210405 18:48:08.312" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/configuration/xReadCardProcessors 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Date': 'Mon, 05 Apr 2021 13:18:04 GMT', 'Pragma': 'no-cache', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Security-Policy': "default-src 'self' *.google.com *.gstatic.com; style-src 'self' 'unsafe-inline'; img-src * data:; frame-ancestors 'none'; form-action 'self'; script-src 'self' *.google.com *.gstatic.com 'unsafe-inline' 'unsafe-eval'", 'X-ORACLE-DMS-RID': '0', 'X-Content-Type-Options': 'nosniff', 'X-ORACLE-DMS-ECID': '9272fcab-5833-4d1d-af3c-eaec0d084d22-0000001f', 'X-XSS-Protection': '1; mode=block', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Frame-Options': 'DENY', '0': '0'} 
 body={"cardProcessors":[{"id":"P2EqpaxBJf1agYMeI1mCEX1eYNEmE5Vr4VZM07IUry@@@ThbrzQhOjEFYYX@@@LuXeaIRMrHjJJVCqOOGNcIO9Z3e8w@@@GPKlIFshi2M9Lu!!!wEJsr!!!FXluBWRLJfUko0IvhTTejuFKXbQ!!!dK0w55bFmYEsTwhJaHmNL9wjvpRjp7zJLo=","name":"CYBERSOURCE"},{"id":"YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnf2cE43QJq1I4FOSVttVtYagf5MMTfOFQ8NNG@@@eM5FzOPc@@@mZzX40k6PGw0vQ7APWgXvHDs!!!sR3jWMPGdcRsEJ18shce1zj7FE@@@3uJSGcX0hQ62sEbiHLbj4y38otUNQk7W6nmwwgg9j0=","name":"MONETRA-AZ"}],"success":true,"errors":[]} 
 </msg>
<msg timestamp="20210405 18:48:08.312" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:48:04.629" endtime="20210405 18:48:08.312"></status>
</kw>
<kw name="Pretty Print" library="CommonKeywordsAndVariables">
<arguments>
<arg>${resp.content}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>To Json</arg>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${pretty_output}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<msg timestamp="20210405 18:48:08.314" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210405 18:48:08.321" level="INFO">To JSON using : content={"cardProcessors":[{"id":"P2EqpaxBJf1agYMeI1mCEX1eYNEmE5Vr4VZM07IUry@@@ThbrzQhOjEFYYX@@@LuXeaIRMrHjJJVCqOOGNcIO9Z3e8w@@@GPKlIFshi2M9Lu!!!wEJsr!!!FXluBWRLJfUko0IvhTTejuFKXbQ!!!dK0w55bFmYEsTwhJaHmNL9wjvpRjp7zJLo=","name":"CYBERSOURCE"},{"id":"YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnf2cE43QJq1I4FOSVttVtYagf5MMTfOFQ8NNG@@@eM5FzOPc@@@mZzX40k6PGw0vQ7APWgXvHDs!!!sR3jWMPGdcRsEJ18shce1zj7FE@@@3uJSGcX0hQ62sEbiHLbj4y38otUNQk7W6nmwwgg9j0=","name":"MONETRA-AZ"}],"success":true,"errors":[]} </msg>
<msg timestamp="20210405 18:48:08.321" level="INFO">To JSON using : pretty_print=True </msg>
<status status="PASS" starttime="20210405 18:48:08.314" endtime="20210405 18:48:08.321"></status>
</kw>
<msg timestamp="20210405 18:48:08.321" level="INFO">${pretty_output} = ('PASS', '{\n    "cardProcessors": [\n        {\n            "id": "P2EqpaxBJf1agYMeI1mCEX1eYNEmE5Vr4VZM07IUry@@@ThbrzQhOjEFYYX@@@LuXeaIRMrHjJJVCqOOGNcIO9Z3e8w@@@GPKlIFshi2M9Lu!!!wEJsr!!!FXluBWRLJfUko...</msg>
<status status="PASS" starttime="20210405 18:48:08.314" endtime="20210405 18:48:08.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:08.323" endtime="20210405 18:48:08.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='PASS'</arg>
<arg>Log</arg>
<arg>${pretty_output[1]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pretty_output[1]}</arg>
</arguments>
<msg timestamp="20210405 18:48:08.328" level="INFO">{
    "cardProcessors": [
        {
            "id": "P2EqpaxBJf1agYMeI1mCEX1eYNEmE5Vr4VZM07IUry@@@ThbrzQhOjEFYYX@@@LuXeaIRMrHjJJVCqOOGNcIO9Z3e8w@@@GPKlIFshi2M9Lu!!!wEJsr!!!FXluBWRLJfUko0IvhTTejuFKXbQ!!!dK0w55bFmYEsTwhJaHmNL9wjvpRjp7zJLo=",
            "name": "CYBERSOURCE"
        },
        {
            "id": "YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnf2cE43QJq1I4FOSVttVtYagf5MMTfOFQ8NNG@@@eM5FzOPc@@@mZzX40k6PGw0vQ7APWgXvHDs!!!sR3jWMPGdcRsEJ18shce1zj7FE@@@3uJSGcX0hQ62sEbiHLbj4y38otUNQk7W6nmwwgg9j0=",
            "name": "MONETRA-AZ"
        }
    ],
    "errors": [],
    "success": true
}</msg>
<status status="PASS" starttime="20210405 18:48:08.328" endtime="20210405 18:48:08.329"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:08.323" endtime="20210405 18:48:08.329"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:08.313" endtime="20210405 18:48:08.329"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..success</arg>
</arguments>
<assign>
<var>${success}</var>
</assign>
<msg timestamp="20210405 18:48:08.331" level="INFO">${success} = true</msg>
<status status="PASS" starttime="20210405 18:48:08.330" endtime="20210405 18:48:08.331"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${success}</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210405 18:48:08.332" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210405 18:48:08.332" endtime="20210405 18:48:08.332"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..cardProcessors[?(@.name=='${card_processor_search_string}')].id</arg>
</arguments>
<assign>
<var>${card_processor_id}</var>
</assign>
<msg timestamp="20210405 18:48:08.335" level="INFO">${card_processor_id} = YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnf2cE43QJq1I4FOSVttVtYagf5MMTfOFQ8NNG@@@eM5FzOPc@@@mZzX40k6PGw0vQ7APWgXvHDs!!!sR3jWMPGdcRsEJ18shce1zj7FE@@@3uJSGcX0hQ62sEbiHLbj4y38otUNQk7W6nmwwgg9j0=</msg>
<status status="PASS" starttime="20210405 18:48:08.334" endtime="20210405 18:48:08.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${card_processor_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:08.336" level="INFO">YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnf2cE43QJq1I4FOSVttVtYagf5MMTfOFQ8NNG@@@eM5FzOPc@@@mZzX40k6PGw0vQ7APWgXvHDs!!!sR3jWMPGdcRsEJ18shce1zj7FE@@@3uJSGcX0hQ62sEbiHLbj4y38otUNQk7W6nmwwgg9j0=</msg>
<status status="PASS" starttime="20210405 18:48:08.336" endtime="20210405 18:48:08.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${card_processor_id}</arg>
<arg>${card_processor_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:08.337" level="INFO">${card_processor_id} = YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnf2cE43QJq1I4FOSVttVtYagf5MMTfOFQ8NNG@@@eM5FzOPc@@@mZzX40k6PGw0vQ7APWgXvHDs!!!sR3jWMPGdcRsEJ18shce1zj7FE@@@3uJSGcX0hQ62sEbiHLbj4y38otUNQk7W6nmwwgg9j0=</msg>
<status status="PASS" starttime="20210405 18:48:08.337" endtime="20210405 18:48:08.337"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210405 18:48:04.620" endtime="20210405 18:48:08.338" critical="yes"></status>
</test>
<test id="s1-t5" name="Read TimeZones">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:48:08.341" level="INFO">&amp;{data} = { csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b }</msg>
<status status="PASS" starttime="20210405 18:48:08.341" endtime="20210405 18:48:08.341"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:08.342" endtime="20210405 18:48:08.342"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>page</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:08.343" endtime="20210405 18:48:08.343"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>start</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:08.344" endtime="20210405 18:48:08.344"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>limit</arg>
<arg>25</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:08.344" endtime="20210405 18:48:08.345"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:48:08.346" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:48:08.346" endtime="20210405 18:48:08.346"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/configuration/xReadTimeZones</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:48:08.347" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:08.911" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/configuration/xReadTimeZones HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:48:10.087" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/configuration/xReadTimeZones 
 path_url=/sbpsAdmin/configuration/xReadTimeZones 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '85'} 
 body=csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25 
 </msg>
<msg timestamp="20210405 18:48:10.087" level="DEBUG">send: bPOST /sbpsAdmin/configuration/xReadTimeZones HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 85\n\n
send: bcsrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25
reply: HTTP/1.1 200 OK\n
header: Cache-Control: no-cache, no-store, max-age=0, must-revalidate
header: Date: Mon, 05 Apr 2021 13:18:07 GMT
header: Pragma: no-cache
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: X-Content-Type-Options: nosniff
header: X-Frame-Options: DENY
header: Content-Security-Policy: default-src self *.google.com *.gstatic.com; style-src self unsafe-inline; img-src * data:; frame-ancestors none; form-action self; script-src self *.google.com *.gstatic.com unsafe-inline unsafe-eval
header: X-XSS-Protection: 1; mode=block
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin
header: 0: 0</msg>
<msg timestamp="20210405 18:48:10.087" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/configuration/xReadTimeZones 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Date': 'Mon, 05 Apr 2021 13:18:07 GMT', 'Pragma': 'no-cache', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'DENY', 'Content-Security-Policy': "default-src 'self' *.google.com *.gstatic.com; style-src 'self' 'unsafe-inline'; img-src * data:; frame-ancestors 'none'; form-action 'self'; script-src 'self' *.google.com *.gstatic.com 'unsafe-inline' 'unsafe-eval'", 'X-XSS-Protection': '1; mode=block', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', '0': '0'} 
 body={"timeZones":[{"id":"QDGfoL8MVLLkKlpT0Z!!!nAz65xuXssPmzop8KKtZcbpjbGzOPL713OMwJtYQjdL7DuafsrEoVKSDkQmpaE!!!dBmMm40G1XNxmrDBjsoLTe26TJbbN6YaGWbf1iJmnhTHWWVJmO8Tyc05Dvn4V8ERlHQYN89!!!C5iR7x","name":"(-11:00) Pago Pago"},{"id":"P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n","name":"(-10:00) Hawaii"},{"id":"YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnfNUZwrtvFGL3AsxgAZnxsPfK54RtD8DUESOThwav73qL@@@KrHshFU0FuZKlyNBH8LUyGBI5tScD1JGurCVLoQedIeIlFCYIKfQtAd65BnvtrydikkAWC4DZzVJEsTireTa","name":"(-09:00) Alaska"},{"id":"p30JQBweOKtmwqunIpMU@@@B7T2cTGj5iGlJV@@@98eYkoLpQD92rNIxhzhFdE7lZ9FIEiEi0sBgqI!!!WRsCHg28YOLrTJi2@@@Cvfopjwar3eXkNLMyFdl84doJO41FghYfZ7@@@YtYjZBrypxpf140J90y@@@Z52eI0985jKE","name":"(-08:00) Canada Pacific Time"},{"id":"8IbQ47tlirpyxtiLV7Q6D6PqxzbG9mKt6VkGWgXBrsLgYL40hiCH0B4TUpnCLL5yCT6WSyqMQCljhuwtaTorpUE4KCQZO1KUsUFNoVKkf1mK57EhXUuEzY3JoBPaRTtt8033ndLM1G5!!!lWpj5Kh7G85zXlAn7bZR","name":"(-08:00) US  Pacific Time"},{"id":"KNSKzuLQxohxf4s0WjV3G2WBjjvhTp4qwxQruRvlc3o07KlX1Xz6x4iknV7jkBfG5osObDjqiGVNGGJI9Hlg1O2d7A4hkfErVCXVO1E@@@gV6SNcK5MPGXsTzFITkh4UgaK0tXcKt6!!!TR2DJQ1Eeoa4JtMZEq!!!ISuE","name":"(-08:00) Tijuana"},{"id":"uF58sl8EURFj8eDszm4KS2!!!xA6ZYNmlSXvwwmjsh@@@66yQcWA!!!ZsHQKtdClGUgxbuyiuO@@@sw@@@lOOjlv0HG@@@6r58GqDUVByEsG9z9m2shlCTDEEJzKbHoTMEp10hXw5c2mshgws1EgNXif2eD4lzuWShsFRKU7e3p5","name":"(-07:00) Canada Mountain Time"},{"id":"QCPRZXsVFXmAnFvf4iPYgHGKFZUTwnawVb81TZlm6lzKTtWs9Mb0uYLJxRwSmoZcGGJS2X398@@@9OjkmZf0SORPW47IiuEwuc45yp4TUBVJqTCeC1RSZCEwPuJR@@@fcuCEsYzFqtzFkyr3PayXc05ga4aYG4Jpr1tL","name":"(-07:00) US Mountain Time"},{"id":"5LtTRdcCrBTrKk3miwBYMGiy7zyYLyvs00UF7whZDTdiUfiwRIAY!!!FG!!!@@@f5kHAXbOYVN2tqo9DBnlIF17FFiQ6cHG9tc8lmnXVwN0@@@Xk6Yo@@@4VdpqC0Vx@@@MnLUfp!!!ibrLj3AJWgZxFnBD4YV3@@@@@@0wx8OJydRsCvs","name":"(-07:00) Arizona"},{"id":"2sKbbJ7HH1j6Ef1aqits!!!U9JZ4ROCK9NrYaSHoDhWv1KQBE74HsHd8ZC!!!QP9R9tVThOsTvgNiByni17@@@scZXb9CUZQINoi6qrr8MC6inzfSeWq0rfepF3q0k4DsP9hb3xdEbInocLThRGzIl1EeRL1jIfg!!!hOtit","name":"(-07:00) Mazatlan"},{"id":"@@@6lOnOkaFfC9s8LevkM7HSI5CbIZYfy104RVEIy7gRJu631fD59g7Blunr6oNeOdq1pgzDKEhpNI3VDpDsgPEA9ha4Mr77e5ncEgNg2O6WspIgNJku3Htv45Vb6MqHq2@@@1d@@@FHhEEiuTIpSXqyUU2gHvBW@@@9tehA","name":"(-06:00) Canada Central Time"},{"id":"GM0Cjjmcetk1mDzXLZ1hYda2BjjfC70AO1NFypPjRVdoW3HXuOAFZbJe4HbkoV!!!FuPEK8c6jkdM3VuCIEeJbZE6hEVX0wZw@@@ZTF6ThvFTJ8a28SSrl5HiVoKHxOzrLzM3L8dgyR!!!8ae6gduJnsqiouuL43QNFY2N","name":"(-06:00) Saskatchewan"},{"id":"6FTJDrQa7OK2m0tWYi0vHulkLclIDYAUTXiQl0vR42mdAYBgDijWMPhvASJvsbiqFbBtvhoW3acIJN!!!x4WTrb6aeD@@@hiPiuVsWPhF04WIKa0Ot43pyJMuqr3vG2qhjwsV5MmdGqihRpNpPldy8F6C@@@pnl7LBMJCR","name":"(-06:00) US Central Time"},{"id":"E!!!rMBpItFI2XLfVFB1U2OI9ROkATCbQ!!!X9X01fl9kvlfYHpV!!!HsiN21zhmK!!!Tt4aviofnEZog!!!vBHuXy85ODCBDpzHJaelIvMkEZ!!!J2@@@Ra1Vz5r1PjJU7trlaVwJMqvMti@@@IxIoWKLOaJ3u!!!9GUVLUt9yFihGrW1","name":"(-06:00) Mexico City"},{"id":"I5RRim91MU7cFETGAR5b8XAoS3kyA1yVLIFvP4oV4vgnwLOv9jHt10w1Daqo80ylX7b9tUUbm5gO@@@pzR9HtO1Ar9AmjsOVhqLdlesWvvVC8Hif@@@EapY7w2zhvuU!!!Zx6Ra3IJ08U7d!!!0ogNbxFz7yttR8gUI4A6TI","name":"(-06:00) Guatemala"},{"id":"A1gLCd2OCZFFK@@@gOK58MlKX3iaNc7RN@@@Yat7G5tdnK5nVp77B7LgOK@@@KRtZgxF3vX8ieVVlymbAziHOfaG04OWd2ARixdjNCEBorungQk1RU9DqmaQ@@@UKAvDbnw46akixNaDB1HuN48QFdzPpKx8IJWyElJTMM79","name":"(-06:00) El Salvador"},{"id":"tgNA51ANaDItho7DU7JfREv8upt@@@7rywDBeVgz9YEvRj!!!2!!!jQT593L3HA@@@OGP8J8QgVmJbivF6UQ@@@5fVxeckWFWwwzwzG718mDh!!!C@@@S7FRoBscbMt7a4adCsVSwft@@@zU4mON9CXiq77lJwPFjBmouoN5FsOJpVrl","name":"(-06:00) Managua"},{"id":"M8K4pYy98k1FZcadaL8di5FjHhxzqcJ0urgquggSjCcE@@@f7Y@@@74FNf8G9zV!!!4Vo!!!4pZyU4@@@RlqVJHvT5CHIz82f7y8f8FotIenNVDnDcWDbWhgKLXA1W2lF73Y3jAr0G@@@Aac@@@k1lXuwKMvuM7D!!!QoYGDlHFDd6X1","name":"(-06:00) Costa Rica"},{"id":"IcwnA!!!8CLGUsIbX7LDN9uthElPjIyaYXgSoGYpxn7a1NM2AHMih0y5nuS0rLHAnJVm0J1JiB1gHX7V3dMQoUX1PxN09ecC7vChVa!!!z5ynQMQvid5m27ZHZ7qoCLXGGIzBx0PMybFWe2o5nTa1khzKled0k7Uvx76","name":"(-05:00) Canada Eastern Time"},{"id":"bVZxoE15cjzA0u91wf7yK1AUDh2giB4C95ItP43bz27WtyYp2lWOb5HERLgITJn7@@@J2h2F6A1s8jUXI84e6jQOX659lZRHIL196vLpRca!!!sJgZVfp5F1ij9rL0jpXiJw@@@qWVFaoAZeSHNZcXtQjqr1uOlajQWkS2","name":"(-05:00) US Eastern Time"},{"id":"N4uqcQ9A3iH4JZA3TQpDDpteO7C2TPUI8WxePP1nJ5VGQ31RHtOk5JJ1y0KrgiPZoYLza@@@z!!!GEPAHZTCd@@@HOJIhYm@@@jBH2nZoyPKj8E1ozwVwMf0NB6mu6u4RPRNKPIxPveoiJ5ScnK6OB!!!oz!!!SqgTu2v7RRO94d","name":"(-05:00) East Indiana"},{"id":"qsMmVw71Y7ghm2iZzR6pcE2U20Dx3sNTh3XPJE61wxd@@@UOzEyQ3s7wYHHe5H0G0jC6I6MpbEnLWn@@@qoJEw3xxK0DymVfTk2odkM0DCstuAvES@@@9IRggSwnQFkRZWs67bAv@@@s3suU@@@FgyOuAcdZfC9awKuC7SyxdK","name":"(-05:00) Panama"},{"id":"eI4vWYPAFTTV!!!5082y7HxgWkMgfH@@@Epir4OO9eUO2hRK84zNTz5oGImOQ98QBJBTvIMC@@@QuU29f9A48PCWHix5ECcvH!!!ug5X6wx2ZfcrBQb@@@z!!!4K6oh!!!NczxEP6XmaM7rOQSzu3z6T2bl@@@XW6U@@@1yIMVROt4wG7s","name":"(-05:00) Bogota"},{"id":"hGjUff1QUMHS@@@M!!!He60IJ7nyF6LaBtsGRDvTkkL!!!uvdy6GcpC85ClBzC9IP1r097PrLESsdiKBErkTXQZtPhLBg6NQM!!!gKUxiNIg0Ocj0XT5gUHWG8tNh7hagJcOGI!!!QqxDoSX4!!!5p0eVy97F6oIUZRto8T5KPaW","name":"(-05:00) Lima"},{"id":"jdhhLXlLvTb7lw3yLlUFPuq3KxTjaiWfyh37PbH7W1QQO8g8PNL8eciHBlVjCiDLz9WG!!!tyZ9LWvlwRkdNBuH32zLk8KGXNVPkGRzYyqVuoP6qEfqjzFPRojZiGkKknWv1ZuqhjBWCb6Myn3IA1UJgD0EFFvwr0F","name":"(-04:00) Canada Atlantic Time"},{"id":"lvaqBUpKRddNWiun2oWWWb8kHR5Qcs76RBEuuxpuwD0ahMg76ecbe6XiBKrAwPYFVhYCyk2BJhNaGTCp@@@4HDYueFbxQ2qXTvFBV0cHd6VVHeorAlCHw!!!riQLD7d4goAHEC@@@aV090wOwlZXt0nw0SKHO0vGmkfTmh","name":"(-04:00) Puerto Rico"},{"id":"yday8Oua5q1ruxwrnrk2uUhaXUImDi7R02bThU@@@EYZNv9WL00cgC63mtxCuQVCR93JSYA@@@kJLQsYtIhsPa5snUZ2uP2mBvPICSJuF@@@Vfx3ISjl8RkRneF!!!zh3wR6oYEzC1cS7!!!Z9dC@@@XGSSk!!!ly7ZtUa@@@3qPUHnP","name":"(-04:00) Caracas"},{"id":"4cEfiRmDqyYI!!!q5UvqzrHKBrF6MgKl0IQAEbHd@@@gm6ztKUOchxlDGx@@@6CKaeWGhfPJNDApoMqtu3mM2Et!!!ukb7mFs4Nm4uuDumhe@@@vob2Rc8Ae0gezXLPDOP0PtrSzS!!!z!!!kYdkV2HMzCYD1rSA2TcTJz4Vzkeyq2","name":"(-04:00) Santiago"},{"id":"l3c1VCebOvgJBCjpMP3RADpMSXF6@@@sl27ko9dzFzmmAKiEam35BP4JY4T0EeVdwrUdYX2wxSElcXYPVf7VIP8XJ1vuiRIOIpjSd3ThxdauU3RERy85MzNpXG9qjFWnJ9QUMX74pV4a@@@@@@Zb!!!6JYVUZU1PdRLXPeDA","name":"(-03:30) Newfoundland"},{"id":"4PZaFvt!!!7n1TedetWYPjjeAbsUr64fvD6BRMxj9OMQbnM2q9B43dM3xYje7WzhiV1ESnNHlpeVIPzyiFZI!!!P8frUF5!!!bSE8IOfnTQVw0Bydub5!!!bF77DGc4jOsqpFzdjyljerfCZkMD4w1nA8bTP58RUjHXsamJL","name":"(-03:00) Sao Paulo"},{"id":"GA65sBkIivWEXO8ljCWZj22EoXOWhT5oNpM21wGIWTlZxTfX3D!!!6j4ELKO4IYo7FlHJpgOrkIpPYUbpGbM2nBJUOTCZ4zLFsmvyb12DvZy0ecCW9tLmCPeLK2sgUOu9xWlEi46TbYRpWgokg7kWVpGCLM31JmB53","name":"(-01:00) Azores"},{"id":"zmuoZNIACprVyl6lM2YBYQA4EIifAvPZoRtQwy5gB1YQtvTloiqeptBPdaiVbynT@@@3nl5@@@n9IVvZtoS87YBJXMaU9xQLZE1Y6ON2mvAsD4PF9!!!9ebx0rrpr98LykPtpwbsiBNqwllEg6pNyIRK@@@JiDukQNB7FPQK","name":"(00:00) Universal Time"},{"id":"D6LsACo5wQa6SkCVqIhiyCN7qe4kFp0SHN2AB8I!!!l2gUFri2vj54SD7YwqPh8eUvzKrRFqeqsRK3uZcBiwAG0WOddJzBMHy8GsJiSk7DU2gt1mKOwRYuGcfWovJUSvINwS7AH@@@VOvUm!!!0jULNwF@@@lHziz5MgzKwC","name":"(00:00) Reykjavik"},{"id":"9@@@@@@cxwTk63nr44@@@fZhCWyA3OG48XUtrHA8OR6o@@@zKf62sUQQCy3us@@@escFL0GafQQxVfeXobDvQAHQAsL@@@IqluxTuCp0XVbD8nFCqZNkpthAc4U0nr5Z3UitvgkjyL95quD19y88jNShk980YXxMnpzvejV@@@XMi8","name":"(00:00) Dublin"},{"id":"xhookJpU1sCf0R6fRU96Jw0r6SRXJ1KCX5PPSjgCcS3TOi@@@puzosGr!!!1yoi3Di9d@@@73Z39x5fzOk0yVLBmruvAC4dvhsb8NRYAAxEf5HkmtYL@@@yyV6xGs3Mq@@@DfOeVZ9Ssbhp3FG2vorfuwnYrjCUykikyuGJHrW","name":"(+01:00) Madrid"},{"id":"DgHRmUwV!!!DGn1!!!YApW1hwqCYaJx!!!1peeX@@@9j96e!!!K7AHBgeYKzHtZvnto!!!86ygq8EtdH5fUxDaIHnQ7r26q7FMch8m!!!yNDRLmJRMfIkIlqBiIiUWqQneUs3561G1gcW73PcgqZqW4oaaQVjBIFRq1nhDvgIHUMN5","name":"(+01:00) Zurich"},{"id":"r1EDjRPf7k2GmDS3BcP965vDFQGW!!!rGzXpf3B9u9SXikg2DFbmyNwOEoV0xvN@@@DTfIaV5zASrO7vM6@@@5oK0TUf2K5VvZvs8Bx1iVhafPLCZg7nr!!!Z3zOEks01dz39dGxl2jCYmWlA4lhk19DrMwQwUERWcE5M43q","name":"(+01:00) Luxembourg"},{"id":"Tgi@@@YeIA2tbliAu!!!EIkeR86@@@uR5SC5mXNbYyA0sVBWAyESUPQJFxi!!!MlyfmQFLGg85qyv6vDUDrtr6gZPR@@@D@@@PuiiFUC4egalMkUUB2jpgSjfL!!!h9P@@@CJERN!!!55BDx!!!aNKxBxSuANUNLsPONXv6wcQwit2ltVMzn","name":"(+01:00) Paris"},{"id":"nUCFzNX8HYE74mOJ7ySugWg9w0upzsQ791HWj6mDTcUt0zmPipaAP1yz165w51gC5SWepXFp!!!n2KNWKL!!!oE3XP4OrVyIY5ZNqQWE9vgSAVN969Ee5c6p29LG!!!l7F@@@uOueKVvwbA!!!EwMobWngNnAv63C8c!!!Yk6Wk3","name":"(+01:00) Brussels"},{"id":"Gl9rh6NkEJChm!!!qNyN@@@QsLotBcza46!!!wGKXJnElth1XCu9V!!!k1r1ndQhbYRMlN44TSR3itVBxKKP6h1AN1BVWo3PcRkM3wOaSaoZ7TNng1DwEeDYg80NPJHl!!!ZlkO6Qhlg3xEUbg0T4fEZRRlKXSRtsUNVA1LmZv","name":"(+01:00) Amsterdam"},{"id":"gyVfyqQPPP24v150bcBh@@@kFzXP2DiKWnkZpwYqnWA!!!yw7QbNYVHDTOdrxjyJgMk2YPubt77Hffu035Fs5NT!!!EPff9@@@graSjHa3Xy@@@UMQjCrcQd7DyPE8ko5dJ1NvFZr4GJLnH8b7mS@@@GJVl4d8uCO95P5OiTCTMP","name":"(+01:00) Berlin"},{"id":"qw4CV@@@DnNGN33L!!!ADUlGCde8m6o4!!!8WymSaZ!!!usF4eWkImNOE8Y9BAGJM9pulYeLFoESypmo24wgin3IPmrETGtrwk9Z7WS2RLB2yIt8IMGRQUkiiRptyJN1m5pMRDv!!!ayMTIBys2K5tyzzNuPqUV@@@4HfzKnrnKk","name":"(+01:00) Copenhagen"},{"id":"yHcU7woOkr6fQzW379UhSo5WUJwZ71vkur@@@2Y8lrj4ZL2xJwcZRUCLGHHh5wDJ9Lbb3BH5WQlMYM7sAtoSFJkIiTPnq1SMumMBfP@@@fS9GwUhL3u7WMSJL8ehK2VZvSVcBYddlwO2i6@@@u!!!eAYJssN!!!AXWfFThAEVd","name":"(+01:00) Stockholm"},{"id":"dFEJqIWLq3hn7A3NxP6wbM8glzgbWlgB2KFIuL7mKlcqVeqtTZi@@@l8THh7dW55CRsadOghbFsdxhfRa7wX!!!VbsNT9y@@@FCX4mW7S38HNHk2TU4jPitYj75PIAz562tlONJW@@@DIkK8YaR2IAhP6gWZagCtcEXpRMMR","name":"(+01:00) Oslo"},{"id":"hmrIZOYMg031NcXmb8T8vu!!!SZxTKLewH@@@NyWgNwVQjxdzZsNb7@@@3onF0RdasJTf@@@OtaHC5qHN5G1bV2T@@@wh7FWvQzDKwR8SqhGhBzAMB5xYpQ@@@JwFefpcZJ74v9uFNCXXpEbFdZAJ!!!lj6YTO3oO@@@h2LkE3LE78TT","name":"(00:00) Nouakchott"},{"id":"SmHmX5M!!!w9gYg3XEb57P3QUzu0nw5lEgSVQoIDHW!!!i6C9c2UfKI9E9!!!H@@@IRdonwlWwvAtZwKSepa90IuXKJkolTRUoqNYeXj09e85b1ACT4kCqt04JRqTrUrCHPMvKVFS9AwJNCc0CFB2aoIx@@@4S73lCgTA5jsdN","name":"(00:00) Casablanca"},{"id":"RCJL5NRQPoKksG9QemzMFBMaqDctEBPyT2btm1PCxXwN6og9bOjIx@@@600Z3qpasqCOm5WzhHGqkIqcpXG6dCe1nkJxo8RaJfvrvw4lMnLDpv5jombqdxZCDFB4jOr06bpjk6aWJzBBVUVWNPhUgmDTFke2WDf!!!vB","name":"(00:00) Lisbon"},{"id":"dYYei37hiflqYT5BiWwfE7AattKE25cxqaIyxeyZfvaxk@@@aVM51yzEVSfrwIr34qRjmCoQcnFBsxukmuI3FJyfR@@@VgP1Sn34eNxHVf2TApOJGnhPdMPzFULQhXRo3fBUS@@@pfjIt0E5FZ3mjpEPLVSPyLUAu8F@@@8l","name":"(00:00) London"},{"id":"mQKbW7QMayZN6BCyeYmrAmkYst8m@@@MKNVjNKVlUUwmGAA6i3mTna2PRaCar6MZwVjPf3owTg00k8tAxCL0iJ@@@vZTnSpoDM8oTbTYZRk3rLndxj!!!gJnGN4sMUNWr6DPF1eLTn04ZXiXWpuEAqNj!!!rnsPBjj0u63mY","name":"(+02:00) Johannesburg"},{"id":"buqzt6JjjbtkQLnorJpb1X@@@IQbT0X8PZlO69G1mOA1wveNR@@@KW9OA3uCa5fmS@@@6AVgzIN3I67f1uw4HmIvfs5WZCTdSHx8UuyV1N@@@NPR1sE5Nm!!!0bt1ZA6tD8gW2ywskXJsAJDvnOArukr!!!rPAlwFLoWvd26TcZO","name":"(+02:00) Cairo"},{"id":"fb@@@KWV2fzPIdllK!!!wcNVcDHM1O3Cllf5X7YNoFvi5kS3WlGBGYGULA8cyokfRgRce5Y0O9nOJfBur53H0YBmj3R8ZgdV5psoQCnwCgqwNk2eHKPSivsJzngsQYcW6hhWNV!!!V!!!3TKjV606yaNUZt!!!6UEqB4XaN6Dp","name":"(+02:00) Tripoli"},{"id":"sJm574MjBqqu6hgaSm63WVlW5OiO7fcfKsLoO1TbAgmaE2O0PXd5rPEoN7m!!!cy@@@A@@@0s4nFcKnJd8YMD0ytZEVtYC7kSQPgg2VSasS5dniZ@@@HFh@@@pGc7xtQttmnchrebVxotl4gfXIxEmyICo72cgSzrgMWmQ@@@zgc","name":"(+02:00) Amman"},{"id":"81O69NXg5q5DDAI3YQIsIddUFqe2Bg4fY942iNP3rQDtzz4YBHINUSwGtE!!!UbZFDJXIx8iW43tyQcCeI4u9IH4@@@YOYn!!!AFV1qVK!!!9oixsofjPO4ZeRoJlnw@@@LGURmytn1lGyduif8EaPy0GzjfCRs7p80pGe1m@@@!!!","name":"(+02:00) Jerusalem"},{"id":"1v09AmqpklAKmjQEFwOcTcG@@@dDQ3EmH@@@Ki7HOg0oxwHJ9NnMUX8nC8jm7b3TOX6@@@R13mefUamnxAb4Goi642LY!!!70KtTKZEe04UAdoS3O4eeXXFFBMCoLQxo8qRQ2TeM8gq6AoonwHdPuX72jFwIgmwF1QB89hZD","name":"(+02:00) Damascus"},{"id":"gUMbU0FrbSJVZuvBiv8XYhDfg6zZo5LnP27h0CDTHa3mN!!!Ozub!!!P8jypJGdyRG2fw6Dy6AbY1vRo2h4bWGc8iRD7OsafrWYsnaOE4TQXVUyzDH3U6UmYvZjaRAmXMWwWVPfTcle@@@8Bp!!!X3sE6V2NZh6vWDfarMjD","name":"(+02:00) Beirut"},{"id":"@@@e13ZS0IlfRJZ9Bu93!!!Si!!!5YzKh3wlWnjEvDhDyw7lGnf0USJ3dxpHvS6GSyOTuSAH74h3ebEmOJIceBWVi@@@r2OFLRzBEE!!!nUHtCkiKAq6N0FEQXDCZbMcYpuy@@@Ug0rznsbbm18Y10TEbO43XuOsJt4n8sXqbJgK","name":"(+02:00) Nicosia"},{"id":"UAHy48ngyHA7EK4K9M69h96OzUFBKpZWaW4JT@@@Bq5NrqNZGJY2iZHJX5ZoG0ua9U67gwGAz8hO!!!rGTmlKQy3oaj2Mjt5RtRXV@@@qgUZjpjlTI1rPoqpIJ0pLi1bJrZqE5qfNnS9GYntA88xYVXCPAou46HmOePM3j","name":"(+02:00) Athens"},{"id":"1XXmDvmUCY8QUBFUvOuc0b1rRgbJIfFGdwJAedPHaGXjAfVKOVqqcHCMf5gMDP!!!d8o!!!vYcm0L1qGZlLAEiBaRAyUdWo9ioYBvBNN!!!oZNU6vszSCiVf8iY6dkApv8PU306NkiRAYj0chP7aKVs0c254qDhYivLg!!!Q","name":"(+02:00) Istanbul"},{"id":"!!!9@@@dRNTc!!!ZFdyhbKl!!!O7h3KJS2SoV7!!!pZqAo6RYuOedTAuZQxHhHJsBxaudx5JKI!!!TPKtISv3h3fsPZwDbOCBbiNhA@@@2PlE5IayyzwAb71vePT9dME577o8V8LpNXttZDRNv45UTmJK0OCeu89L38O1zsbsnCNui","name":"(+02:00) Sofia"},{"id":"M3ZSHoRh8Wk!!!4CduY3pjWH6aOMT2XzG7Oh7TVEU6pEEj7chCWy38ZpT6bULNG@@@VlI1vVPa2QAR3zvupFWGlgKVwURSfNAEm7xBIbe9U!!!N8SS0aZLuY1JafA7XiPfdQuGMHV!!!n1NtTMWwpsUv8I@@@B3tJyWV1d!!!gJn","name":"(+01:00) Budapest"},{"id":"j9qP5fN99uHq3Z!!!iHy9Ld@@@VuDA0uKm7HTvUOMYkS!!!B2AW2JPs5FnVoYjZx9HuqsiNAoeukoR9K!!!q9CWzfUXPuYCdLQimsy2xAxhI2tbq2q7B5HtDnIdFLVcz73eitwgiNuBQTsumy8txpJ3JX!!!3nFZ4gkN0eTwXy","name":"(+01:00) Vienna"},{"id":"eMiIdT5UfUTPaoCO6s5vHnoEMw@@@Iwb!!!lWhMoqAsSIyZgLgSNdiXl5CvJJCv66@@@Se8eBABXSc!!!C405m!!!k@@@gc2eOCeS9PeqINMWXIAUNl0SXqcXdvjdA9!!!pOD!!!WA21kV14q9rneUT!!!G78WlsWMO1BhRmeehNHN9Y7k","name":"(+01:00) Prague Bratislava"},{"id":"v6@@@P6j7ICMzrzU6fWqhjbz2SN@@@RXNxF8U5@@@X@@@uscFWUWh9f7VKsNcm0fQgUmS6@@@MTenbJozmDsNdPfyxgprlETQsV5t3HyQZv00P7CIFsPLo8lMB2qhcgMg8iObiIB03rqc@@@WHs5xMvi9UVUCBwiKWHd2y@@@qKPxw","name":"(+01:00) Warsaw"},{"id":"L!!!b49YXAex96fyvQwiOZH0gE1jtbPliOt5pFuxZ1WUI@@@06@@@hgK3@@@8xriaDej2GT1q!!!aSibWRltcGUADt4F8CqZYAI!!!G3N1@@@hJvYLjEN9BSOBlKyaheiUodPxyxZy2g6@@@14VBgJOKP2bOwRJLdj8sqZbn2M23KJQj","name":"(+01:00) Tunis"},{"id":"UpOogWJ3dX8j1oMNzLriqcXsLLyeTKEblNg1wP@@@xZgLXZ56WGAMMpoBf2AGOY@@@liuVN5f!!!dSMH40uVw6tuRY9m91b4S0AAY!!!hKljp8dpjy!!!b@@@n8ldhHzmYTUnJ@@@ozHq83kNjYichIAaRDTpK03Z7nLaK2XiJ1hl4","name":"(+01:00) Algiers"},{"id":"oGRuvakVwt2@@@DVkAN56ZlLCZWXyrC6Tnh0AkgElUSSrt4p1!!!F47b9xxljyt4bKjf3B0Om0EGKwFAjF09!!!wlu!!!je2Vo8B0rqgcul3xVhTMUJl2c5ImQfB4WNgAVTik4@@@eMsCe5o4RgVjlnRofqLGVsGqeljmCPrX0","name":"(+01:00) Rome"},{"id":"srOtA1d@@@jhKSA74pspmBT3ZLAlhwyLxX8NTCvCszD02Ry@@@HwbUtCztV3Li!!!@@@Or!!!zByadc6mSGS1sIyhUj@@@5N4WWx2Gw8075f@@@Xb!!!3SNEG72OE7pZkm0OyysW9H4jYuWbYZwrTQgqzBqtmEDvUzDBALfj4ca!!!CAuP","name":"(+04:00) Muscat"},{"id":"gLp720Fpmm!!!1vkWpkIjaXc2SLgquQ07sydAA0XqHsJoxYHA7u5DgQGSVaHT1RxKwERH5T4ylPONW@@@vRtGN8LBHLpooE6VVK8!!!RaLwXWgY!!!AV@@@RrqTJRab@@@Ov!!!E7ZK2r@@@A1tFH9GTWLxGB!!!96dBU1mxj9lneYdYlQ","name":"(+04:00) Dubai"},{"id":"9P3tAs6Itj5DLUIfOksmcMxANuiQkFT@@@p1nBUqv6yEE3cneM6B2TMYF5DS!!!AW51zMk5tqFfgvxxtioL1xxXGOMy1mtFmKIaoMc76L@@@gFfY3S7ms7bNmFovuSvoiIUS!!!sESdp48vdsn71cF!!!OUe1TzEwqS0HQAozV","name":"(+03:00) Mogadishu"},{"id":"WrdtBCPIx42nRaCorYyHpL6my7vDjHP9UWt6LrWcCP6tw6!!!Ocb0R@@@S6bJem6W3oC8aRp2uUyQTgbrHEWKb8FO25QP2wdrmZetiW92udGtPc8euawWOilxe!!!qae40XotT2otJgKq3ZRE6JkZu625TPr1cm3FOjcI7","name":"(+03:00) Djibouti"},{"id":"I7YlAxCdsD!!!LlqH904SoNRC6FyUkXdAudOnHVdD0@@@Q9QeEmEhaZawXUKGr!!!c5@@@Wcl908ShgxUumxJQzLnq@@@OpkCRijYP3JjrL0SPmkrj!!!Rq33m5!!!kYulxDpRHoFa!!!XWwhzTTWd5FzaVDZrwpDRdEonxm28TQcRmr","name":"(+03:00) Khartoum"},{"id":"fSMatOefU4VZz2uXFctXCQQfNgeqXBxiBXKrHlqP8TbitGn4YonF4!!!YPLCXdhDIdWaw43npMfiPfLT11YYiwz04ih6PXlPekc3ZbbX@@@Iw9zSkcOGtom7mLYvRcF9q8KafVoWEUJSowaxVdO97vpiObobHG!!!glhAL","name":"(+03:00) Aden"},{"id":"KD7Dw0YRWqqs!!!0tSFa97dz45FE0WjkPcnKdXAE0WSjPFaxFyCVokGwCeeVgs1TtDNiSnxc61jBWb3!!!w9o0snvmBXWUnJwzsZod64VLb4SFzeOzLalVGmb!!!hco1n88xy2CDPWXnbSK7iZww!!!6M3yWIkT@@@wS9wAXOy","name":"(+03:00) Qatar"},{"id":"Gre@@@JHRa8xg@@@K9iDoBAqWBES4Oe6aIGE@@@1D8KygB8mxF@@@vEmGv4qJTKXlv6HLnh1@@@HUMpBqjnJvTGm4qFXhSRAoH2An44DKppixkLQTBJ40grsSdm1xFxl!!!niHqxKUMCdusR6naiTVqMV3oWsGawIs7wFyo835U9","name":"(+03:00) Bahrain"},{"id":"24ChZfsRc9S0pAeB1Su@@@CiA@@@vJaZKC1fuDDgGdtbdV55qlu5EY5r0xX!!!f@@@!!!TyXIaoJlcdOJUwnN9Ls4JXmlHDS1lgIzzk0nsfKPo5zmuwAFUmUfGtEjxvgjWacaUcvvk7GdraLchzUXA1a@@@ubNGCu3Vqt0wBWR1G","name":"(+03:00) Riyadh"},{"id":"iMCr45OO@@@!!!97qNi@@@rqA@@@RwUfYNvejZapBWY6NWtxi6IUsttpeVriiHzrirweLbqNS03mKPcmeHMNf89pT1Zu4bP41@@@uHobRwM2XNxvEmzBtzTShR96w6k!!!ttLrJKYjqpVlULMrWb!!!VZwrduY@@@XnGln2Sxqy23XGK","name":"(+03:00) Kuwait"},{"id":"qpOXPTQc1tHUyJoj6FGRBIKrIInHik0PtfsRgtpYvOLfNArzj@@@gqXyJUwu2g9HVzTHDnDZaN2yyeRjsAi43rAYaJ7H1d4DxWX!!!yG55r3Kq@@@uJFcX0dH7jPq!!!r3dTZzu@@@XMrwHbuE3GTn2CF7cqFbA7izYqaDlWbL","name":"(+03:00) Baghdad"},{"id":"wTwGIVloUCslJ4LY0G6MmFtr3!!!kgRi8ybiv5gqdkKfWHB@@@tRfEsk3S@@@GxzE8OXEuA@@@cuqwvQ7noKhMxdo@@@FZo9N@@@b6ACvRZsuluAkdP4o5qR5@@@SVDiIdOK7whnVCbtGTpgNlvzbfNucQVcsIjH44C20AMjoW4igm","name":"(+03:00) Moscow"},{"id":"UOUpyCPjEXy@@@f3B1CqJwqCFaeI6m32ugkfMy0Rg1jGg4lWPS!!!9eRsTW3f!!!LNmUao8tJI6!!!@@@UKUpAITHyEV5NGPwKU9lYeGx@@@jPJScHWaxthorBYTP5BOtIFKwg@@@6lXwYZBy1mKsWfrKu22PBoSE1IneDD0hH7v!!!J","name":"(+07:00) Vietnam"},{"id":"jLcZ7eQsLr2BjwUKWh4RAkmaKTzwY8F0!!!bm4!!!5X19cdmlB@@@W90gb5joOrWVj6nTf!!!zQadimNf!!!kIJFhvTE7IqlpFASHrawSLP9ud2J0!!!W!!!st9OnSFwdtkx!!!j9WaNEGC3w5BsZp05oQtUkH4nBclQtOfc1@@@wJ6vmO","name":"(+07:00) Bangkok"},{"id":"aP42VM0s9aYDqf1GmojZpNE4CbanyDQd6hmcLG8JwXaOQRCz0XStRjrnDzNzW5S0y@@@owY1Z7@@@G@@@EfA8lUYmpRTmQmH2Vln9EyX9avW9gs3kZ9Z@@@GDQubI3dYPdUI4DeEQLcJT6zl5Pt3E5I6iuoSU0m8x9qXsiRq","name":"(+07:00) Krasnoyarsk"},{"id":"GiHSoz9X2OzrbE1Auf4W1ntN@@@MzOmb5NFrmXedxOx!!!Sflv4SAAD6qKG7BNXfXh5v3mgblyVVfOeKZdm@@@m7imASq4DDWKEXyFYs2ynNia0JRahzamPjkRc!!!tBTiPVTkj08CBLJqivX41WZIL1@@@mnv9bGVDhdDMgog","name":"(+06:00) Dacca"},{"id":"sveWIJXHWBGrHJLuJ7W8b9TlUCBLDGTwvCBDaAL67S7Bf4fYy1Ui2Ft0h8cPRWkg@@@JGCpawdsg6pt1OmwvA@@@0M0Rn7pcH4UBXbczat2oEOyNMuBoeEINcsukJ!!!oFLmVsPrHXROXcSHykZxf3iNHOBpoFOTu7D0rQ","name":"(+12:00) Auckland"},{"id":"VunOceSte8XJjTGKVelVrUv5xfH!!!EcD01ebJH@@@AXeeGbWzrB3sW9VPju89ht2vCvMv5RBob0OXG!!!RaLfRab4cir1bw7fKbEu4z9EAmMPH5BtzXKSm6zCmpvxJMTBB7NMO1l4i1xlFY90KapflceaRXNRZeArCxFC","name":"(+06:00) Almaty"},{"id":"k3isJ7gG18hdmane8mZQ3wPSXc@@@F04ZtqXbDpyhKaBaBQ@@@qMwQbBpPWiudUnmuiAIk5TgekQ7BTE5e@@@a81RXdqHz8QxJXV7EfNDY0UqZe1SZPydwqEJ29k9an7d9DtGxAOIkaMs7SPCyIxHMON1hPodJqtNfVZRn","name":"(+06:00) Novosibirsk"},{"id":"wPo@@@SJcSzp3KH0aLt2xYbpXdKg1P5pjgsXuhdRfgKxANcXbiZjU8rurDNIRx1OjYECq8!!!HD!!!3LSVgoItqXtiw4egukvQvExZ0Cy9ZClHDHpPaoYSJcrat5pB7rGUSmCpYjVSntWTwVEdwDqFnaLJxEv7L69zlQGm","name":"(+05:30) India"},{"id":"OYiYHrW2ifTOLY6sFSWTPrhETRRMdGZH1BBx6hIeZRZLeETNYuorMGC5VwyMhADzSSgtURWsDnlfFEJTJxSlGffibl4lbpeaEyoirkKur0O@@@tO8gyGUCzoRB1MXxV5akJVwRQF6bJjKhOkFpUDPaeDnuFCX1i1YH","name":"(+05:00) Yekaterinburg"},{"id":"lV0GuoA9MSBroihwdczWMfXYOfA8jTfoxuyy4Ha2T7u@@@OFM1Qp7yjRnoPMYvpWBxf5X7luH30W7dGuYokRIBzAk4xCWLjoK!!!y9L4N89JQjsKYb0aiZG2AoKXL2cR1BshMDVZ8vWvtRUfHfpf6R9FiawzfqLoL612","name":"(+05:00) Tashkent"},{"id":"xlw9qTfVT70uEBRN6plxUMYUzCu7QRcCXJ5HF!!!6n57UgqzQqbiIY4!!!7AnqUcye4q23zS8KYfB5ghMdiTGFzCL4BBkus@@@!!!mL5m1w@@@TfZvrdFnrHbN9ewvwLlY4teqqJxlleFfJNnNjnTi9q3417p4loueqcPCRCMl","name":"(+09:30) Darwin"},{"id":"W10PUr2@@@26s4myheClmLhaDDZqRgWWkTA5qpqV!!!fiXGhbMGo8egiAWdffg4kJ65M@@@bFstRg0LlsCvgBw1KA4FQZAlIcUJuPKSNhIB4cA6GkS!!!r4ek1igMoFWanE05iq0AmHZXTubG77!!!Ji4@@@8jezK!!!DQuqD972Kj","name":"(+09:00) Tokyo"},{"id":"IJJrwWy!!!Y@@@ZUcq@@@Gutl!!!KsQ5@@@wr0sTGgBqKfRnw5H7cu@@@fBb0phFXpbHUKSmALyRKo43B!!!Tk4XpecjmIDfYFdXi7p4osvlO5zANoyknt3XC2@@@4@@@Y9KQbhBe!!!mEK0i5r28oOfhKW71bqJhW1YmdHyrTQ6k8LajlfO","name":"(+09:00) Seoul"},{"id":"Pg1qVZyMjD8Uo1d7HjAii2T1ABJLt6tqz3NKOtgi8g1IxxlDXwQTWJR4OSW4rnkeubLwYD@@@LlcgkNErfKIoYduzS6qoLIF0a08t@@@UYd@@@R!!!!!!8NSCI9lyILEQKZWo4g@@@GB0uOEmdfG4vKvcbQBJ@@@YnzxQfdlz1NRW5","name":"(+09:00) Yakutsk"},{"id":"EEZSZOw8mUVgUt6WdFceCZXkd1jP!!!rS3s8eVxPl7xwTEJUOEmjrWpgvGurNWLHtrgZ5V!!!gGwSfNHsRL9pOU0ei@@@FAYJlJBLt@@@EWXHrH2aJmeQLX7Q4bEJwFuFMswDkdzahGP36cu9q0WzZm8cKq9@@@C!!!IMy8G0SRw","name":"(+08:00) Perth"},{"id":"oy!!!UMiPVkKZMJBYMuDUKWwImcuvSHPuwadD9J0Lkm89hGSsa2tS@@@qAHrAZFYcctblTkEFNJTWrPBM87XVnoWHjTmOz9DDB092IK50qPDGsojB6W5HaspAfI2RNTP6Y18FZcHC6t7dNr@@@p9iuIgHdA85OmaoIiYVz","name":"(+08:00) Singapore"},{"id":"3s4JXd@@@pbFH6dvn5JFPyQFe@@@bwEFCEebhQklQkTILYfTu5SJDiWaM6bg50WKqcrqVg!!!mfeohfL2dwbaNT4kvRAuToKK7dCty5n38uwsGt6Qg2ulz95rSHJTHPoVck2mijngttf803gSgZS73XVGQARKniEraAKAX","name":"(+08:00) Kuala Lumpur"},{"id":"GZkLA8KyigSPOtMhyjJlvALDrn5Lai4RQmxTAapMMlC8Qp4KmIW!!!vfEtJ3M3EgmDgO7rQSQMXMMtmxh98M0P9mL9gd3oRvHQ3tkOJ3I6RsbeXngMDibGtiq5SsovbIXHY3UKQd9snKfcev5!!!IzjdwE1j21QYVEmu","name":"(+08:00) Taipei"},{"id":"sdQcUkE0CeJ!!!CQE96jZDa7QCsl3ON318vvpNKNaUzqw4Ki5iJK5jcp5I!!!3tHFfwKzLAg5@@@n57jzvYswJuNjKBdFzgPhv@@@gVGD2IJCCbRzHYbNYBVu3Y4rORoKfIwwf0TGkf6vnRSXVsHLdOEkIeA6BEjXwf0HRoW","name":"(+08:00) Hong Kong"},{"id":"E@@@VwDDEn6Z3BF78b95Ah437AHikXej7T!!!XAxkLLuewP5Edalv9Hnwxb07k@@@rs0YpN49X@@@RioftVjPq9!!!NlkwRMIEoD2rc@@@XRY2MTrWjqRAU27@@@yEkYWgttLpb!!!bjgPXarkFzVL@@@kZiau3TjivGB!!!3IvR9teT@@@LWd","name":"(+08:00) Beijing, Shanghai"},{"id":"cUTJsz7Xjm!!!8LfiDnncaqINd5v1N5DWTRO2VPw9zHpI!!!Hv3lTTkifeObW1Np5UM9PL42pcVruWZuTqHIoz281CuGoIzmLjxpx0etoo@@@awGcs3kNAHYY0qpBPF7CutHtphh6oJnA4FG3uf6Z@@@diPEdb34M7vBcJEs","name":"(+08:00) Irkutsk"},{"id":"2j6OXr95bpDMdq1GygfexbY1a@@@VlTjVkVN3RiHV7bt4FYCpXFTvuxKwskhq4RoYSo93yJOqQPDIiIiYgJUa2qk4ti8Yl9!!!9ekMbRTtA1vvcgVNMHSKKVFKL@@@HwzsH!!!yc4Ch59SlOu0JaCTEfrZWkg3j@@@yvqSRyPMh@@@i562D7AdA=","name":"(+07:00) Jakarta"},{"id":"KZXgPdwfN4!!!VEG4E5khVv50ORGr8bC6ATccTYEAhk9DQ9KrwSewIeBQhf@@@2mC2t4rBQCGeMgFs@@@Pd9WzyBBUUl8A7Sk5xrIB7gInb@@@WZnf9Crl7@@@C7kpWP2u3qmkjU34csOEszd09wGlb8x4WVeFIk78wuGUbBm1bQhpf4V9jNY=","name":"(+09:30) Adelaide"},{"id":"xy6yz!!!K2puB8Z3LDJnwr!!!KUJ4zGe@@@f6Ik@@@n1B6ISeg0sBkl7EQDeQh7I1At89ajnnYPI!!!LrqwfSlMuWr9XG7J3984AgRSZAX0ipisxA64aIItccvBFgMvNW4@@@dOkIWIVOArGx6IyE8SUTD1ZUsvom5RRaHP6IlgRgvwmWMlXLcY=","name":"(+10:00) Vladivostok"},{"id":"jzLm4a9!!!m1gpp9yOUWX18RsKbmcEaTZ41m7wWBy5DO67jZ00Z7f8@@@YoNLdAStzMGPgXLjAZTUT5Dro@@@4ghnDa1W5P!!!qgqGwjQ4yQ6OHhRMot0@@@gOe6o1L@@@BkOerdCHg6qee83aIXd9H8M0u7CuSOyc3SKTZOuJxd76OnhsBMNTo=","name":"(+10:00) Brisbane"},{"id":"HbAz0KIszQ1EoINCTlwmjCWA4fZ2KTER1nS9AFy0qa2z1n5IMv0wqmKDmKLHlwBJ0Gacg9YENJ6hJMAKXTGR!!!OraUMBQ4t0KTSbhnyAHqaaihcUL@@@HJD16MUUcswmEmRAHun6iIJaXsIUuW@@@EnPW9fV1dp04hyy6!!!fn66Xqry3s=","name":"(+10:00) Sydney Canberra"},{"id":"qsByuquMttGB@@@cWzdgdWMGsR2zDokbOtPVGiH5ON!!!WQqcIkn@@@lQ7cpjVIPFvrd@@@p!!!gqwapzsLLPFovmcWz2gAV5rJqdmn5uyGFMTSJuPFCRCGQvxDYaIDDulDQ!!!N3nXy7L!!!S4sNJHMj7fQWiiD8e5TnWG05tdAQo9gMBBU!!!pkaU=","name":"(+10:00) Hobart"},{"id":"qVrNixBqK35bR2bwWN9V86uAFj0sfePvfd24ZaG2RVDgDF82VHUYvZL5hqLELXaUyjp8wRmOoWyUCRqQ07KSIU6JqnE5SVkmjgkDhHrkQXYYCrE8w@@@kIQrEzQDAt5FmVWMb8FXnOLOaGs1dxGSiSDKwtkNIfQtREtmcGrTI!!!MeU=","name":"(+11:00) Magadan"},{"id":"JZ0f6xhi10XQ7h7m3hXt40mf@@@uM60nrJlzF91Cczvadrr3!!!R3xgl5LPgSVrXlNCmtr1IOShoce9HDTiO5KS9rBl0N0qx37yZs5WVaqncks9S2Ma1iFT9!!!OHR8vXEGQIXIfLMI@@@936HqiZvI9BfAaqUojKe7zE7HSHE@@@bL3xPwFo=","name":"(+12:00) Kamchatka"}],"success":true} 
 </msg>
<msg timestamp="20210405 18:48:10.088" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:48:08.347" endtime="20210405 18:48:10.088"></status>
</kw>
<kw name="Pretty Print" library="CommonKeywordsAndVariables">
<arguments>
<arg>${resp.content}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>To Json</arg>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${pretty_output}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<msg timestamp="20210405 18:48:10.090" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210405 18:48:10.092" level="INFO">To JSON using : content={"timeZones":[{"id":"QDGfoL8MVLLkKlpT0Z!!!nAz65xuXssPmzop8KKtZcbpjbGzOPL713OMwJtYQjdL7DuafsrEoVKSDkQmpaE!!!dBmMm40G1XNxmrDBjsoLTe26TJbbN6YaGWbf1iJmnhTHWWVJmO8Tyc05Dvn4V8ERlHQYN89!!!C5iR7x","name":"(-11:00) Pago Pago"},{"id":"P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n","name":"(-10:00) Hawaii"},{"id":"YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnfNUZwrtvFGL3AsxgAZnxsPfK54RtD8DUESOThwav73qL@@@KrHshFU0FuZKlyNBH8LUyGBI5tScD1JGurCVLoQedIeIlFCYIKfQtAd65BnvtrydikkAWC4DZzVJEsTireTa","name":"(-09:00) Alaska"},{"id":"p30JQBweOKtmwqunIpMU@@@B7T2cTGj5iGlJV@@@98eYkoLpQD92rNIxhzhFdE7lZ9FIEiEi0sBgqI!!!WRsCHg28YOLrTJi2@@@Cvfopjwar3eXkNLMyFdl84doJO41FghYfZ7@@@YtYjZBrypxpf140J90y@@@Z52eI0985jKE","name":"(-08:00) Canada Pacific Time"},{"id":"8IbQ47tlirpyxtiLV7Q6D6PqxzbG9mKt6VkGWgXBrsLgYL40hiCH0B4TUpnCLL5yCT6WSyqMQCljhuwtaTorpUE4KCQZO1KUsUFNoVKkf1mK57EhXUuEzY3JoBPaRTtt8033ndLM1G5!!!lWpj5Kh7G85zXlAn7bZR","name":"(-08:00) US  Pacific Time"},{"id":"KNSKzuLQxohxf4s0WjV3G2WBjjvhTp4qwxQruRvlc3o07KlX1Xz6x4iknV7jkBfG5osObDjqiGVNGGJI9Hlg1O2d7A4hkfErVCXVO1E@@@gV6SNcK5MPGXsTzFITkh4UgaK0tXcKt6!!!TR2DJQ1Eeoa4JtMZEq!!!ISuE","name":"(-08:00) Tijuana"},{"id":"uF58sl8EURFj8eDszm4KS2!!!xA6ZYNmlSXvwwmjsh@@@66yQcWA!!!ZsHQKtdClGUgxbuyiuO@@@sw@@@lOOjlv0HG@@@6r58GqDUVByEsG9z9m2shlCTDEEJzKbHoTMEp10hXw5c2mshgws1EgNXif2eD4lzuWShsFRKU7e3p5","name":"(-07:00) Canada Mountain Time"},{"id":"QCPRZXsVFXmAnFvf4iPYgHGKFZUTwnawVb81TZlm6lzKTtWs9Mb0uYLJxRwSmoZcGGJS2X398@@@9OjkmZf0SORPW47IiuEwuc45yp4TUBVJqTCeC1RSZCEwPuJR@@@fcuCEsYzFqtzFkyr3PayXc05ga4aYG4Jpr1tL","name":"(-07:00) US Mountain Time"},{"id":"5LtTRdcCrBTrKk3miwBYMGiy7zyYLyvs00UF7whZDTdiUfiwRIAY!!!FG!!!@@@f5kHAXbOYVN2tqo9DBnlIF17FFiQ6cHG9tc8lmnXVwN0@@@Xk6Yo@@@4VdpqC0Vx@@@MnLUfp!!!ibrLj3AJWgZxFnBD4YV3@@@@@@0wx8OJydRsCvs","name":"(-07:00) Arizona"},{"id":"2sKbbJ7HH1j6Ef1aqits!!!U9JZ4ROCK9NrYaSHoDhWv1KQBE74HsHd8ZC!!!QP9R9tVThOsTvgNiByni17@@@scZXb9CUZQINoi6qrr8MC6inzfSeWq0rfepF3q0k4DsP9hb3xdEbInocLThRGzIl1EeRL1jIfg!!!hOtit","name":"(-07:00) Mazatlan"},{"id":"@@@6lOnOkaFfC9s8LevkM7HSI5CbIZYfy104RVEIy7gRJu631fD59g7Blunr6oNeOdq1pgzDKEhpNI3VDpDsgPEA9ha4Mr77e5ncEgNg2O6WspIgNJku3Htv45Vb6MqHq2@@@1d@@@FHhEEiuTIpSXqyUU2gHvBW@@@9tehA","name":"(-06:00) Canada Central Time"},{"id":"GM0Cjjmcetk1mDzXLZ1hYda2BjjfC70AO1NFypPjRVdoW3HXuOAFZbJe4HbkoV!!!FuPEK8c6jkdM3VuCIEeJbZE6hEVX0wZw@@@ZTF6ThvFTJ8a28SSrl5HiVoKHxOzrLzM3L8dgyR!!!8ae6gduJnsqiouuL43QNFY2N","name":"(-06:00) Saskatchewan"},{"id":"6FTJDrQa7OK2m0tWYi0vHulkLclIDYAUTXiQl0vR42mdAYBgDijWMPhvASJvsbiqFbBtvhoW3acIJN!!!x4WTrb6aeD@@@hiPiuVsWPhF04WIKa0Ot43pyJMuqr3vG2qhjwsV5MmdGqihRpNpPldy8F6C@@@pnl7LBMJCR","name":"(-06:00) US Central Time"},{"id":"E!!!rMBpItFI2XLfVFB1U2OI9ROkATCbQ!!!X9X01fl9kvlfYHpV!!!HsiN21zhmK!!!Tt4aviofnEZog!!!vBHuXy85ODCBDpzHJaelIvMkEZ!!!J2@@@Ra1Vz5r1PjJU7trlaVwJMqvMti@@@IxIoWKLOaJ3u!!!9GUVLUt9yFihGrW1","name":"(-06:00) Mexico City"},{"id":"I5RRim91MU7cFETGAR5b8XAoS3kyA1yVLIFvP4oV4vgnwLOv9jHt10w1Daqo80ylX7b9tUUbm5gO@@@pzR9HtO1Ar9AmjsOVhqLdlesWvvVC8Hif@@@EapY7w2zhvuU!!!Zx6Ra3IJ08U7d!!!0ogNbxFz7yttR8gUI4A6TI","name":"(-06:00) Guatemala"},{"id":"A1gLCd2OCZFFK@@@gOK58MlKX3iaNc7RN@@@Yat7G5tdnK5nVp77B7LgOK@@@KRtZgxF3vX8ieVVlymbAziHOfaG04OWd2ARixdjNCEBorungQk1RU9DqmaQ@@@UKAvDbnw46akixNaDB1HuN48QFdzPpKx8IJWyElJTMM79","name":"(-06:00) El Salvador"},{"id":"tgNA51ANaDItho7DU7JfREv8upt@@@7rywDBeVgz9YEvRj!!!2!!!jQT593L3HA@@@OGP8J8QgVmJbivF6UQ@@@5fVxeckWFWwwzwzG718mDh!!!C@@@S7FRoBscbMt7a4adCsVSwft@@@zU4mON9CXiq77lJwPFjBmouoN5FsOJpVrl","name":"(-06:00) Managua"},{"id":"M8K4pYy98k1FZcadaL8di5FjHhxzqcJ0urgquggSjCcE@@@f7Y@@@74FNf8G9zV!!!4Vo!!!4pZyU4@@@RlqVJHvT5CHIz82f7y8f8FotIenNVDnDcWDbWhgKLXA1W2lF73Y3jAr0G@@@Aac@@@k1lXuwKMvuM7D!!!QoYGDlHFDd6X1","name":"(-06:00) Costa Rica"},{"id":"IcwnA!!!8CLGUsIbX7LDN9uthElPjIyaYXgSoGYpxn7a1NM2AHMih0y5nuS0rLHAnJVm0J1JiB1gHX7V3dMQoUX1PxN09ecC7vChVa!!!z5ynQMQvid5m27ZHZ7qoCLXGGIzBx0PMybFWe2o5nTa1khzKled0k7Uvx76","name":"(-05:00) Canada Eastern Time"},{"id":"bVZxoE15cjzA0u91wf7yK1AUDh2giB4C95ItP43bz27WtyYp2lWOb5HERLgITJn7@@@J2h2F6A1s8jUXI84e6jQOX659lZRHIL196vLpRca!!!sJgZVfp5F1ij9rL0jpXiJw@@@qWVFaoAZeSHNZcXtQjqr1uOlajQWkS2","name":"(-05:00) US Eastern Time"},{"id":"N4uqcQ9A3iH4JZA3TQpDDpteO7C2TPUI8WxePP1nJ5VGQ31RHtOk5JJ1y0KrgiPZoYLza@@@z!!!GEPAHZTCd@@@HOJIhYm@@@jBH2nZoyPKj8E1ozwVwMf0NB6mu6u4RPRNKPIxPveoiJ5ScnK6OB!!!oz!!!SqgTu2v7RRO94d","name":"(-05:00) East Indiana"},{"id":"qsMmVw71Y7ghm2iZzR6pcE2U20Dx3sNTh3XPJE61wxd@@@UOzEyQ3s7wYHHe5H0G0jC6I6MpbEnLWn@@@qoJEw3xxK0DymVfTk2odkM0DCstuAvES@@@9IRggSwnQFkRZWs67bAv@@@s3suU@@@FgyOuAcdZfC9awKuC7SyxdK","name":"(-05:00) Panama"},{"id":"eI4vWYPAFTTV!!!5082y7HxgWkMgfH@@@Epir4OO9eUO2hRK84zNTz5oGImOQ98QBJBTvIMC@@@QuU29f9A48PCWHix5ECcvH!!!ug5X6wx2ZfcrBQb@@@z!!!4K6oh!!!NczxEP6XmaM7rOQSzu3z6T2bl@@@XW6U@@@1yIMVROt4wG7s","name":"(-05:00) Bogota"},{"id":"hGjUff1QUMHS@@@M!!!He60IJ7nyF6LaBtsGRDvTkkL!!!uvdy6GcpC85ClBzC9IP1r097PrLESsdiKBErkTXQZtPhLBg6NQM!!!gKUxiNIg0Ocj0XT5gUHWG8tNh7hagJcOGI!!!QqxDoSX4!!!5p0eVy97F6oIUZRto8T5KPaW","name":"(-05:00) Lima"},{"id":"jdhhLXlLvTb7lw3yLlUFPuq3KxTjaiWfyh37PbH7W1QQO8g8PNL8eciHBlVjCiDLz9WG!!!tyZ9LWvlwRkdNBuH32zLk8KGXNVPkGRzYyqVuoP6qEfqjzFPRojZiGkKknWv1ZuqhjBWCb6Myn3IA1UJgD0EFFvwr0F","name":"(-04:00) Canada Atlantic Time"},{"id":"lvaqBUpKRddNWiun2oWWWb8kHR5Qcs76RBEuuxpuwD0ahMg76ecbe6XiBKrAwPYFVhYCyk2BJhNaGTCp@@@4HDYueFbxQ2qXTvFBV0cHd6VVHeorAlCHw!!!riQLD7d4goAHEC@@@aV090wOwlZXt0nw0SKHO0vGmkfTmh","name":"(-04:00) Puerto Rico"},{"id":"yday8Oua5q1ruxwrnrk2uUhaXUImDi7R02bThU@@@EYZNv9WL00cgC63mtxCuQVCR93JSYA@@@kJLQsYtIhsPa5snUZ2uP2mBvPICSJuF@@@Vfx3ISjl8RkRneF!!!zh3wR6oYEzC1cS7!!!Z9dC@@@XGSSk!!!ly7ZtUa@@@3qPUHnP","name":"(-04:00) Caracas"},{"id":"4cEfiRmDqyYI!!!q5UvqzrHKBrF6MgKl0IQAEbHd@@@gm6ztKUOchxlDGx@@@6CKaeWGhfPJNDApoMqtu3mM2Et!!!ukb7mFs4Nm4uuDumhe@@@vob2Rc8Ae0gezXLPDOP0PtrSzS!!!z!!!kYdkV2HMzCYD1rSA2TcTJz4Vzkeyq2","name":"(-04:00) Santiago"},{"id":"l3c1VCebOvgJBCjpMP3RADpMSXF6@@@sl27ko9dzFzmmAKiEam35BP4JY4T0EeVdwrUdYX2wxSElcXYPVf7VIP8XJ1vuiRIOIpjSd3ThxdauU3RERy85MzNpXG9qjFWnJ9QUMX74pV4a@@@@@@Zb!!!6JYVUZU1PdRLXPeDA","name":"(-03:30) Newfoundland"},{"id":"4PZaFvt!!!7n1TedetWYPjjeAbsUr64fvD6BRMxj9OMQbnM2q9B43dM3xYje7WzhiV1ESnNHlpeVIPzyiFZI!!!P8frUF5!!!bSE8IOfnTQVw0Bydub5!!!bF77DGc4jOsqpFzdjyljerfCZkMD4w1nA8bTP58RUjHXsamJL","name":"(-03:00) Sao Paulo"},{"id":"GA65sBkIivWEXO8ljCWZj22EoXOWhT5oNpM21wGIWTlZxTfX3D!!!6j4ELKO4IYo7FlHJpgOrkIpPYUbpGbM2nBJUOTCZ4zLFsmvyb12DvZy0ecCW9tLmCPeLK2sgUOu9xWlEi46TbYRpWgokg7kWVpGCLM31JmB53","name":"(-01:00) Azores"},{"id":"zmuoZNIACprVyl6lM2YBYQA4EIifAvPZoRtQwy5gB1YQtvTloiqeptBPdaiVbynT@@@3nl5@@@n9IVvZtoS87YBJXMaU9xQLZE1Y6ON2mvAsD4PF9!!!9ebx0rrpr98LykPtpwbsiBNqwllEg6pNyIRK@@@JiDukQNB7FPQK","name":"(00:00) Universal Time"},{"id":"D6LsACo5wQa6SkCVqIhiyCN7qe4kFp0SHN2AB8I!!!l2gUFri2vj54SD7YwqPh8eUvzKrRFqeqsRK3uZcBiwAG0WOddJzBMHy8GsJiSk7DU2gt1mKOwRYuGcfWovJUSvINwS7AH@@@VOvUm!!!0jULNwF@@@lHziz5MgzKwC","name":"(00:00) Reykjavik"},{"id":"9@@@@@@cxwTk63nr44@@@fZhCWyA3OG48XUtrHA8OR6o@@@zKf62sUQQCy3us@@@escFL0GafQQxVfeXobDvQAHQAsL@@@IqluxTuCp0XVbD8nFCqZNkpthAc4U0nr5Z3UitvgkjyL95quD19y88jNShk980YXxMnpzvejV@@@XMi8","name":"(00:00) Dublin"},{"id":"xhookJpU1sCf0R6fRU96Jw0r6SRXJ1KCX5PPSjgCcS3TOi@@@puzosGr!!!1yoi3Di9d@@@73Z39x5fzOk0yVLBmruvAC4dvhsb8NRYAAxEf5HkmtYL@@@yyV6xGs3Mq@@@DfOeVZ9Ssbhp3FG2vorfuwnYrjCUykikyuGJHrW","name":"(+01:00) Madrid"},{"id":"DgHRmUwV!!!DGn1!!!YApW1hwqCYaJx!!!1peeX@@@9j96e!!!K7AHBgeYKzHtZvnto!!!86ygq8EtdH5fUxDaIHnQ7r26q7FMch8m!!!yNDRLmJRMfIkIlqBiIiUWqQneUs3561G1gcW73PcgqZqW4oaaQVjBIFRq1nhDvgIHUMN5","name":"(+01:00) Zurich"},{"id":"r1EDjRPf7k2GmDS3BcP965vDFQGW!!!rGzXpf3B9u9SXikg2DFbmyNwOEoV0xvN@@@DTfIaV5zASrO7vM6@@@5oK0TUf2K5VvZvs8Bx1iVhafPLCZg7nr!!!Z3zOEks01dz39dGxl2jCYmWlA4lhk19DrMwQwUERWcE5M43q","name":"(+01:00) Luxembourg"},{"id":"Tgi@@@YeIA2tbliAu!!!EIkeR86@@@uR5SC5mXNbYyA0sVBWAyESUPQJFxi!!!MlyfmQFLGg85qyv6vDUDrtr6gZPR@@@D@@@PuiiFUC4egalMkUUB2jpgSjfL!!!h9P@@@CJERN!!!55BDx!!!aNKxBxSuANUNLsPONXv6wcQwit2ltVMzn","name":"(+01:00) Paris"},{"id":"nUCFzNX8HYE74mOJ7ySugWg9w0upzsQ791HWj6mDTcUt0zmPipaAP1yz165w51gC5SWepXFp!!!n2KNWKL!!!oE3XP4OrVyIY5ZNqQWE9vgSAVN969Ee5c6p29LG!!!l7F@@@uOueKVvwbA!!!EwMobWngNnAv63C8c!!!Yk6Wk3","name":"(+01:00) Brussels"},{"id":"Gl9rh6NkEJChm!!!qNyN@@@QsLotBcza46!!!wGKXJnElth1XCu9V!!!k1r1ndQhbYRMlN44TSR3itVBxKKP6h1AN1BVWo3PcRkM3wOaSaoZ7TNng1DwEeDYg80NPJHl!!!ZlkO6Qhlg3xEUbg0T4fEZRRlKXSRtsUNVA1LmZv","name":"(+01:00) Amsterdam"},{"id":"gyVfyqQPPP24v150bcBh@@@kFzXP2DiKWnkZpwYqnWA!!!yw7QbNYVHDTOdrxjyJgMk2YPubt77Hffu035Fs5NT!!!EPff9@@@graSjHa3Xy@@@UMQjCrcQd7DyPE8ko5dJ1NvFZr4GJLnH8b7mS@@@GJVl4d8uCO95P5OiTCTMP","name":"(+01:00) Berlin"},{"id":"qw4CV@@@DnNGN33L!!!ADUlGCde8m6o4!!!8WymSaZ!!!usF4eWkImNOE8Y9BAGJM9pulYeLFoESypmo24wgin3IPmrETGtrwk9Z7WS2RLB2yIt8IMGRQUkiiRptyJN1m5pMRDv!!!ayMTIBys2K5tyzzNuPqUV@@@4HfzKnrnKk","name":"(+01:00) Copenhagen"},{"id":"yHcU7woOkr6fQzW379UhSo5WUJwZ71vkur@@@2Y8lrj4ZL2xJwcZRUCLGHHh5wDJ9Lbb3BH5WQlMYM7sAtoSFJkIiTPnq1SMumMBfP@@@fS9GwUhL3u7WMSJL8ehK2VZvSVcBYddlwO2i6@@@u!!!eAYJssN!!!AXWfFThAEVd","name":"(+01:00) Stockholm"},{"id":"dFEJqIWLq3hn7A3NxP6wbM8glzgbWlgB2KFIuL7mKlcqVeqtTZi@@@l8THh7dW55CRsadOghbFsdxhfRa7wX!!!VbsNT9y@@@FCX4mW7S38HNHk2TU4jPitYj75PIAz562tlONJW@@@DIkK8YaR2IAhP6gWZagCtcEXpRMMR","name":"(+01:00) Oslo"},{"id":"hmrIZOYMg031NcXmb8T8vu!!!SZxTKLewH@@@NyWgNwVQjxdzZsNb7@@@3onF0RdasJTf@@@OtaHC5qHN5G1bV2T@@@wh7FWvQzDKwR8SqhGhBzAMB5xYpQ@@@JwFefpcZJ74v9uFNCXXpEbFdZAJ!!!lj6YTO3oO@@@h2LkE3LE78TT","name":"(00:00) Nouakchott"},{"id":"SmHmX5M!!!w9gYg3XEb57P3QUzu0nw5lEgSVQoIDHW!!!i6C9c2UfKI9E9!!!H@@@IRdonwlWwvAtZwKSepa90IuXKJkolTRUoqNYeXj09e85b1ACT4kCqt04JRqTrUrCHPMvKVFS9AwJNCc0CFB2aoIx@@@4S73lCgTA5jsdN","name":"(00:00) Casablanca"},{"id":"RCJL5NRQPoKksG9QemzMFBMaqDctEBPyT2btm1PCxXwN6og9bOjIx@@@600Z3qpasqCOm5WzhHGqkIqcpXG6dCe1nkJxo8RaJfvrvw4lMnLDpv5jombqdxZCDFB4jOr06bpjk6aWJzBBVUVWNPhUgmDTFke2WDf!!!vB","name":"(00:00) Lisbon"},{"id":"dYYei37hiflqYT5BiWwfE7AattKE25cxqaIyxeyZfvaxk@@@aVM51yzEVSfrwIr34qRjmCoQcnFBsxukmuI3FJyfR@@@VgP1Sn34eNxHVf2TApOJGnhPdMPzFULQhXRo3fBUS@@@pfjIt0E5FZ3mjpEPLVSPyLUAu8F@@@8l","name":"(00:00) London"},{"id":"mQKbW7QMayZN6BCyeYmrAmkYst8m@@@MKNVjNKVlUUwmGAA6i3mTna2PRaCar6MZwVjPf3owTg00k8tAxCL0iJ@@@vZTnSpoDM8oTbTYZRk3rLndxj!!!gJnGN4sMUNWr6DPF1eLTn04ZXiXWpuEAqNj!!!rnsPBjj0u63mY","name":"(+02:00) Johannesburg"},{"id":"buqzt6JjjbtkQLnorJpb1X@@@IQbT0X8PZlO69G1mOA1wveNR@@@KW9OA3uCa5fmS@@@6AVgzIN3I67f1uw4HmIvfs5WZCTdSHx8UuyV1N@@@NPR1sE5Nm!!!0bt1ZA6tD8gW2ywskXJsAJDvnOArukr!!!rPAlwFLoWvd26TcZO","name":"(+02:00) Cairo"},{"id":"fb@@@KWV2fzPIdllK!!!wcNVcDHM1O3Cllf5X7YNoFvi5kS3WlGBGYGULA8cyokfRgRce5Y0O9nOJfBur53H0YBmj3R8ZgdV5psoQCnwCgqwNk2eHKPSivsJzngsQYcW6hhWNV!!!V!!!3TKjV606yaNUZt!!!6UEqB4XaN6Dp","name":"(+02:00) Tripoli"},{"id":"sJm574MjBqqu6hgaSm63WVlW5OiO7fcfKsLoO1TbAgmaE2O0PXd5rPEoN7m!!!cy@@@A@@@0s4nFcKnJd8YMD0ytZEVtYC7kSQPgg2VSasS5dniZ@@@HFh@@@pGc7xtQttmnchrebVxotl4gfXIxEmyICo72cgSzrgMWmQ@@@zgc","name":"(+02:00) Amman"},{"id":"81O69NXg5q5DDAI3YQIsIddUFqe2Bg4fY942iNP3rQDtzz4YBHINUSwGtE!!!UbZFDJXIx8iW43tyQcCeI4u9IH4@@@YOYn!!!AFV1qVK!!!9oixsofjPO4ZeRoJlnw@@@LGURmytn1lGyduif8EaPy0GzjfCRs7p80pGe1m@@@!!!","name":"(+02:00) Jerusalem"},{"id":"1v09AmqpklAKmjQEFwOcTcG@@@dDQ3EmH@@@Ki7HOg0oxwHJ9NnMUX8nC8jm7b3TOX6@@@R13mefUamnxAb4Goi642LY!!!70KtTKZEe04UAdoS3O4eeXXFFBMCoLQxo8qRQ2TeM8gq6AoonwHdPuX72jFwIgmwF1QB89hZD","name":"(+02:00) Damascus"},{"id":"gUMbU0FrbSJVZuvBiv8XYhDfg6zZo5LnP27h0CDTHa3mN!!!Ozub!!!P8jypJGdyRG2fw6Dy6AbY1vRo2h4bWGc8iRD7OsafrWYsnaOE4TQXVUyzDH3U6UmYvZjaRAmXMWwWVPfTcle@@@8Bp!!!X3sE6V2NZh6vWDfarMjD","name":"(+02:00) Beirut"},{"id":"@@@e13ZS0IlfRJZ9Bu93!!!Si!!!5YzKh3wlWnjEvDhDyw7lGnf0USJ3dxpHvS6GSyOTuSAH74h3ebEmOJIceBWVi@@@r2OFLRzBEE!!!nUHtCkiKAq6N0FEQXDCZbMcYpuy@@@Ug0rznsbbm18Y10TEbO43XuOsJt4n8sXqbJgK","name":"(+02:00) Nicosia"},{"id":"UAHy48ngyHA7EK4K9M69h96OzUFBKpZWaW4JT@@@Bq5NrqNZGJY2iZHJX5ZoG0ua9U67gwGAz8hO!!!rGTmlKQy3oaj2Mjt5RtRXV@@@qgUZjpjlTI1rPoqpIJ0pLi1bJrZqE5qfNnS9GYntA88xYVXCPAou46HmOePM3j","name":"(+02:00) Athens"},{"id":"1XXmDvmUCY8QUBFUvOuc0b1rRgbJIfFGdwJAedPHaGXjAfVKOVqqcHCMf5gMDP!!!d8o!!!vYcm0L1qGZlLAEiBaRAyUdWo9ioYBvBNN!!!oZNU6vszSCiVf8iY6dkApv8PU306NkiRAYj0chP7aKVs0c254qDhYivLg!!!Q","name":"(+02:00) Istanbul"},{"id":"!!!9@@@dRNTc!!!ZFdyhbKl!!!O7h3KJS2SoV7!!!pZqAo6RYuOedTAuZQxHhHJsBxaudx5JKI!!!TPKtISv3h3fsPZwDbOCBbiNhA@@@2PlE5IayyzwAb71vePT9dME577o8V8LpNXttZDRNv45UTmJK0OCeu89L38O1zsbsnCNui","name":"(+02:00) Sofia"},{"id":"M3ZSHoRh8Wk!!!4CduY3pjWH6aOMT2XzG7Oh7TVEU6pEEj7chCWy38ZpT6bULNG@@@VlI1vVPa2QAR3zvupFWGlgKVwURSfNAEm7xBIbe9U!!!N8SS0aZLuY1JafA7XiPfdQuGMHV!!!n1NtTMWwpsUv8I@@@B3tJyWV1d!!!gJn","name":"(+01:00) Budapest"},{"id":"j9qP5fN99uHq3Z!!!iHy9Ld@@@VuDA0uKm7HTvUOMYkS!!!B2AW2JPs5FnVoYjZx9HuqsiNAoeukoR9K!!!q9CWzfUXPuYCdLQimsy2xAxhI2tbq2q7B5HtDnIdFLVcz73eitwgiNuBQTsumy8txpJ3JX!!!3nFZ4gkN0eTwXy","name":"(+01:00) Vienna"},{"id":"eMiIdT5UfUTPaoCO6s5vHnoEMw@@@Iwb!!!lWhMoqAsSIyZgLgSNdiXl5CvJJCv66@@@Se8eBABXSc!!!C405m!!!k@@@gc2eOCeS9PeqINMWXIAUNl0SXqcXdvjdA9!!!pOD!!!WA21kV14q9rneUT!!!G78WlsWMO1BhRmeehNHN9Y7k","name":"(+01:00) Prague Bratislava"},{"id":"v6@@@P6j7ICMzrzU6fWqhjbz2SN@@@RXNxF8U5@@@X@@@uscFWUWh9f7VKsNcm0fQgUmS6@@@MTenbJozmDsNdPfyxgprlETQsV5t3HyQZv00P7CIFsPLo8lMB2qhcgMg8iObiIB03rqc@@@WHs5xMvi9UVUCBwiKWHd2y@@@qKPxw","name":"(+01:00) Warsaw"},{"id":"L!!!b49YXAex96fyvQwiOZH0gE1jtbPliOt5pFuxZ1WUI@@@06@@@hgK3@@@8xriaDej2GT1q!!!aSibWRltcGUADt4F8CqZYAI!!!G3N1@@@hJvYLjEN9BSOBlKyaheiUodPxyxZy2g6@@@14VBgJOKP2bOwRJLdj8sqZbn2M23KJQj","name":"(+01:00) Tunis"},{"id":"UpOogWJ3dX8j1oMNzLriqcXsLLyeTKEblNg1wP@@@xZgLXZ56WGAMMpoBf2AGOY@@@liuVN5f!!!dSMH40uVw6tuRY9m91b4S0AAY!!!hKljp8dpjy!!!b@@@n8ldhHzmYTUnJ@@@ozHq83kNjYichIAaRDTpK03Z7nLaK2XiJ1hl4","name":"(+01:00) Algiers"},{"id":"oGRuvakVwt2@@@DVkAN56ZlLCZWXyrC6Tnh0AkgElUSSrt4p1!!!F47b9xxljyt4bKjf3B0Om0EGKwFAjF09!!!wlu!!!je2Vo8B0rqgcul3xVhTMUJl2c5ImQfB4WNgAVTik4@@@eMsCe5o4RgVjlnRofqLGVsGqeljmCPrX0","name":"(+01:00) Rome"},{"id":"srOtA1d@@@jhKSA74pspmBT3ZLAlhwyLxX8NTCvCszD02Ry@@@HwbUtCztV3Li!!!@@@Or!!!zByadc6mSGS1sIyhUj@@@5N4WWx2Gw8075f@@@Xb!!!3SNEG72OE7pZkm0OyysW9H4jYuWbYZwrTQgqzBqtmEDvUzDBALfj4ca!!!CAuP","name":"(+04:00) Muscat"},{"id":"gLp720Fpmm!!!1vkWpkIjaXc2SLgquQ07sydAA0XqHsJoxYHA7u5DgQGSVaHT1RxKwERH5T4ylPONW@@@vRtGN8LBHLpooE6VVK8!!!RaLwXWgY!!!AV@@@RrqTJRab@@@Ov!!!E7ZK2r@@@A1tFH9GTWLxGB!!!96dBU1mxj9lneYdYlQ","name":"(+04:00) Dubai"},{"id":"9P3tAs6Itj5DLUIfOksmcMxANuiQkFT@@@p1nBUqv6yEE3cneM6B2TMYF5DS!!!AW51zMk5tqFfgvxxtioL1xxXGOMy1mtFmKIaoMc76L@@@gFfY3S7ms7bNmFovuSvoiIUS!!!sESdp48vdsn71cF!!!OUe1TzEwqS0HQAozV","name":"(+03:00) Mogadishu"},{"id":"WrdtBCPIx42nRaCorYyHpL6my7vDjHP9UWt6LrWcCP6tw6!!!Ocb0R@@@S6bJem6W3oC8aRp2uUyQTgbrHEWKb8FO25QP2wdrmZetiW92udGtPc8euawWOilxe!!!qae40XotT2otJgKq3ZRE6JkZu625TPr1cm3FOjcI7","name":"(+03:00) Djibouti"},{"id":"I7YlAxCdsD!!!LlqH904SoNRC6FyUkXdAudOnHVdD0@@@Q9QeEmEhaZawXUKGr!!!c5@@@Wcl908ShgxUumxJQzLnq@@@OpkCRijYP3JjrL0SPmkrj!!!Rq33m5!!!kYulxDpRHoFa!!!XWwhzTTWd5FzaVDZrwpDRdEonxm28TQcRmr","name":"(+03:00) Khartoum"},{"id":"fSMatOefU4VZz2uXFctXCQQfNgeqXBxiBXKrHlqP8TbitGn4YonF4!!!YPLCXdhDIdWaw43npMfiPfLT11YYiwz04ih6PXlPekc3ZbbX@@@Iw9zSkcOGtom7mLYvRcF9q8KafVoWEUJSowaxVdO97vpiObobHG!!!glhAL","name":"(+03:00) Aden"},{"id":"KD7Dw0YRWqqs!!!0tSFa97dz45FE0WjkPcnKdXAE0WSjPFaxFyCVokGwCeeVgs1TtDNiSnxc61jBWb3!!!w9o0snvmBXWUnJwzsZod64VLb4SFzeOzLalVGmb!!!hco1n88xy2CDPWXnbSK7iZww!!!6M3yWIkT@@@wS9wAXOy","name":"(+03:00) Qatar"},{"id":"Gre@@@JHRa8xg@@@K9iDoBAqWBES4Oe6aIGE@@@1D8KygB8mxF@@@vEmGv4qJTKXlv6HLnh1@@@HUMpBqjnJvTGm4qFXhSRAoH2An44DKppixkLQTBJ40grsSdm1xFxl!!!niHqxKUMCdusR6naiTVqMV3oWsGawIs7wFyo835U9","name":"(+03:00) Bahrain"},{"id":"24ChZfsRc9S0pAeB1Su@@@CiA@@@vJaZKC1fuDDgGdtbdV55qlu5EY5r0xX!!!f@@@!!!TyXIaoJlcdOJUwnN9Ls4JXmlHDS1lgIzzk0nsfKPo5zmuwAFUmUfGtEjxvgjWacaUcvvk7GdraLchzUXA1a@@@ubNGCu3Vqt0wBWR1G","name":"(+03:00) Riyadh"},{"id":"iMCr45OO@@@!!!97qNi@@@rqA@@@RwUfYNvejZapBWY6NWtxi6IUsttpeVriiHzrirweLbqNS03mKPcmeHMNf89pT1Zu4bP41@@@uHobRwM2XNxvEmzBtzTShR96w6k!!!ttLrJKYjqpVlULMrWb!!!VZwrduY@@@XnGln2Sxqy23XGK","name":"(+03:00) Kuwait"},{"id":"qpOXPTQc1tHUyJoj6FGRBIKrIInHik0PtfsRgtpYvOLfNArzj@@@gqXyJUwu2g9HVzTHDnDZaN2yyeRjsAi43rAYaJ7H1d4DxWX!!!yG55r3Kq@@@uJFcX0dH7jPq!!!r3dTZzu@@@XMrwHbuE3GTn2CF7cqFbA7izYqaDlWbL","name":"(+03:00) Baghdad"},{"id":"wTwGIVloUCslJ4LY0G6MmFtr3!!!kgRi8ybiv5gqdkKfWHB@@@tRfEsk3S@@@GxzE8OXEuA@@@cuqwvQ7noKhMxdo@@@FZo9N@@@b6ACvRZsuluAkdP4o5qR5@@@SVDiIdOK7whnVCbtGTpgNlvzbfNucQVcsIjH44C20AMjoW4igm","name":"(+03:00) Moscow"},{"id":"UOUpyCPjEXy@@@f3B1CqJwqCFaeI6m32ugkfMy0Rg1jGg4lWPS!!!9eRsTW3f!!!LNmUao8tJI6!!!@@@UKUpAITHyEV5NGPwKU9lYeGx@@@jPJScHWaxthorBYTP5BOtIFKwg@@@6lXwYZBy1mKsWfrKu22PBoSE1IneDD0hH7v!!!J","name":"(+07:00) Vietnam"},{"id":"jLcZ7eQsLr2BjwUKWh4RAkmaKTzwY8F0!!!bm4!!!5X19cdmlB@@@W90gb5joOrWVj6nTf!!!zQadimNf!!!kIJFhvTE7IqlpFASHrawSLP9ud2J0!!!W!!!st9OnSFwdtkx!!!j9WaNEGC3w5BsZp05oQtUkH4nBclQtOfc1@@@wJ6vmO","name":"(+07:00) Bangkok"},{"id":"aP42VM0s9aYDqf1GmojZpNE4CbanyDQd6hmcLG8JwXaOQRCz0XStRjrnDzNzW5S0y@@@owY1Z7@@@G@@@EfA8lUYmpRTmQmH2Vln9EyX9avW9gs3kZ9Z@@@GDQubI3dYPdUI4DeEQLcJT6zl5Pt3E5I6iuoSU0m8x9qXsiRq","name":"(+07:00) Krasnoyarsk"},{"id":"GiHSoz9X2OzrbE1Auf4W1ntN@@@MzOmb5NFrmXedxOx!!!Sflv4SAAD6qKG7BNXfXh5v3mgblyVVfOeKZdm@@@m7imASq4DDWKEXyFYs2ynNia0JRahzamPjkRc!!!tBTiPVTkj08CBLJqivX41WZIL1@@@mnv9bGVDhdDMgog","name":"(+06:00) Dacca"},{"id":"sveWIJXHWBGrHJLuJ7W8b9TlUCBLDGTwvCBDaAL67S7Bf4fYy1Ui2Ft0h8cPRWkg@@@JGCpawdsg6pt1OmwvA@@@0M0Rn7pcH4UBXbczat2oEOyNMuBoeEINcsukJ!!!oFLmVsPrHXROXcSHykZxf3iNHOBpoFOTu7D0rQ","name":"(+12:00) Auckland"},{"id":"VunOceSte8XJjTGKVelVrUv5xfH!!!EcD01ebJH@@@AXeeGbWzrB3sW9VPju89ht2vCvMv5RBob0OXG!!!RaLfRab4cir1bw7fKbEu4z9EAmMPH5BtzXKSm6zCmpvxJMTBB7NMO1l4i1xlFY90KapflceaRXNRZeArCxFC","name":"(+06:00) Almaty"},{"id":"k3isJ7gG18hdmane8mZQ3wPSXc@@@F04ZtqXbDpyhKaBaBQ@@@qMwQbBpPWiudUnmuiAIk5TgekQ7BTE5e@@@a81RXdqHz8QxJXV7EfNDY0UqZe1SZPydwqEJ29k9an7d9DtGxAOIkaMs7SPCyIxHMON1hPodJqtNfVZRn","name":"(+06:00) Novosibirsk"},{"id":"wPo@@@SJcSzp3KH0aLt2xYbpXdKg1P5pjgsXuhdRfgKxANcXbiZjU8rurDNIRx1OjYECq8!!!HD!!!3LSVgoItqXtiw4egukvQvExZ0Cy9ZClHDHpPaoYSJcrat5pB7rGUSmCpYjVSntWTwVEdwDqFnaLJxEv7L69zlQGm","name":"(+05:30) India"},{"id":"OYiYHrW2ifTOLY6sFSWTPrhETRRMdGZH1BBx6hIeZRZLeETNYuorMGC5VwyMhADzSSgtURWsDnlfFEJTJxSlGffibl4lbpeaEyoirkKur0O@@@tO8gyGUCzoRB1MXxV5akJVwRQF6bJjKhOkFpUDPaeDnuFCX1i1YH","name":"(+05:00) Yekaterinburg"},{"id":"lV0GuoA9MSBroihwdczWMfXYOfA8jTfoxuyy4Ha2T7u@@@OFM1Qp7yjRnoPMYvpWBxf5X7luH30W7dGuYokRIBzAk4xCWLjoK!!!y9L4N89JQjsKYb0aiZG2AoKXL2cR1BshMDVZ8vWvtRUfHfpf6R9FiawzfqLoL612","name":"(+05:00) Tashkent"},{"id":"xlw9qTfVT70uEBRN6plxUMYUzCu7QRcCXJ5HF!!!6n57UgqzQqbiIY4!!!7AnqUcye4q23zS8KYfB5ghMdiTGFzCL4BBkus@@@!!!mL5m1w@@@TfZvrdFnrHbN9ewvwLlY4teqqJxlleFfJNnNjnTi9q3417p4loueqcPCRCMl","name":"(+09:30) Darwin"},{"id":"W10PUr2@@@26s4myheClmLhaDDZqRgWWkTA5qpqV!!!fiXGhbMGo8egiAWdffg4kJ65M@@@bFstRg0LlsCvgBw1KA4FQZAlIcUJuPKSNhIB4cA6GkS!!!r4ek1igMoFWanE05iq0AmHZXTubG77!!!Ji4@@@8jezK!!!DQuqD972Kj","name":"(+09:00) Tokyo"},{"id":"IJJrwWy!!!Y@@@ZUcq@@@Gutl!!!KsQ5@@@wr0sTGgBqKfRnw5H7cu@@@fBb0phFXpbHUKSmALyRKo43B!!!Tk4XpecjmIDfYFdXi7p4osvlO5zANoyknt3XC2@@@4@@@Y9KQbhBe!!!mEK0i5r28oOfhKW71bqJhW1YmdHyrTQ6k8LajlfO","name":"(+09:00) Seoul"},{"id":"Pg1qVZyMjD8Uo1d7HjAii2T1ABJLt6tqz3NKOtgi8g1IxxlDXwQTWJR4OSW4rnkeubLwYD@@@LlcgkNErfKIoYduzS6qoLIF0a08t@@@UYd@@@R!!!!!!8NSCI9lyILEQKZWo4g@@@GB0uOEmdfG4vKvcbQBJ@@@YnzxQfdlz1NRW5","name":"(+09:00) Yakutsk"},{"id":"EEZSZOw8mUVgUt6WdFceCZXkd1jP!!!rS3s8eVxPl7xwTEJUOEmjrWpgvGurNWLHtrgZ5V!!!gGwSfNHsRL9pOU0ei@@@FAYJlJBLt@@@EWXHrH2aJmeQLX7Q4bEJwFuFMswDkdzahGP36cu9q0WzZm8cKq9@@@C!!!IMy8G0SRw","name":"(+08:00) Perth"},{"id":"oy!!!UMiPVkKZMJBYMuDUKWwImcuvSHPuwadD9J0Lkm89hGSsa2tS@@@qAHrAZFYcctblTkEFNJTWrPBM87XVnoWHjTmOz9DDB092IK50qPDGsojB6W5HaspAfI2RNTP6Y18FZcHC6t7dNr@@@p9iuIgHdA85OmaoIiYVz","name":"(+08:00) Singapore"},{"id":"3s4JXd@@@pbFH6dvn5JFPyQFe@@@bwEFCEebhQklQkTILYfTu5SJDiWaM6bg50WKqcrqVg!!!mfeohfL2dwbaNT4kvRAuToKK7dCty5n38uwsGt6Qg2ulz95rSHJTHPoVck2mijngttf803gSgZS73XVGQARKniEraAKAX","name":"(+08:00) Kuala Lumpur"},{"id":"GZkLA8KyigSPOtMhyjJlvALDrn5Lai4RQmxTAapMMlC8Qp4KmIW!!!vfEtJ3M3EgmDgO7rQSQMXMMtmxh98M0P9mL9gd3oRvHQ3tkOJ3I6RsbeXngMDibGtiq5SsovbIXHY3UKQd9snKfcev5!!!IzjdwE1j21QYVEmu","name":"(+08:00) Taipei"},{"id":"sdQcUkE0CeJ!!!CQE96jZDa7QCsl3ON318vvpNKNaUzqw4Ki5iJK5jcp5I!!!3tHFfwKzLAg5@@@n57jzvYswJuNjKBdFzgPhv@@@gVGD2IJCCbRzHYbNYBVu3Y4rORoKfIwwf0TGkf6vnRSXVsHLdOEkIeA6BEjXwf0HRoW","name":"(+08:00) Hong Kong"},{"id":"E@@@VwDDEn6Z3BF78b95Ah437AHikXej7T!!!XAxkLLuewP5Edalv9Hnwxb07k@@@rs0YpN49X@@@RioftVjPq9!!!NlkwRMIEoD2rc@@@XRY2MTrWjqRAU27@@@yEkYWgttLpb!!!bjgPXarkFzVL@@@kZiau3TjivGB!!!3IvR9teT@@@LWd","name":"(+08:00) Beijing, Shanghai"},{"id":"cUTJsz7Xjm!!!8LfiDnncaqINd5v1N5DWTRO2VPw9zHpI!!!Hv3lTTkifeObW1Np5UM9PL42pcVruWZuTqHIoz281CuGoIzmLjxpx0etoo@@@awGcs3kNAHYY0qpBPF7CutHtphh6oJnA4FG3uf6Z@@@diPEdb34M7vBcJEs","name":"(+08:00) Irkutsk"},{"id":"2j6OXr95bpDMdq1GygfexbY1a@@@VlTjVkVN3RiHV7bt4FYCpXFTvuxKwskhq4RoYSo93yJOqQPDIiIiYgJUa2qk4ti8Yl9!!!9ekMbRTtA1vvcgVNMHSKKVFKL@@@HwzsH!!!yc4Ch59SlOu0JaCTEfrZWkg3j@@@yvqSRyPMh@@@i562D7AdA=","name":"(+07:00) Jakarta"},{"id":"KZXgPdwfN4!!!VEG4E5khVv50ORGr8bC6ATccTYEAhk9DQ9KrwSewIeBQhf@@@2mC2t4rBQCGeMgFs@@@Pd9WzyBBUUl8A7Sk5xrIB7gInb@@@WZnf9Crl7@@@C7kpWP2u3qmkjU34csOEszd09wGlb8x4WVeFIk78wuGUbBm1bQhpf4V9jNY=","name":"(+09:30) Adelaide"},{"id":"xy6yz!!!K2puB8Z3LDJnwr!!!KUJ4zGe@@@f6Ik@@@n1B6ISeg0sBkl7EQDeQh7I1At89ajnnYPI!!!LrqwfSlMuWr9XG7J3984AgRSZAX0ipisxA64aIItccvBFgMvNW4@@@dOkIWIVOArGx6IyE8SUTD1ZUsvom5RRaHP6IlgRgvwmWMlXLcY=","name":"(+10:00) Vladivostok"},{"id":"jzLm4a9!!!m1gpp9yOUWX18RsKbmcEaTZ41m7wWBy5DO67jZ00Z7f8@@@YoNLdAStzMGPgXLjAZTUT5Dro@@@4ghnDa1W5P!!!qgqGwjQ4yQ6OHhRMot0@@@gOe6o1L@@@BkOerdCHg6qee83aIXd9H8M0u7CuSOyc3SKTZOuJxd76OnhsBMNTo=","name":"(+10:00) Brisbane"},{"id":"HbAz0KIszQ1EoINCTlwmjCWA4fZ2KTER1nS9AFy0qa2z1n5IMv0wqmKDmKLHlwBJ0Gacg9YENJ6hJMAKXTGR!!!OraUMBQ4t0KTSbhnyAHqaaihcUL@@@HJD16MUUcswmEmRAHun6iIJaXsIUuW@@@EnPW9fV1dp04hyy6!!!fn66Xqry3s=","name":"(+10:00) Sydney Canberra"},{"id":"qsByuquMttGB@@@cWzdgdWMGsR2zDokbOtPVGiH5ON!!!WQqcIkn@@@lQ7cpjVIPFvrd@@@p!!!gqwapzsLLPFovmcWz2gAV5rJqdmn5uyGFMTSJuPFCRCGQvxDYaIDDulDQ!!!N3nXy7L!!!S4sNJHMj7fQWiiD8e5TnWG05tdAQo9gMBBU!!!pkaU=","name":"(+10:00) Hobart"},{"id":"qVrNixBqK35bR2bwWN9V86uAFj0sfePvfd24ZaG2RVDgDF82VHUYvZL5hqLELXaUyjp8wRmOoWyUCRqQ07KSIU6JqnE5SVkmjgkDhHrkQXYYCrE8w@@@kIQrEzQDAt5FmVWMb8FXnOLOaGs1dxGSiSDKwtkNIfQtREtmcGrTI!!!MeU=","name":"(+11:00) Magadan"},{"id":"JZ0f6xhi10XQ7h7m3hXt40mf@@@uM60nrJlzF91Cczvadrr3!!!R3xgl5LPgSVrXlNCmtr1IOShoce9HDTiO5KS9rBl0N0qx37yZs5WVaqncks9S2Ma1iFT9!!!OHR8vXEGQIXIfLMI@@@936HqiZvI9BfAaqUojKe7zE7HSHE@@@bL3xPwFo=","name":"(+12:00) Kamchatka"}],"success":true} </msg>
<msg timestamp="20210405 18:48:10.092" level="INFO">To JSON using : pretty_print=True </msg>
<status status="PASS" starttime="20210405 18:48:10.090" endtime="20210405 18:48:10.092"></status>
</kw>
<msg timestamp="20210405 18:48:10.093" level="INFO">${pretty_output} = ('PASS', '{\n    "success": true,\n    "timeZones": [\n        {\n            "id": "QDGfoL8MVLLkKlpT0Z!!!nAz65xuXssPmzop8KKtZcbpjbGzOPL713OMwJtYQjdL7DuafsrEoVKSDkQmpaE!!!dBmMm40G1XNxmrDBjsoLTe26TJbbN...</msg>
<status status="PASS" starttime="20210405 18:48:10.089" endtime="20210405 18:48:10.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:10.093" endtime="20210405 18:48:10.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='PASS'</arg>
<arg>Log</arg>
<arg>${pretty_output[1]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pretty_output[1]}</arg>
</arguments>
<msg timestamp="20210405 18:48:10.095" level="INFO">{
    "success": true,
    "timeZones": [
        {
            "id": "QDGfoL8MVLLkKlpT0Z!!!nAz65xuXssPmzop8KKtZcbpjbGzOPL713OMwJtYQjdL7DuafsrEoVKSDkQmpaE!!!dBmMm40G1XNxmrDBjsoLTe26TJbbN6YaGWbf1iJmnhTHWWVJmO8Tyc05Dvn4V8ERlHQYN89!!!C5iR7x",
            "name": "(-11:00) Pago Pago"
        },
        {
            "id": "P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n",
            "name": "(-10:00) Hawaii"
        },
        {
            "id": "YH@@@C1gCA5Lc34Nap2C@@@jUYqHr!!!uXmWnfNUZwrtvFGL3AsxgAZnxsPfK54RtD8DUESOThwav73qL@@@KrHshFU0FuZKlyNBH8LUyGBI5tScD1JGurCVLoQedIeIlFCYIKfQtAd65BnvtrydikkAWC4DZzVJEsTireTa",
            "name": "(-09:00) Alaska"
        },
        {
            "id": "p30JQBweOKtmwqunIpMU@@@B7T2cTGj5iGlJV@@@98eYkoLpQD92rNIxhzhFdE7lZ9FIEiEi0sBgqI!!!WRsCHg28YOLrTJi2@@@Cvfopjwar3eXkNLMyFdl84doJO41FghYfZ7@@@YtYjZBrypxpf140J90y@@@Z52eI0985jKE",
            "name": "(-08:00) Canada Pacific Time"
        },
        {
            "id": "8IbQ47tlirpyxtiLV7Q6D6PqxzbG9mKt6VkGWgXBrsLgYL40hiCH0B4TUpnCLL5yCT6WSyqMQCljhuwtaTorpUE4KCQZO1KUsUFNoVKkf1mK57EhXUuEzY3JoBPaRTtt8033ndLM1G5!!!lWpj5Kh7G85zXlAn7bZR",
            "name": "(-08:00) US  Pacific Time"
        },
        {
            "id": "KNSKzuLQxohxf4s0WjV3G2WBjjvhTp4qwxQruRvlc3o07KlX1Xz6x4iknV7jkBfG5osObDjqiGVNGGJI9Hlg1O2d7A4hkfErVCXVO1E@@@gV6SNcK5MPGXsTzFITkh4UgaK0tXcKt6!!!TR2DJQ1Eeoa4JtMZEq!!!ISuE",
            "name": "(-08:00) Tijuana"
        },
        {
            "id": "uF58sl8EURFj8eDszm4KS2!!!xA6ZYNmlSXvwwmjsh@@@66yQcWA!!!ZsHQKtdClGUgxbuyiuO@@@sw@@@lOOjlv0HG@@@6r58GqDUVByEsG9z9m2shlCTDEEJzKbHoTMEp10hXw5c2mshgws1EgNXif2eD4lzuWShsFRKU7e3p5",
            "name": "(-07:00) Canada Mountain Time"
        },
        {
            "id": "QCPRZXsVFXmAnFvf4iPYgHGKFZUTwnawVb81TZlm6lzKTtWs9Mb0uYLJxRwSmoZcGGJS2X398@@@9OjkmZf0SORPW47IiuEwuc45yp4TUBVJqTCeC1RSZCEwPuJR@@@fcuCEsYzFqtzFkyr3PayXc05ga4aYG4Jpr1tL",
            "name": "(-07:00) US Mountain Time"
        },
        {
            "id": "5LtTRdcCrBTrKk3miwBYMGiy7zyYLyvs00UF7whZDTdiUfiwRIAY!!!FG!!!@@@f5kHAXbOYVN2tqo9DBnlIF17FFiQ6cHG9tc8lmnXVwN0@@@Xk6Yo@@@4VdpqC0Vx@@@MnLUfp!!!ibrLj3AJWgZxFnBD4YV3@@@@@@0wx8OJydRsCvs",
            "name": "(-07:00) Arizona"
        },
        {
            "id": "2sKbbJ7HH1j6Ef1aqits!!!U9JZ4ROCK9NrYaSHoDhWv1KQBE74HsHd8ZC!!!QP9R9tVThOsTvgNiByni17@@@scZXb9CUZQINoi6qrr8MC6inzfSeWq0rfepF3q0k4DsP9hb3xdEbInocLThRGzIl1EeRL1jIfg!!!hOtit",
            "name": "(-07:00) Mazatlan"
        },
        {
            "id": "@@@6lOnOkaFfC9s8LevkM7HSI5CbIZYfy104RVEIy7gRJu631fD59g7Blunr6oNeOdq1pgzDKEhpNI3VDpDsgPEA9ha4Mr77e5ncEgNg2O6WspIgNJku3Htv45Vb6MqHq2@@@1d@@@FHhEEiuTIpSXqyUU2gHvBW@@@9tehA",
            "name": "(-06:00) Canada Central Time"
        },
        {
            "id": "GM0Cjjmcetk1mDzXLZ1hYda2BjjfC70AO1NFypPjRVdoW3HXuOAFZbJe4HbkoV!!!FuPEK8c6jkdM3VuCIEeJbZE6hEVX0wZw@@@ZTF6ThvFTJ8a28SSrl5HiVoKHxOzrLzM3L8dgyR!!!8ae6gduJnsqiouuL43QNFY2N",
            "name": "(-06:00) Saskatchewan"
        },
        {
            "id": "6FTJDrQa7OK2m0tWYi0vHulkLclIDYAUTXiQl0vR42mdAYBgDijWMPhvASJvsbiqFbBtvhoW3acIJN!!!x4WTrb6aeD@@@hiPiuVsWPhF04WIKa0Ot43pyJMuqr3vG2qhjwsV5MmdGqihRpNpPldy8F6C@@@pnl7LBMJCR",
            "name": "(-06:00) US Central Time"
        },
        {
            "id": "E!!!rMBpItFI2XLfVFB1U2OI9ROkATCbQ!!!X9X01fl9kvlfYHpV!!!HsiN21zhmK!!!Tt4aviofnEZog!!!vBHuXy85ODCBDpzHJaelIvMkEZ!!!J2@@@Ra1Vz5r1PjJU7trlaVwJMqvMti@@@IxIoWKLOaJ3u!!!9GUVLUt9yFihGrW1",
            "name": "(-06:00) Mexico City"
        },
        {
            "id": "I5RRim91MU7cFETGAR5b8XAoS3kyA1yVLIFvP4oV4vgnwLOv9jHt10w1Daqo80ylX7b9tUUbm5gO@@@pzR9HtO1Ar9AmjsOVhqLdlesWvvVC8Hif@@@EapY7w2zhvuU!!!Zx6Ra3IJ08U7d!!!0ogNbxFz7yttR8gUI4A6TI",
            "name": "(-06:00) Guatemala"
        },
        {
            "id": "A1gLCd2OCZFFK@@@gOK58MlKX3iaNc7RN@@@Yat7G5tdnK5nVp77B7LgOK@@@KRtZgxF3vX8ieVVlymbAziHOfaG04OWd2ARixdjNCEBorungQk1RU9DqmaQ@@@UKAvDbnw46akixNaDB1HuN48QFdzPpKx8IJWyElJTMM79",
            "name": "(-06:00) El Salvador"
        },
        {
            "id": "tgNA51ANaDItho7DU7JfREv8upt@@@7rywDBeVgz9YEvRj!!!2!!!jQT593L3HA@@@OGP8J8QgVmJbivF6UQ@@@5fVxeckWFWwwzwzG718mDh!!!C@@@S7FRoBscbMt7a4adCsVSwft@@@zU4mON9CXiq77lJwPFjBmouoN5FsOJpVrl",
            "name": "(-06:00) Managua"
        },
        {
            "id": "M8K4pYy98k1FZcadaL8di5FjHhxzqcJ0urgquggSjCcE@@@f7Y@@@74FNf8G9zV!!!4Vo!!!4pZyU4@@@RlqVJHvT5CHIz82f7y8f8FotIenNVDnDcWDbWhgKLXA1W2lF73Y3jAr0G@@@Aac@@@k1lXuwKMvuM7D!!!QoYGDlHFDd6X1",
            "name": "(-06:00) Costa Rica"
        },
        {
            "id": "IcwnA!!!8CLGUsIbX7LDN9uthElPjIyaYXgSoGYpxn7a1NM2AHMih0y5nuS0rLHAnJVm0J1JiB1gHX7V3dMQoUX1PxN09ecC7vChVa!!!z5ynQMQvid5m27ZHZ7qoCLXGGIzBx0PMybFWe2o5nTa1khzKled0k7Uvx76",
            "name": "(-05:00) Canada Eastern Time"
        },
        {
            "id": "bVZxoE15cjzA0u91wf7yK1AUDh2giB4C95ItP43bz27WtyYp2lWOb5HERLgITJn7@@@J2h2F6A1s8jUXI84e6jQOX659lZRHIL196vLpRca!!!sJgZVfp5F1ij9rL0jpXiJw@@@qWVFaoAZeSHNZcXtQjqr1uOlajQWkS2",
            "name": "(-05:00) US Eastern Time"
        },
        {
            "id": "N4uqcQ9A3iH4JZA3TQpDDpteO7C2TPUI8WxePP1nJ5VGQ31RHtOk5JJ1y0KrgiPZoYLza@@@z!!!GEPAHZTCd@@@HOJIhYm@@@jBH2nZoyPKj8E1ozwVwMf0NB6mu6u4RPRNKPIxPveoiJ5ScnK6OB!!!oz!!!SqgTu2v7RRO94d",
            "name": "(-05:00) East Indiana"
        },
        {
            "id": "qsMmVw71Y7ghm2iZzR6pcE2U20Dx3sNTh3XPJE61wxd@@@UOzEyQ3s7wYHHe5H0G0jC6I6MpbEnLWn@@@qoJEw3xxK0DymVfTk2odkM0DCstuAvES@@@9IRggSwnQFkRZWs67bAv@@@s3suU@@@FgyOuAcdZfC9awKuC7SyxdK",
            "name": "(-05:00) Panama"
        },
        {
            "id": "eI4vWYPAFTTV!!!5082y7HxgWkMgfH@@@Epir4OO9eUO2hRK84zNTz5oGImOQ98QBJBTvIMC@@@QuU29f9A48PCWHix5ECcvH!!!ug5X6wx2ZfcrBQb@@@z!!!4K6oh!!!NczxEP6XmaM7rOQSzu3z6T2bl@@@XW6U@@@1yIMVROt4wG7s",
            "name": "(-05:00) Bogota"
        },
        {
            "id": "hGjUff1QUMHS@@@M!!!He60IJ7nyF6LaBtsGRDvTkkL!!!uvdy6GcpC85ClBzC9IP1r097PrLESsdiKBErkTXQZtPhLBg6NQM!!!gKUxiNIg0Ocj0XT5gUHWG8tNh7hagJcOGI!!!QqxDoSX4!!!5p0eVy97F6oIUZRto8T5KPaW",
            "name": "(-05:00) Lima"
        },
        {
            "id": "jdhhLXlLvTb7lw3yLlUFPuq3KxTjaiWfyh37PbH7W1QQO8g8PNL8eciHBlVjCiDLz9WG!!!tyZ9LWvlwRkdNBuH32zLk8KGXNVPkGRzYyqVuoP6qEfqjzFPRojZiGkKknWv1ZuqhjBWCb6Myn3IA1UJgD0EFFvwr0F",
            "name": "(-04:00) Canada Atlantic Time"
        },
        {
            "id": "lvaqBUpKRddNWiun2oWWWb8kHR5Qcs76RBEuuxpuwD0ahMg76ecbe6XiBKrAwPYFVhYCyk2BJhNaGTCp@@@4HDYueFbxQ2qXTvFBV0cHd6VVHeorAlCHw!!!riQLD7d4goAHEC@@@aV090wOwlZXt0nw0SKHO0vGmkfTmh",
            "name": "(-04:00) Puerto Rico"
        },
        {
            "id": "yday8Oua5q1ruxwrnrk2uUhaXUImDi7R02bThU@@@EYZNv9WL00cgC63mtxCuQVCR93JSYA@@@kJLQsYtIhsPa5snUZ2uP2mBvPICSJuF@@@Vfx3ISjl8RkRneF!!!zh3wR6oYEzC1cS7!!!Z9dC@@@XGSSk!!!ly7ZtUa@@@3qPUHnP",
            "name": "(-04:00) Caracas"
        },
        {
            "id": "4cEfiRmDqyYI!!!q5UvqzrHKBrF6MgKl0IQAEbHd@@@gm6ztKUOchxlDGx@@@6CKaeWGhfPJNDApoMqtu3mM2Et!!!ukb7mFs4Nm4uuDumhe@@@vob2Rc8Ae0gezXLPDOP0PtrSzS!!!z!!!kYdkV2HMzCYD1rSA2TcTJz4Vzkeyq2",
            "name": "(-04:00) Santiago"
        },
        {
            "id": "l3c1VCebOvgJBCjpMP3RADpMSXF6@@@sl27ko9dzFzmmAKiEam35BP4JY4T0EeVdwrUdYX2wxSElcXYPVf7VIP8XJ1vuiRIOIpjSd3ThxdauU3RERy85MzNpXG9qjFWnJ9QUMX74pV4a@@@@@@Zb!!!6JYVUZU1PdRLXPeDA",
            "name": "(-03:30) Newfoundland"
        },
        {
            "id": "4PZaFvt!!!7n1TedetWYPjjeAbsUr64fvD6BRMxj9OMQbnM2q9B43dM3xYje7WzhiV1ESnNHlpeVIPzyiFZI!!!P8frUF5!!!bSE8IOfnTQVw0Bydub5!!!bF77DGc4jOsqpFzdjyljerfCZkMD4w1nA8bTP58RUjHXsamJL",
            "name": "(-03:00) Sao Paulo"
        },
        {
            "id": "GA65sBkIivWEXO8ljCWZj22EoXOWhT5oNpM21wGIWTlZxTfX3D!!!6j4ELKO4IYo7FlHJpgOrkIpPYUbpGbM2nBJUOTCZ4zLFsmvyb12DvZy0ecCW9tLmCPeLK2sgUOu9xWlEi46TbYRpWgokg7kWVpGCLM31JmB53",
            "name": "(-01:00) Azores"
        },
        {
            "id": "zmuoZNIACprVyl6lM2YBYQA4EIifAvPZoRtQwy5gB1YQtvTloiqeptBPdaiVbynT@@@3nl5@@@n9IVvZtoS87YBJXMaU9xQLZE1Y6ON2mvAsD4PF9!!!9ebx0rrpr98LykPtpwbsiBNqwllEg6pNyIRK@@@JiDukQNB7FPQK",
            "name": "(00:00) Universal Time"
        },
        {
            "id": "D6LsACo5wQa6SkCVqIhiyCN7qe4kFp0SHN2AB8I!!!l2gUFri2vj54SD7YwqPh8eUvzKrRFqeqsRK3uZcBiwAG0WOddJzBMHy8GsJiSk7DU2gt1mKOwRYuGcfWovJUSvINwS7AH@@@VOvUm!!!0jULNwF@@@lHziz5MgzKwC",
            "name": "(00:00) Reykjavik"
        },
        {
            "id": "9@@@@@@cxwTk63nr44@@@fZhCWyA3OG48XUtrHA8OR6o@@@zKf62sUQQCy3us@@@escFL0GafQQxVfeXobDvQAHQAsL@@@IqluxTuCp0XVbD8nFCqZNkpthAc4U0nr5Z3UitvgkjyL95quD19y88jNShk980YXxMnpzvejV@@@XMi8",
            "name": "(00:00) Dublin"
        },
        {
            "id": "xhookJpU1sCf0R6fRU96Jw0r6SRXJ1KCX5PPSjgCcS3TOi@@@puzosGr!!!1yoi3Di9d@@@73Z39x5fzOk0yVLBmruvAC4dvhsb8NRYAAxEf5HkmtYL@@@yyV6xGs3Mq@@@DfOeVZ9Ssbhp3FG2vorfuwnYrjCUykikyuGJHrW",
            "name": "(+01:00) Madrid"
        },
        {
            "id": "DgHRmUwV!!!DGn1!!!YApW1hwqCYaJx!!!1peeX@@@9j96e!!!K7AHBgeYKzHtZvnto!!!86ygq8EtdH5fUxDaIHnQ7r26q7FMch8m!!!yNDRLmJRMfIkIlqBiIiUWqQneUs3561G1gcW73PcgqZqW4oaaQVjBIFRq1nhDvgIHUMN5",
            "name": "(+01:00) Zurich"
        },
        {
            "id": "r1EDjRPf7k2GmDS3BcP965vDFQGW!!!rGzXpf3B9u9SXikg2DFbmyNwOEoV0xvN@@@DTfIaV5zASrO7vM6@@@5oK0TUf2K5VvZvs8Bx1iVhafPLCZg7nr!!!Z3zOEks01dz39dGxl2jCYmWlA4lhk19DrMwQwUERWcE5M43q",
            "name": "(+01:00) Luxembourg"
        },
        {
            "id": "Tgi@@@YeIA2tbliAu!!!EIkeR86@@@uR5SC5mXNbYyA0sVBWAyESUPQJFxi!!!MlyfmQFLGg85qyv6vDUDrtr6gZPR@@@D@@@PuiiFUC4egalMkUUB2jpgSjfL!!!h9P@@@CJERN!!!55BDx!!!aNKxBxSuANUNLsPONXv6wcQwit2ltVMzn",
            "name": "(+01:00) Paris"
        },
        {
            "id": "nUCFzNX8HYE74mOJ7ySugWg9w0upzsQ791HWj6mDTcUt0zmPipaAP1yz165w51gC5SWepXFp!!!n2KNWKL!!!oE3XP4OrVyIY5ZNqQWE9vgSAVN969Ee5c6p29LG!!!l7F@@@uOueKVvwbA!!!EwMobWngNnAv63C8c!!!Yk6Wk3",
            "name": "(+01:00) Brussels"
        },
        {
            "id": "Gl9rh6NkEJChm!!!qNyN@@@QsLotBcza46!!!wGKXJnElth1XCu9V!!!k1r1ndQhbYRMlN44TSR3itVBxKKP6h1AN1BVWo3PcRkM3wOaSaoZ7TNng1DwEeDYg80NPJHl!!!ZlkO6Qhlg3xEUbg0T4fEZRRlKXSRtsUNVA1LmZv",
            "name": "(+01:00) Amsterdam"
        },
        {
            "id": "gyVfyqQPPP24v150bcBh@@@kFzXP2DiKWnkZpwYqnWA!!!yw7QbNYVHDTOdrxjyJgMk2YPubt77Hffu035Fs5NT!!!EPff9@@@graSjHa3Xy@@@UMQjCrcQd7DyPE8ko5dJ1NvFZr4GJLnH8b7mS@@@GJVl4d8uCO95P5OiTCTMP",
            "name": "(+01:00) Berlin"
        },
        {
            "id": "qw4CV@@@DnNGN33L!!!ADUlGCde8m6o4!!!8WymSaZ!!!usF4eWkImNOE8Y9BAGJM9pulYeLFoESypmo24wgin3IPmrETGtrwk9Z7WS2RLB2yIt8IMGRQUkiiRptyJN1m5pMRDv!!!ayMTIBys2K5tyzzNuPqUV@@@4HfzKnrnKk",
            "name": "(+01:00) Copenhagen"
        },
        {
            "id": "yHcU7woOkr6fQzW379UhSo5WUJwZ71vkur@@@2Y8lrj4ZL2xJwcZRUCLGHHh5wDJ9Lbb3BH5WQlMYM7sAtoSFJkIiTPnq1SMumMBfP@@@fS9GwUhL3u7WMSJL8ehK2VZvSVcBYddlwO2i6@@@u!!!eAYJssN!!!AXWfFThAEVd",
            "name": "(+01:00) Stockholm"
        },
        {
            "id": "dFEJqIWLq3hn7A3NxP6wbM8glzgbWlgB2KFIuL7mKlcqVeqtTZi@@@l8THh7dW55CRsadOghbFsdxhfRa7wX!!!VbsNT9y@@@FCX4mW7S38HNHk2TU4jPitYj75PIAz562tlONJW@@@DIkK8YaR2IAhP6gWZagCtcEXpRMMR",
            "name": "(+01:00) Oslo"
        },
        {
            "id": "hmrIZOYMg031NcXmb8T8vu!!!SZxTKLewH@@@NyWgNwVQjxdzZsNb7@@@3onF0RdasJTf@@@OtaHC5qHN5G1bV2T@@@wh7FWvQzDKwR8SqhGhBzAMB5xYpQ@@@JwFefpcZJ74v9uFNCXXpEbFdZAJ!!!lj6YTO3oO@@@h2LkE3LE78TT",
            "name": "(00:00) Nouakchott"
        },
        {
            "id": "SmHmX5M!!!w9gYg3XEb57P3QUzu0nw5lEgSVQoIDHW!!!i6C9c2UfKI9E9!!!H@@@IRdonwlWwvAtZwKSepa90IuXKJkolTRUoqNYeXj09e85b1ACT4kCqt04JRqTrUrCHPMvKVFS9AwJNCc0CFB2aoIx@@@4S73lCgTA5jsdN",
            "name": "(00:00) Casablanca"
        },
        {
            "id": "RCJL5NRQPoKksG9QemzMFBMaqDctEBPyT2btm1PCxXwN6og9bOjIx@@@600Z3qpasqCOm5WzhHGqkIqcpXG6dCe1nkJxo8RaJfvrvw4lMnLDpv5jombqdxZCDFB4jOr06bpjk6aWJzBBVUVWNPhUgmDTFke2WDf!!!vB",
            "name": "(00:00) Lisbon"
        },
        {
            "id": "dYYei37hiflqYT5BiWwfE7AattKE25cxqaIyxeyZfvaxk@@@aVM51yzEVSfrwIr34qRjmCoQcnFBsxukmuI3FJyfR@@@VgP1Sn34eNxHVf2TApOJGnhPdMPzFULQhXRo3fBUS@@@pfjIt0E5FZ3mjpEPLVSPyLUAu8F@@@8l",
            "name": "(00:00) London"
        },
        {
            "id": "mQKbW7QMayZN6BCyeYmrAmkYst8m@@@MKNVjNKVlUUwmGAA6i3mTna2PRaCar6MZwVjPf3owTg00k8tAxCL0iJ@@@vZTnSpoDM8oTbTYZRk3rLndxj!!!gJnGN4sMUNWr6DPF1eLTn04ZXiXWpuEAqNj!!!rnsPBjj0u63mY",
            "name": "(+02:00) Johannesburg"
        },
        {
            "id": "buqzt6JjjbtkQLnorJpb1X@@@IQbT0X8PZlO69G1mOA1wveNR@@@KW9OA3uCa5fmS@@@6AVgzIN3I67f1uw4HmIvfs5WZCTdSHx8UuyV1N@@@NPR1sE5Nm!!!0bt1ZA6tD8gW2ywskXJsAJDvnOArukr!!!rPAlwFLoWvd26TcZO",
            "name": "(+02:00) Cairo"
        },
        {
            "id": "fb@@@KWV2fzPIdllK!!!wcNVcDHM1O3Cllf5X7YNoFvi5kS3WlGBGYGULA8cyokfRgRce5Y0O9nOJfBur53H0YBmj3R8ZgdV5psoQCnwCgqwNk2eHKPSivsJzngsQYcW6hhWNV!!!V!!!3TKjV606yaNUZt!!!6UEqB4XaN6Dp",
            "name": "(+02:00) Tripoli"
        },
        {
            "id": "sJm574MjBqqu6hgaSm63WVlW5OiO7fcfKsLoO1TbAgmaE2O0PXd5rPEoN7m!!!cy@@@A@@@0s4nFcKnJd8YMD0ytZEVtYC7kSQPgg2VSasS5dniZ@@@HFh@@@pGc7xtQttmnchrebVxotl4gfXIxEmyICo72cgSzrgMWmQ@@@zgc",
            "name": "(+02:00) Amman"
        },
        {
            "id": "81O69NXg5q5DDAI3YQIsIddUFqe2Bg4fY942iNP3rQDtzz4YBHINUSwGtE!!!UbZFDJXIx8iW43tyQcCeI4u9IH4@@@YOYn!!!AFV1qVK!!!9oixsofjPO4ZeRoJlnw@@@LGURmytn1lGyduif8EaPy0GzjfCRs7p80pGe1m@@@!!!",
            "name": "(+02:00) Jerusalem"
        },
        {
            "id": "1v09AmqpklAKmjQEFwOcTcG@@@dDQ3EmH@@@Ki7HOg0oxwHJ9NnMUX8nC8jm7b3TOX6@@@R13mefUamnxAb4Goi642LY!!!70KtTKZEe04UAdoS3O4eeXXFFBMCoLQxo8qRQ2TeM8gq6AoonwHdPuX72jFwIgmwF1QB89hZD",
            "name": "(+02:00) Damascus"
        },
        {
            "id": "gUMbU0FrbSJVZuvBiv8XYhDfg6zZo5LnP27h0CDTHa3mN!!!Ozub!!!P8jypJGdyRG2fw6Dy6AbY1vRo2h4bWGc8iRD7OsafrWYsnaOE4TQXVUyzDH3U6UmYvZjaRAmXMWwWVPfTcle@@@8Bp!!!X3sE6V2NZh6vWDfarMjD",
            "name": "(+02:00) Beirut"
        },
        {
            "id": "@@@e13ZS0IlfRJZ9Bu93!!!Si!!!5YzKh3wlWnjEvDhDyw7lGnf0USJ3dxpHvS6GSyOTuSAH74h3ebEmOJIceBWVi@@@r2OFLRzBEE!!!nUHtCkiKAq6N0FEQXDCZbMcYpuy@@@Ug0rznsbbm18Y10TEbO43XuOsJt4n8sXqbJgK",
            "name": "(+02:00) Nicosia"
        },
        {
            "id": "UAHy48ngyHA7EK4K9M69h96OzUFBKpZWaW4JT@@@Bq5NrqNZGJY2iZHJX5ZoG0ua9U67gwGAz8hO!!!rGTmlKQy3oaj2Mjt5RtRXV@@@qgUZjpjlTI1rPoqpIJ0pLi1bJrZqE5qfNnS9GYntA88xYVXCPAou46HmOePM3j",
            "name": "(+02:00) Athens"
        },
        {
            "id": "1XXmDvmUCY8QUBFUvOuc0b1rRgbJIfFGdwJAedPHaGXjAfVKOVqqcHCMf5gMDP!!!d8o!!!vYcm0L1qGZlLAEiBaRAyUdWo9ioYBvBNN!!!oZNU6vszSCiVf8iY6dkApv8PU306NkiRAYj0chP7aKVs0c254qDhYivLg!!!Q",
            "name": "(+02:00) Istanbul"
        },
        {
            "id": "!!!9@@@dRNTc!!!ZFdyhbKl!!!O7h3KJS2SoV7!!!pZqAo6RYuOedTAuZQxHhHJsBxaudx5JKI!!!TPKtISv3h3fsPZwDbOCBbiNhA@@@2PlE5IayyzwAb71vePT9dME577o8V8LpNXttZDRNv45UTmJK0OCeu89L38O1zsbsnCNui",
            "name": "(+02:00) Sofia"
        },
        {
            "id": "M3ZSHoRh8Wk!!!4CduY3pjWH6aOMT2XzG7Oh7TVEU6pEEj7chCWy38ZpT6bULNG@@@VlI1vVPa2QAR3zvupFWGlgKVwURSfNAEm7xBIbe9U!!!N8SS0aZLuY1JafA7XiPfdQuGMHV!!!n1NtTMWwpsUv8I@@@B3tJyWV1d!!!gJn",
            "name": "(+01:00) Budapest"
        },
        {
            "id": "j9qP5fN99uHq3Z!!!iHy9Ld@@@VuDA0uKm7HTvUOMYkS!!!B2AW2JPs5FnVoYjZx9HuqsiNAoeukoR9K!!!q9CWzfUXPuYCdLQimsy2xAxhI2tbq2q7B5HtDnIdFLVcz73eitwgiNuBQTsumy8txpJ3JX!!!3nFZ4gkN0eTwXy",
            "name": "(+01:00) Vienna"
        },
        {
            "id": "eMiIdT5UfUTPaoCO6s5vHnoEMw@@@Iwb!!!lWhMoqAsSIyZgLgSNdiXl5CvJJCv66@@@Se8eBABXSc!!!C405m!!!k@@@gc2eOCeS9PeqINMWXIAUNl0SXqcXdvjdA9!!!pOD!!!WA21kV14q9rneUT!!!G78WlsWMO1BhRmeehNHN9Y7k",
            "name": "(+01:00) Prague Bratislava"
        },
        {
            "id": "v6@@@P6j7ICMzrzU6fWqhjbz2SN@@@RXNxF8U5@@@X@@@uscFWUWh9f7VKsNcm0fQgUmS6@@@MTenbJozmDsNdPfyxgprlETQsV5t3HyQZv00P7CIFsPLo8lMB2qhcgMg8iObiIB03rqc@@@WHs5xMvi9UVUCBwiKWHd2y@@@qKPxw",
            "name": "(+01:00) Warsaw"
        },
        {
            "id": "L!!!b49YXAex96fyvQwiOZH0gE1jtbPliOt5pFuxZ1WUI@@@06@@@hgK3@@@8xriaDej2GT1q!!!aSibWRltcGUADt4F8CqZYAI!!!G3N1@@@hJvYLjEN9BSOBlKyaheiUodPxyxZy2g6@@@14VBgJOKP2bOwRJLdj8sqZbn2M23KJQj",
            "name": "(+01:00) Tunis"
        },
        {
            "id": "UpOogWJ3dX8j1oMNzLriqcXsLLyeTKEblNg1wP@@@xZgLXZ56WGAMMpoBf2AGOY@@@liuVN5f!!!dSMH40uVw6tuRY9m91b4S0AAY!!!hKljp8dpjy!!!b@@@n8ldhHzmYTUnJ@@@ozHq83kNjYichIAaRDTpK03Z7nLaK2XiJ1hl4",
            "name": "(+01:00) Algiers"
        },
        {
            "id": "oGRuvakVwt2@@@DVkAN56ZlLCZWXyrC6Tnh0AkgElUSSrt4p1!!!F47b9xxljyt4bKjf3B0Om0EGKwFAjF09!!!wlu!!!je2Vo8B0rqgcul3xVhTMUJl2c5ImQfB4WNgAVTik4@@@eMsCe5o4RgVjlnRofqLGVsGqeljmCPrX0",
            "name": "(+01:00) Rome"
        },
        {
            "id": "srOtA1d@@@jhKSA74pspmBT3ZLAlhwyLxX8NTCvCszD02Ry@@@HwbUtCztV3Li!!!@@@Or!!!zByadc6mSGS1sIyhUj@@@5N4WWx2Gw8075f@@@Xb!!!3SNEG72OE7pZkm0OyysW9H4jYuWbYZwrTQgqzBqtmEDvUzDBALfj4ca!!!CAuP",
            "name": "(+04:00) Muscat"
        },
        {
            "id": "gLp720Fpmm!!!1vkWpkIjaXc2SLgquQ07sydAA0XqHsJoxYHA7u5DgQGSVaHT1RxKwERH5T4ylPONW@@@vRtGN8LBHLpooE6VVK8!!!RaLwXWgY!!!AV@@@RrqTJRab@@@Ov!!!E7ZK2r@@@A1tFH9GTWLxGB!!!96dBU1mxj9lneYdYlQ",
            "name": "(+04:00) Dubai"
        },
        {
            "id": "9P3tAs6Itj5DLUIfOksmcMxANuiQkFT@@@p1nBUqv6yEE3cneM6B2TMYF5DS!!!AW51zMk5tqFfgvxxtioL1xxXGOMy1mtFmKIaoMc76L@@@gFfY3S7ms7bNmFovuSvoiIUS!!!sESdp48vdsn71cF!!!OUe1TzEwqS0HQAozV",
            "name": "(+03:00) Mogadishu"
        },
        {
            "id": "WrdtBCPIx42nRaCorYyHpL6my7vDjHP9UWt6LrWcCP6tw6!!!Ocb0R@@@S6bJem6W3oC8aRp2uUyQTgbrHEWKb8FO25QP2wdrmZetiW92udGtPc8euawWOilxe!!!qae40XotT2otJgKq3ZRE6JkZu625TPr1cm3FOjcI7",
            "name": "(+03:00) Djibouti"
        },
        {
            "id": "I7YlAxCdsD!!!LlqH904SoNRC6FyUkXdAudOnHVdD0@@@Q9QeEmEhaZawXUKGr!!!c5@@@Wcl908ShgxUumxJQzLnq@@@OpkCRijYP3JjrL0SPmkrj!!!Rq33m5!!!kYulxDpRHoFa!!!XWwhzTTWd5FzaVDZrwpDRdEonxm28TQcRmr",
            "name": "(+03:00) Khartoum"
        },
        {
            "id": "fSMatOefU4VZz2uXFctXCQQfNgeqXBxiBXKrHlqP8TbitGn4YonF4!!!YPLCXdhDIdWaw43npMfiPfLT11YYiwz04ih6PXlPekc3ZbbX@@@Iw9zSkcOGtom7mLYvRcF9q8KafVoWEUJSowaxVdO97vpiObobHG!!!glhAL",
            "name": "(+03:00) Aden"
        },
        {
            "id": "KD7Dw0YRWqqs!!!0tSFa97dz45FE0WjkPcnKdXAE0WSjPFaxFyCVokGwCeeVgs1TtDNiSnxc61jBWb3!!!w9o0snvmBXWUnJwzsZod64VLb4SFzeOzLalVGmb!!!hco1n88xy2CDPWXnbSK7iZww!!!6M3yWIkT@@@wS9wAXOy",
            "name": "(+03:00) Qatar"
        },
        {
            "id": "Gre@@@JHRa8xg@@@K9iDoBAqWBES4Oe6aIGE@@@1D8KygB8mxF@@@vEmGv4qJTKXlv6HLnh1@@@HUMpBqjnJvTGm4qFXhSRAoH2An44DKppixkLQTBJ40grsSdm1xFxl!!!niHqxKUMCdusR6naiTVqMV3oWsGawIs7wFyo835U9",
            "name": "(+03:00) Bahrain"
        },
        {
            "id": "24ChZfsRc9S0pAeB1Su@@@CiA@@@vJaZKC1fuDDgGdtbdV55qlu5EY5r0xX!!!f@@@!!!TyXIaoJlcdOJUwnN9Ls4JXmlHDS1lgIzzk0nsfKPo5zmuwAFUmUfGtEjxvgjWacaUcvvk7GdraLchzUXA1a@@@ubNGCu3Vqt0wBWR1G",
            "name": "(+03:00) Riyadh"
        },
        {
            "id": "iMCr45OO@@@!!!97qNi@@@rqA@@@RwUfYNvejZapBWY6NWtxi6IUsttpeVriiHzrirweLbqNS03mKPcmeHMNf89pT1Zu4bP41@@@uHobRwM2XNxvEmzBtzTShR96w6k!!!ttLrJKYjqpVlULMrWb!!!VZwrduY@@@XnGln2Sxqy23XGK",
            "name": "(+03:00) Kuwait"
        },
        {
            "id": "qpOXPTQc1tHUyJoj6FGRBIKrIInHik0PtfsRgtpYvOLfNArzj@@@gqXyJUwu2g9HVzTHDnDZaN2yyeRjsAi43rAYaJ7H1d4DxWX!!!yG55r3Kq@@@uJFcX0dH7jPq!!!r3dTZzu@@@XMrwHbuE3GTn2CF7cqFbA7izYqaDlWbL",
            "name": "(+03:00) Baghdad"
        },
        {
            "id": "wTwGIVloUCslJ4LY0G6MmFtr3!!!kgRi8ybiv5gqdkKfWHB@@@tRfEsk3S@@@GxzE8OXEuA@@@cuqwvQ7noKhMxdo@@@FZo9N@@@b6ACvRZsuluAkdP4o5qR5@@@SVDiIdOK7whnVCbtGTpgNlvzbfNucQVcsIjH44C20AMjoW4igm",
            "name": "(+03:00) Moscow"
        },
        {
            "id": "UOUpyCPjEXy@@@f3B1CqJwqCFaeI6m32ugkfMy0Rg1jGg4lWPS!!!9eRsTW3f!!!LNmUao8tJI6!!!@@@UKUpAITHyEV5NGPwKU9lYeGx@@@jPJScHWaxthorBYTP5BOtIFKwg@@@6lXwYZBy1mKsWfrKu22PBoSE1IneDD0hH7v!!!J",
            "name": "(+07:00) Vietnam"
        },
        {
            "id": "jLcZ7eQsLr2BjwUKWh4RAkmaKTzwY8F0!!!bm4!!!5X19cdmlB@@@W90gb5joOrWVj6nTf!!!zQadimNf!!!kIJFhvTE7IqlpFASHrawSLP9ud2J0!!!W!!!st9OnSFwdtkx!!!j9WaNEGC3w5BsZp05oQtUkH4nBclQtOfc1@@@wJ6vmO",
            "name": "(+07:00) Bangkok"
        },
        {
            "id": "aP42VM0s9aYDqf1GmojZpNE4CbanyDQd6hmcLG8JwXaOQRCz0XStRjrnDzNzW5S0y@@@owY1Z7@@@G@@@EfA8lUYmpRTmQmH2Vln9EyX9avW9gs3kZ9Z@@@GDQubI3dYPdUI4DeEQLcJT6zl5Pt3E5I6iuoSU0m8x9qXsiRq",
            "name": "(+07:00) Krasnoyarsk"
        },
        {
            "id": "GiHSoz9X2OzrbE1Auf4W1ntN@@@MzOmb5NFrmXedxOx!!!Sflv4SAAD6qKG7BNXfXh5v3mgblyVVfOeKZdm@@@m7imASq4DDWKEXyFYs2ynNia0JRahzamPjkRc!!!tBTiPVTkj08CBLJqivX41WZIL1@@@mnv9bGVDhdDMgog",
            "name": "(+06:00) Dacca"
        },
        {
            "id": "sveWIJXHWBGrHJLuJ7W8b9TlUCBLDGTwvCBDaAL67S7Bf4fYy1Ui2Ft0h8cPRWkg@@@JGCpawdsg6pt1OmwvA@@@0M0Rn7pcH4UBXbczat2oEOyNMuBoeEINcsukJ!!!oFLmVsPrHXROXcSHykZxf3iNHOBpoFOTu7D0rQ",
            "name": "(+12:00) Auckland"
        },
        {
            "id": "VunOceSte8XJjTGKVelVrUv5xfH!!!EcD01ebJH@@@AXeeGbWzrB3sW9VPju89ht2vCvMv5RBob0OXG!!!RaLfRab4cir1bw7fKbEu4z9EAmMPH5BtzXKSm6zCmpvxJMTBB7NMO1l4i1xlFY90KapflceaRXNRZeArCxFC",
            "name": "(+06:00) Almaty"
        },
        {
            "id": "k3isJ7gG18hdmane8mZQ3wPSXc@@@F04ZtqXbDpyhKaBaBQ@@@qMwQbBpPWiudUnmuiAIk5TgekQ7BTE5e@@@a81RXdqHz8QxJXV7EfNDY0UqZe1SZPydwqEJ29k9an7d9DtGxAOIkaMs7SPCyIxHMON1hPodJqtNfVZRn",
            "name": "(+06:00) Novosibirsk"
        },
        {
            "id": "wPo@@@SJcSzp3KH0aLt2xYbpXdKg1P5pjgsXuhdRfgKxANcXbiZjU8rurDNIRx1OjYECq8!!!HD!!!3LSVgoItqXtiw4egukvQvExZ0Cy9ZClHDHpPaoYSJcrat5pB7rGUSmCpYjVSntWTwVEdwDqFnaLJxEv7L69zlQGm",
            "name": "(+05:30) India"
        },
        {
            "id": "OYiYHrW2ifTOLY6sFSWTPrhETRRMdGZH1BBx6hIeZRZLeETNYuorMGC5VwyMhADzSSgtURWsDnlfFEJTJxSlGffibl4lbpeaEyoirkKur0O@@@tO8gyGUCzoRB1MXxV5akJVwRQF6bJjKhOkFpUDPaeDnuFCX1i1YH",
            "name": "(+05:00) Yekaterinburg"
        },
        {
            "id": "lV0GuoA9MSBroihwdczWMfXYOfA8jTfoxuyy4Ha2T7u@@@OFM1Qp7yjRnoPMYvpWBxf5X7luH30W7dGuYokRIBzAk4xCWLjoK!!!y9L4N89JQjsKYb0aiZG2AoKXL2cR1BshMDVZ8vWvtRUfHfpf6R9FiawzfqLoL612",
            "name": "(+05:00) Tashkent"
        },
        {
            "id": "xlw9qTfVT70uEBRN6plxUMYUzCu7QRcCXJ5HF!!!6n57UgqzQqbiIY4!!!7AnqUcye4q23zS8KYfB5ghMdiTGFzCL4BBkus@@@!!!mL5m1w@@@TfZvrdFnrHbN9ewvwLlY4teqqJxlleFfJNnNjnTi9q3417p4loueqcPCRCMl",
            "name": "(+09:30) Darwin"
        },
        {
            "id": "W10PUr2@@@26s4myheClmLhaDDZqRgWWkTA5qpqV!!!fiXGhbMGo8egiAWdffg4kJ65M@@@bFstRg0LlsCvgBw1KA4FQZAlIcUJuPKSNhIB4cA6GkS!!!r4ek1igMoFWanE05iq0AmHZXTubG77!!!Ji4@@@8jezK!!!DQuqD972Kj",
            "name": "(+09:00) Tokyo"
        },
        {
            "id": "IJJrwWy!!!Y@@@ZUcq@@@Gutl!!!KsQ5@@@wr0sTGgBqKfRnw5H7cu@@@fBb0phFXpbHUKSmALyRKo43B!!!Tk4XpecjmIDfYFdXi7p4osvlO5zANoyknt3XC2@@@4@@@Y9KQbhBe!!!mEK0i5r28oOfhKW71bqJhW1YmdHyrTQ6k8LajlfO",
            "name": "(+09:00) Seoul"
        },
        {
            "id": "Pg1qVZyMjD8Uo1d7HjAii2T1ABJLt6tqz3NKOtgi8g1IxxlDXwQTWJR4OSW4rnkeubLwYD@@@LlcgkNErfKIoYduzS6qoLIF0a08t@@@UYd@@@R!!!!!!8NSCI9lyILEQKZWo4g@@@GB0uOEmdfG4vKvcbQBJ@@@YnzxQfdlz1NRW5",
            "name": "(+09:00) Yakutsk"
        },
        {
            "id": "EEZSZOw8mUVgUt6WdFceCZXkd1jP!!!rS3s8eVxPl7xwTEJUOEmjrWpgvGurNWLHtrgZ5V!!!gGwSfNHsRL9pOU0ei@@@FAYJlJBLt@@@EWXHrH2aJmeQLX7Q4bEJwFuFMswDkdzahGP36cu9q0WzZm8cKq9@@@C!!!IMy8G0SRw",
            "name": "(+08:00) Perth"
        },
        {
            "id": "oy!!!UMiPVkKZMJBYMuDUKWwImcuvSHPuwadD9J0Lkm89hGSsa2tS@@@qAHrAZFYcctblTkEFNJTWrPBM87XVnoWHjTmOz9DDB092IK50qPDGsojB6W5HaspAfI2RNTP6Y18FZcHC6t7dNr@@@p9iuIgHdA85OmaoIiYVz",
            "name": "(+08:00) Singapore"
        },
        {
            "id": "3s4JXd@@@pbFH6dvn5JFPyQFe@@@bwEFCEebhQklQkTILYfTu5SJDiWaM6bg50WKqcrqVg!!!mfeohfL2dwbaNT4kvRAuToKK7dCty5n38uwsGt6Qg2ulz95rSHJTHPoVck2mijngttf803gSgZS73XVGQARKniEraAKAX",
            "name": "(+08:00) Kuala Lumpur"
        },
        {
            "id": "GZkLA8KyigSPOtMhyjJlvALDrn5Lai4RQmxTAapMMlC8Qp4KmIW!!!vfEtJ3M3EgmDgO7rQSQMXMMtmxh98M0P9mL9gd3oRvHQ3tkOJ3I6RsbeXngMDibGtiq5SsovbIXHY3UKQd9snKfcev5!!!IzjdwE1j21QYVEmu",
            "name": "(+08:00) Taipei"
        },
        {
            "id": "sdQcUkE0CeJ!!!CQE96jZDa7QCsl3ON318vvpNKNaUzqw4Ki5iJK5jcp5I!!!3tHFfwKzLAg5@@@n57jzvYswJuNjKBdFzgPhv@@@gVGD2IJCCbRzHYbNYBVu3Y4rORoKfIwwf0TGkf6vnRSXVsHLdOEkIeA6BEjXwf0HRoW",
            "name": "(+08:00) Hong Kong"
        },
        {
            "id": "E@@@VwDDEn6Z3BF78b95Ah437AHikXej7T!!!XAxkLLuewP5Edalv9Hnwxb07k@@@rs0YpN49X@@@RioftVjPq9!!!NlkwRMIEoD2rc@@@XRY2MTrWjqRAU27@@@yEkYWgttLpb!!!bjgPXarkFzVL@@@kZiau3TjivGB!!!3IvR9teT@@@LWd",
            "name": "(+08:00) Beijing, Shanghai"
        },
        {
            "id": "cUTJsz7Xjm!!!8LfiDnncaqINd5v1N5DWTRO2VPw9zHpI!!!Hv3lTTkifeObW1Np5UM9PL42pcVruWZuTqHIoz281CuGoIzmLjxpx0etoo@@@awGcs3kNAHYY0qpBPF7CutHtphh6oJnA4FG3uf6Z@@@diPEdb34M7vBcJEs",
            "name": "(+08:00) Irkutsk"
        },
        {
            "id": "2j6OXr95bpDMdq1GygfexbY1a@@@VlTjVkVN3RiHV7bt4FYCpXFTvuxKwskhq4RoYSo93yJOqQPDIiIiYgJUa2qk4ti8Yl9!!!9ekMbRTtA1vvcgVNMHSKKVFKL@@@HwzsH!!!yc4Ch59SlOu0JaCTEfrZWkg3j@@@yvqSRyPMh@@@i562D7AdA=",
            "name": "(+07:00) Jakarta"
        },
        {
            "id": "KZXgPdwfN4!!!VEG4E5khVv50ORGr8bC6ATccTYEAhk9DQ9KrwSewIeBQhf@@@2mC2t4rBQCGeMgFs@@@Pd9WzyBBUUl8A7Sk5xrIB7gInb@@@WZnf9Crl7@@@C7kpWP2u3qmkjU34csOEszd09wGlb8x4WVeFIk78wuGUbBm1bQhpf4V9jNY=",
            "name": "(+09:30) Adelaide"
        },
        {
            "id": "xy6yz!!!K2puB8Z3LDJnwr!!!KUJ4zGe@@@f6Ik@@@n1B6ISeg0sBkl7EQDeQh7I1At89ajnnYPI!!!LrqwfSlMuWr9XG7J3984AgRSZAX0ipisxA64aIItccvBFgMvNW4@@@dOkIWIVOArGx6IyE8SUTD1ZUsvom5RRaHP6IlgRgvwmWMlXLcY=",
            "name": "(+10:00) Vladivostok"
        },
        {
            "id": "jzLm4a9!!!m1gpp9yOUWX18RsKbmcEaTZ41m7wWBy5DO67jZ00Z7f8@@@YoNLdAStzMGPgXLjAZTUT5Dro@@@4ghnDa1W5P!!!qgqGwjQ4yQ6OHhRMot0@@@gOe6o1L@@@BkOerdCHg6qee83aIXd9H8M0u7CuSOyc3SKTZOuJxd76OnhsBMNTo=",
            "name": "(+10:00) Brisbane"
        },
        {
            "id": "HbAz0KIszQ1EoINCTlwmjCWA4fZ2KTER1nS9AFy0qa2z1n5IMv0wqmKDmKLHlwBJ0Gacg9YENJ6hJMAKXTGR!!!OraUMBQ4t0KTSbhnyAHqaaihcUL@@@HJD16MUUcswmEmRAHun6iIJaXsIUuW@@@EnPW9fV1dp04hyy6!!!fn66Xqry3s=",
            "name": "(+10:00) Sydney Canberra"
        },
        {
            "id": "qsByuquMttGB@@@cWzdgdWMGsR2zDokbOtPVGiH5ON!!!WQqcIkn@@@lQ7cpjVIPFvrd@@@p!!!gqwapzsLLPFovmcWz2gAV5rJqdmn5uyGFMTSJuPFCRCGQvxDYaIDDulDQ!!!N3nXy7L!!!S4sNJHMj7fQWiiD8e5TnWG05tdAQo9gMBBU!!!pkaU=",
            "name": "(+10:00) Hobart"
        },
        {
            "id": "qVrNixBqK35bR2bwWN9V86uAFj0sfePvfd24ZaG2RVDgDF82VHUYvZL5hqLELXaUyjp8wRmOoWyUCRqQ07KSIU6JqnE5SVkmjgkDhHrkQXYYCrE8w@@@kIQrEzQDAt5FmVWMb8FXnOLOaGs1dxGSiSDKwtkNIfQtREtmcGrTI!!!MeU=",
            "name": "(+11:00) Magadan"
        },
        {
            "id": "JZ0f6xhi10XQ7h7m3hXt40mf@@@uM60nrJlzF91Cczvadrr3!!!R3xgl5LPgSVrXlNCmtr1IOShoce9HDTiO5KS9rBl0N0qx37yZs5WVaqncks9S2Ma1iFT9!!!OHR8vXEGQIXIfLMI@@@936HqiZvI9BfAaqUojKe7zE7HSHE@@@bL3xPwFo=",
            "name": "(+12:00) Kamchatka"
        }
    ]
}</msg>
<status status="PASS" starttime="20210405 18:48:10.094" endtime="20210405 18:48:10.095"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:10.094" endtime="20210405 18:48:10.096"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:10.088" endtime="20210405 18:48:10.096"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..timeZones[?(@.name=='${time_zone_search_string}')].id</arg>
</arguments>
<assign>
<var>${timezone_id}</var>
</assign>
<msg timestamp="20210405 18:48:10.102" level="INFO">${timezone_id} = P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n</msg>
<status status="PASS" starttime="20210405 18:48:10.096" endtime="20210405 18:48:10.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${timezone_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:10.103" level="INFO">P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n</msg>
<status status="PASS" starttime="20210405 18:48:10.103" endtime="20210405 18:48:10.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${timezone_id}</arg>
<arg>${timezone_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:10.104" level="INFO">${timezone_id} = P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n</msg>
<status status="PASS" starttime="20210405 18:48:10.104" endtime="20210405 18:48:10.104"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..success</arg>
</arguments>
<assign>
<var>${success}</var>
</assign>
<msg timestamp="20210405 18:48:10.107" level="INFO">${success} = true</msg>
<status status="PASS" starttime="20210405 18:48:10.105" endtime="20210405 18:48:10.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${success}</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210405 18:48:10.108" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210405 18:48:10.108" endtime="20210405 18:48:10.108"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210405 18:48:08.340" endtime="20210405 18:48:10.109" critical="yes"></status>
</test>
<test id="s1-t6" name="Search Merchant">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:48:10.115" level="INFO">&amp;{data} = { csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b }</msg>
<status status="PASS" starttime="20210405 18:48:10.115" endtime="20210405 18:48:10.115"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:10.117" endtime="20210405 18:48:10.117"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>page</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:10.118" endtime="20210405 18:48:10.118"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>start</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:10.119" endtime="20210405 18:48:10.119"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>limit</arg>
<arg>25</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:10.120" endtime="20210405 18:48:10.120"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>resellerid</arg>
<arg>${reseller_id}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:10.121" endtime="20210405 18:48:10.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:48:10.122" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:48:10.122" endtime="20210405 18:48:10.122"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/merchant/xSearch</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:48:10.123" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:11.489" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/merchant/xSearch HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:48:11.489" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xSearch 
 path_url=/sbpsAdmin/merchant/xSearch 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '118'} 
 body=csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25&amp;resellerid=RESELLER_ID_NOT_FOUND 
 </msg>
<msg timestamp="20210405 18:48:11.490" level="DEBUG">send: bPOST /sbpsAdmin/merchant/xSearch HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 118\n\n
send: bcsrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25&amp;resellerid=RESELLER_ID_NOT_FOUND
reply: HTTP/1.1 200 OK\n
header: Cache-Control: no-cache, no-store, max-age=0, must-revalidate
header: Date: Mon, 05 Apr 2021 13:18:09 GMT
header: Pragma: no-cache
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: Content-Security-Policy: default-src self *.google.com *.gstatic.com; style-src self unsafe-inline; img-src * data:; frame-ancestors none; form-action self; script-src self *.google.com *.gstatic.com unsafe-inline unsafe-eval
header: X-ORACLE-DMS-RID: 0
header: X-Content-Type-Options: nosniff
header: X-ORACLE-DMS-ECID: 9272fcab-5833-4d1d-af3c-eaec0d084d22-00000020
header: X-XSS-Protection: 1; mode=block
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin
header: X-Frame-Options: DENY
header: 0: 0</msg>
<msg timestamp="20210405 18:48:11.490" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xSearch 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Date': 'Mon, 05 Apr 2021 13:18:09 GMT', 'Pragma': 'no-cache', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Security-Policy': "default-src 'self' *.google.com *.gstatic.com; style-src 'self' 'unsafe-inline'; img-src * data:; frame-ancestors 'none'; form-action 'self'; script-src 'self' *.google.com *.gstatic.com 'unsafe-inline' 'unsafe-eval'", 'X-ORACLE-DMS-RID': '0', 'X-Content-Type-Options': 'nosniff', 'X-ORACLE-DMS-ECID': '9272fcab-5833-4d1d-af3c-eaec0d084d22-00000020', 'X-XSS-Protection': '1; mode=block', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Frame-Options': 'DENY', '0': '0'} 
 body={"privileged":{"voidCc":true,"refundCc":true,"changeNextPaymentCc":true,"viewAmortizationCc":true,"terminateScheduleCc":true,"voidAch":true,"refundAch":true,"changeNextPaymentAch":true,"viewAmortizationAch":true,"terminateScheduleAch":true,"paymentAlertActionUpdate":true,"viewHomePageRead":true,"editSettingsInSettingsPageUpdate":true,"createPaymentAccountCreate":true,"viewCustomerDetailRead":true,"editPaymentAccountUpdate":true,"processOneTimePaymentCreate":true,"viewTransactionDetailRead":true,"skipaPaymentUpdate":true,"manageProcessingAccounts":true,"manageMerchants":true,"rdcAccess":true,"editScheduleSettings":true,"viewUser":true,"updateUser":true,"createUser":true,"deleteUser":true,"resellerAdmin":true},"succes":false,"error":"Error occurred while merchant search"} 
 </msg>
<msg timestamp="20210405 18:48:11.490" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:48:10.123" endtime="20210405 18:48:11.490"></status>
</kw>
<kw name="Pretty Print" library="CommonKeywordsAndVariables">
<arguments>
<arg>${resp.content}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>To Json</arg>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${pretty_output}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<msg timestamp="20210405 18:48:11.492" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210405 18:48:11.494" level="INFO">To JSON using : content={"privileged":{"voidCc":true,"refundCc":true,"changeNextPaymentCc":true,"viewAmortizationCc":true,"terminateScheduleCc":true,"voidAch":true,"refundAch":true,"changeNextPaymentAch":true,"viewAmortizationAch":true,"terminateScheduleAch":true,"paymentAlertActionUpdate":true,"viewHomePageRead":true,"editSettingsInSettingsPageUpdate":true,"createPaymentAccountCreate":true,"viewCustomerDetailRead":true,"editPaymentAccountUpdate":true,"processOneTimePaymentCreate":true,"viewTransactionDetailRead":true,"skipaPaymentUpdate":true,"manageProcessingAccounts":true,"manageMerchants":true,"rdcAccess":true,"editScheduleSettings":true,"viewUser":true,"updateUser":true,"createUser":true,"deleteUser":true,"resellerAdmin":true},"succes":false,"error":"Error occurred while merchant search"} </msg>
<msg timestamp="20210405 18:48:11.494" level="INFO">To JSON using : pretty_print=True </msg>
<status status="PASS" starttime="20210405 18:48:11.492" endtime="20210405 18:48:11.494"></status>
</kw>
<msg timestamp="20210405 18:48:11.494" level="INFO">${pretty_output} = ('PASS', '{\n    "error": "Error occurred while merchant search",\n    "privileged": {\n        "changeNextPaymentAch": true,\n        "changeNextPaymentCc": true,\n        "createPaymentAccountCreate...</msg>
<status status="PASS" starttime="20210405 18:48:11.492" endtime="20210405 18:48:11.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.494" endtime="20210405 18:48:11.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='PASS'</arg>
<arg>Log</arg>
<arg>${pretty_output[1]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pretty_output[1]}</arg>
</arguments>
<msg timestamp="20210405 18:48:11.497" level="INFO">{
    "error": "Error occurred while merchant search",
    "privileged": {
        "changeNextPaymentAch": true,
        "changeNextPaymentCc": true,
        "createPaymentAccountCreate": true,
        "createUser": true,
        "deleteUser": true,
        "editPaymentAccountUpdate": true,
        "editScheduleSettings": true,
        "editSettingsInSettingsPageUpdate": true,
        "manageMerchants": true,
        "manageProcessingAccounts": true,
        "paymentAlertActionUpdate": true,
        "processOneTimePaymentCreate": true,
        "rdcAccess": true,
        "refundAch": true,
        "refundCc": true,
        "resellerAdmin": true,
        "skipaPaymentUpdate": true,
        "terminateScheduleAch": true,
        "terminateScheduleCc": true,
        "updateUser": true,
        "viewAmortizationAch": true,
        "viewAmortizationCc": true,
        "viewCustomerDetailRead": true,
        "viewHomePageRead": true,
        "viewTransactionDetailRead": true,
        "viewUser": true,
        "voidAch": true,
        "voidCc": true
    },
    "succes": false
}</msg>
<status status="PASS" starttime="20210405 18:48:11.497" endtime="20210405 18:48:11.497"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:11.495" endtime="20210405 18:48:11.498"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:11.491" endtime="20210405 18:48:11.498"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..succes</arg>
</arguments>
<assign>
<var>${succes}</var>
</assign>
<msg timestamp="20210405 18:48:11.500" level="INFO">${succes} = false</msg>
<status status="PASS" starttime="20210405 18:48:11.499" endtime="20210405 18:48:11.501"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${succes}</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210405 18:48:11.502" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210405 18:48:11.502" level="FAIL">false != true</msg>
<msg timestamp="20210405 18:48:11.502" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20210405 18:48:11.501" endtime="20210405 18:48:11.502"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20210405 18:48:10.114" endtime="20210405 18:48:11.503" critical="yes">false != true</status>
</test>
<test id="s1-t7" name="Search Merchant by entering search term">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:48:11.508" level="INFO">&amp;{data} = { csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b }</msg>
<status status="PASS" starttime="20210405 18:48:11.508" endtime="20210405 18:48:11.508"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>searchValue</arg>
<arg>${merchant_search_string}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.509" endtime="20210405 18:48:11.510"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.510" endtime="20210405 18:48:11.513"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>page</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.514" endtime="20210405 18:48:11.514"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>start</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.514" endtime="20210405 18:48:11.515"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>limit</arg>
<arg>25</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.515" endtime="20210405 18:48:11.515"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>resellerid</arg>
<arg>${reseller_id}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:11.516" endtime="20210405 18:48:11.516"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:48:11.517" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:48:11.517" endtime="20210405 18:48:11.517"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/merchant/xSearch</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:48:11.518" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:11.950" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/merchant/xSearch HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:48:12.382" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xSearch 
 path_url=/sbpsAdmin/merchant/xSearch 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '141'} 
 body=csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;searchValue=Topaz+Soda&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25&amp;resellerid=RESELLER_ID_NOT_FOUND 
 </msg>
<msg timestamp="20210405 18:48:12.382" level="DEBUG">send: bPOST /sbpsAdmin/merchant/xSearch HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 141\n\n
send: bcsrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;searchValue=Topaz+Soda&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25&amp;resellerid=RESELLER_ID_NOT_FOUND
reply: HTTP/1.1 200 OK\n
header: Cache-Control: no-cache, no-store, max-age=0, must-revalidate
header: Date: Mon, 05 Apr 2021 13:18:10 GMT
header: Pragma: no-cache
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: Content-Security-Policy: default-src self *.google.com *.gstatic.com; style-src self unsafe-inline; img-src * data:; frame-ancestors none; form-action self; script-src self *.google.com *.gstatic.com unsafe-inline unsafe-eval
header: X-ORACLE-DMS-RID: 0
header: X-Content-Type-Options: nosniff
header: X-ORACLE-DMS-ECID: 9272fcab-5833-4d1d-af3c-eaec0d084d22-00000021
header: X-XSS-Protection: 1; mode=block
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin
header: X-Frame-Options: DENY
header: 0: 0</msg>
<msg timestamp="20210405 18:48:12.383" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xSearch 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Date': 'Mon, 05 Apr 2021 13:18:10 GMT', 'Pragma': 'no-cache', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Security-Policy': "default-src 'self' *.google.com *.gstatic.com; style-src 'self' 'unsafe-inline'; img-src * data:; frame-ancestors 'none'; form-action 'self'; script-src 'self' *.google.com *.gstatic.com 'unsafe-inline' 'unsafe-eval'", 'X-ORACLE-DMS-RID': '0', 'X-Content-Type-Options': 'nosniff', 'X-ORACLE-DMS-ECID': '9272fcab-5833-4d1d-af3c-eaec0d084d22-00000021', 'X-XSS-Protection': '1; mode=block', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Frame-Options': 'DENY', '0': '0'} 
 body={"privileged":{"voidCc":true,"refundCc":true,"changeNextPaymentCc":true,"viewAmortizationCc":true,"terminateScheduleCc":true,"voidAch":true,"refundAch":true,"changeNextPaymentAch":true,"viewAmortizationAch":true,"terminateScheduleAch":true,"paymentAlertActionUpdate":true,"viewHomePageRead":true,"editSettingsInSettingsPageUpdate":true,"createPaymentAccountCreate":true,"viewCustomerDetailRead":true,"editPaymentAccountUpdate":true,"processOneTimePaymentCreate":true,"viewTransactionDetailRead":true,"skipaPaymentUpdate":true,"manageProcessingAccounts":true,"manageMerchants":true,"rdcAccess":true,"editScheduleSettings":true,"viewUser":true,"updateUser":true,"createUser":true,"deleteUser":true,"resellerAdmin":true},"succes":false,"error":"Error occurred while merchant search"} 
 </msg>
<msg timestamp="20210405 18:48:12.383" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:48:11.518" endtime="20210405 18:48:12.383"></status>
</kw>
<kw name="Pretty Print" library="CommonKeywordsAndVariables">
<arguments>
<arg>${resp.content}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>To Json</arg>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${pretty_output}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<msg timestamp="20210405 18:48:12.384" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210405 18:48:12.386" level="INFO">To JSON using : content={"privileged":{"voidCc":true,"refundCc":true,"changeNextPaymentCc":true,"viewAmortizationCc":true,"terminateScheduleCc":true,"voidAch":true,"refundAch":true,"changeNextPaymentAch":true,"viewAmortizationAch":true,"terminateScheduleAch":true,"paymentAlertActionUpdate":true,"viewHomePageRead":true,"editSettingsInSettingsPageUpdate":true,"createPaymentAccountCreate":true,"viewCustomerDetailRead":true,"editPaymentAccountUpdate":true,"processOneTimePaymentCreate":true,"viewTransactionDetailRead":true,"skipaPaymentUpdate":true,"manageProcessingAccounts":true,"manageMerchants":true,"rdcAccess":true,"editScheduleSettings":true,"viewUser":true,"updateUser":true,"createUser":true,"deleteUser":true,"resellerAdmin":true},"succes":false,"error":"Error occurred while merchant search"} </msg>
<msg timestamp="20210405 18:48:12.386" level="INFO">To JSON using : pretty_print=True </msg>
<status status="PASS" starttime="20210405 18:48:12.384" endtime="20210405 18:48:12.386"></status>
</kw>
<msg timestamp="20210405 18:48:12.386" level="INFO">${pretty_output} = ('PASS', '{\n    "error": "Error occurred while merchant search",\n    "privileged": {\n        "changeNextPaymentAch": true,\n        "changeNextPaymentCc": true,\n        "createPaymentAccountCreate...</msg>
<status status="PASS" starttime="20210405 18:48:12.384" endtime="20210405 18:48:12.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:12.386" endtime="20210405 18:48:12.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='PASS'</arg>
<arg>Log</arg>
<arg>${pretty_output[1]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pretty_output[1]}</arg>
</arguments>
<msg timestamp="20210405 18:48:12.388" level="INFO">{
    "error": "Error occurred while merchant search",
    "privileged": {
        "changeNextPaymentAch": true,
        "changeNextPaymentCc": true,
        "createPaymentAccountCreate": true,
        "createUser": true,
        "deleteUser": true,
        "editPaymentAccountUpdate": true,
        "editScheduleSettings": true,
        "editSettingsInSettingsPageUpdate": true,
        "manageMerchants": true,
        "manageProcessingAccounts": true,
        "paymentAlertActionUpdate": true,
        "processOneTimePaymentCreate": true,
        "rdcAccess": true,
        "refundAch": true,
        "refundCc": true,
        "resellerAdmin": true,
        "skipaPaymentUpdate": true,
        "terminateScheduleAch": true,
        "terminateScheduleCc": true,
        "updateUser": true,
        "viewAmortizationAch": true,
        "viewAmortizationCc": true,
        "viewCustomerDetailRead": true,
        "viewHomePageRead": true,
        "viewTransactionDetailRead": true,
        "viewUser": true,
        "voidAch": true,
        "voidCc": true
    },
    "succes": false
}</msg>
<status status="PASS" starttime="20210405 18:48:12.387" endtime="20210405 18:48:12.388"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:12.387" endtime="20210405 18:48:12.388"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:12.383" endtime="20210405 18:48:12.388"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..succes</arg>
</arguments>
<assign>
<var>${succes}</var>
</assign>
<msg timestamp="20210405 18:48:12.389" level="INFO">${succes} = false</msg>
<status status="PASS" starttime="20210405 18:48:12.388" endtime="20210405 18:48:12.389"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${succes}</arg>
<arg>true</arg>
</arguments>
<msg timestamp="20210405 18:48:12.390" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210405 18:48:12.390" level="FAIL">false != true</msg>
<msg timestamp="20210405 18:48:12.390" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20210405 18:48:12.389" endtime="20210405 18:48:12.390"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20210405 18:48:11.507" endtime="20210405 18:48:12.390" critical="yes">false != true</status>
</test>
<test id="s1-t8" name="View MerchantDetail">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${merchant_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:12.396" level="INFO">MERCHANT_ID_NOT_FOUND</msg>
<status status="PASS" starttime="20210405 18:48:12.395" endtime="20210405 18:48:12.396"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:48:12.397" level="INFO">&amp;{data} = { csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b }</msg>
<status status="PASS" starttime="20210405 18:48:12.397" endtime="20210405 18:48:12.398"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:12.398" endtime="20210405 18:48:12.398"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>page</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:12.398" endtime="20210405 18:48:12.399"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>start</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:12.399" endtime="20210405 18:48:12.399"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>limit</arg>
<arg>25</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:12.400" endtime="20210405 18:48:12.400"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>merchantid</arg>
<arg>${merchant_id}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:12.400" endtime="20210405 18:48:12.400"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:48:12.401" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:48:12.401" endtime="20210405 18:48:12.401"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/merchant/xViewMerchantDetail</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:48:12.401" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:12.867" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/merchant/xViewMerchantDetail HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:48:13.119" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xViewMerchantDetail 
 path_url=/sbpsAdmin/merchant/xViewMerchantDetail 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '118'} 
 body=csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25&amp;merchantid=MERCHANT_ID_NOT_FOUND 
 </msg>
<msg timestamp="20210405 18:48:13.120" level="DEBUG">send: bPOST /sbpsAdmin/merchant/xViewMerchantDetail HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 118\n\n
send: bcsrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;page=1&amp;start=0&amp;limit=25&amp;merchantid=MERCHANT_ID_NOT_FOUND
reply: HTTP/1.1 200 OK\n
header: Date: Mon, 05 Apr 2021 13:18:11 GMT
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin</msg>
<msg timestamp="20210405 18:48:13.120" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xViewMerchantDetail 
 status=200, reason=OK 
 headers={'Date': 'Mon, 05 Apr 2021 13:18:11 GMT', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'} 
 body={"success":false,"errors":["The system experienced an error while attempting to process your request, please try again."]}
&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;200 OK&lt;/title&gt;
    &lt;link href="/sbpsStatic/css/errors.css" type="text/css" rel="stylesheet"
          media="screen, projection"/&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt; 
 </msg>
<msg timestamp="20210405 18:48:13.120" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:48:12.401" endtime="20210405 18:48:13.120"></status>
</kw>
<kw name="Pretty Print" library="CommonKeywordsAndVariables">
<arguments>
<arg>${resp.content}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>To Json</arg>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${pretty_output}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<msg timestamp="20210405 18:48:13.122" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210405 18:48:13.132" level="FAIL">JSONDecodeError: Extra data: line 2 column 1 (char 124)</msg>
<msg timestamp="20210405 18:48:13.132" level="DEBUG">Traceback (most recent call last):
  File "C:\Python37\lib\site-packages\RequestsLibrary\DeprecatedKeywords.py", line 29, in to_json
    json_ = utils.json_pretty_print(content)
  File "C:\Python37\lib\site-packages\RequestsLibrary\utils.py", line 66, in json_pretty_print
    temp = json.loads(content)
  File "C:\Python37\lib\json\__init__.py", line 348, in loads
    return _default_decoder.decode(s)
  File "C:\Python37\lib\json\decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)</msg>
<status status="FAIL" starttime="20210405 18:48:13.122" endtime="20210405 18:48:13.133"></status>
</kw>
<msg timestamp="20210405 18:48:13.133" level="INFO">${pretty_output} = ('FAIL', 'JSONDecodeError: Extra data: line 2 column 1 (char 124)')</msg>
<status status="PASS" starttime="20210405 18:48:13.121" endtime="20210405 18:48:13.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${output}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210405 18:48:13.134" level="INFO">{"success":false,"errors":["The system experienced an error while attempting to process your request, please try again."]}
&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;200 OK&lt;/title&gt;
    &lt;link href="/sbpsStatic/css/errors.css" type="text/css" rel="stylesheet"
          media="screen, projection"/&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20210405 18:48:13.133" endtime="20210405 18:48:13.134"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:13.133" endtime="20210405 18:48:13.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='PASS'</arg>
<arg>Log</arg>
<arg>${pretty_output[1]}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:13.134" endtime="20210405 18:48:13.134"></status>
</kw>
<status status="PASS" starttime="20210405 18:48:13.121" endtime="20210405 18:48:13.134"></status>
</kw>
<kw name="Get Items By Path" library="JsonpathLibrary">
<arguments>
<arg>${resp.content}</arg>
<arg>$..success</arg>
</arguments>
<assign>
<var>${success}</var>
</assign>
<msg timestamp="20210405 18:48:13.150" level="FAIL">JSONDecodeError: Extra data: line 2 column 1 (char 124)</msg>
<msg timestamp="20210405 18:48:13.151" level="DEBUG">Traceback (most recent call last):
  File "C:\Users\akhil.kumar\Perforce\akhil.kumar_TRV-LT-AKHILK_9539\TotalTransact\Robot\sbps\main\TotalTransact\Libraries\Util\JsonpathLibrary.py", line 9, in get_items_by_path
    json_object = json.loads(json_string)
  File "C:\Python37\lib\json\__init__.py", line 348, in loads
    return _default_decoder.decode(s)
  File "C:\Python37\lib\json\decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)</msg>
<status status="FAIL" starttime="20210405 18:48:13.135" endtime="20210405 18:48:13.151"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20210405 18:48:12.393" endtime="20210405 18:48:13.151" critical="yes">JSONDecodeError: Extra data: line 2 column 1 (char 124)</status>
</test>
<test id="s1-t9" name="Update MerchantDetail">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${merchant_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:13.156" level="INFO">MERCHANT_ID_NOT_FOUND</msg>
<status status="PASS" starttime="20210405 18:48:13.155" endtime="20210405 18:48:13.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${external_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:13.157" level="INFO">EXTERNAL_ID_NOT_FOUND</msg>
<status status="PASS" starttime="20210405 18:48:13.156" endtime="20210405 18:48:13.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${timezone_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:13.158" level="INFO">P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH@@@9VzG2qdpPL9lG19!!!8dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa!!!r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n</msg>
<status status="PASS" starttime="20210405 18:48:13.157" endtime="20210405 18:48:13.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reseller_id}</arg>
</arguments>
<msg timestamp="20210405 18:48:13.159" level="INFO">RESELLER_ID_NOT_FOUND</msg>
<status status="PASS" starttime="20210405 18:48:13.158" endtime="20210405 18:48:13.159"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>csrfToken</arg>
<arg>${session_id}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20210405 18:48:13.160" level="INFO">&amp;{data} = { csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b }</msg>
<status status="PASS" starttime="20210405 18:48:13.160" endtime="20210405 18:48:13.160"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>[{"resellerid":"${reseller_id}","merchantid":"${merchant_id}","externalid":"${external_id}","merchantname":"Topaz Soda","address":"street name and number","addresstwo":"apt/floor","city":"Salt Lake City","state":"UT","zipcode":"84107","country":"US","phone":"111-222-3331","fax":"111-222-3331","contactfirstname":"Topaz Soda","contactlastname":"Topaz Soda","contactphone":"111-222-3333","contactemail":"Topaz.Soda@fundtech.com","merchantwebsite":"totaltseeddata.com","billingroutingnumber":"011000015","billingaccountnumber":"12348","logoutreturnpath":"www.google.in","merchantstatus":"Active","merchantreferencenumber":"","merchantTimeZone":"${timezone_id}"}]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20210405 18:48:13.163" level="INFO">${value} = [{"resellerid":"RESELLER_ID_NOT_FOUND","merchantid":"MERCHANT_ID_NOT_FOUND","externalid":"EXTERNAL_ID_NOT_FOUND","merchantname":"Topaz Soda","address":"street name and number","addresstwo":"apt/floor"...</msg>
<status status="PASS" starttime="20210405 18:48:13.162" endtime="20210405 18:48:13.164"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>usertz</arg>
<arg>+0530</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:13.165" endtime="20210405 18:48:13.165"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${data}</arg>
<arg>merchantdata</arg>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:13.166" endtime="20210405 18:48:13.166"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20210405 18:48:13.167" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20210405 18:48:13.167" endtime="20210405 18:48:13.167"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<arguments>
<arg>adminSession</arg>
<arg>/sbpsAdmin/merchant/xUpdateMerchantDetail</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210405 18:48:13.168" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20210405 18:48:16.862" level="DEBUG">http://10.192.1.220:8003 "POST /sbpsAdmin/merchant/xUpdateMerchantDetail HTTP/1.1" 200 None</msg>
<msg timestamp="20210405 18:48:16.862" level="INFO">POST Request : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xUpdateMerchantDetail 
 path_url=/sbpsAdmin/merchant/xUpdateMerchantDetail 
 headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300', 'Content-Length': '1212'} 
 body=csrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;merchantdata=%5B%7B%22resellerid%22%3A%22RESELLER_ID_NOT_FOUND%22%2C%22merchantid%22%3A%22MERCHANT_ID_NOT_FOUND%22%2C%22externalid%22%3A%22EXTERNAL_ID_NOT_FOUND%22%2C%22merchantname%22%3A%22Topaz+Soda%22%2C%22address%22%3A%22street+name+and+number%22%2C%22addresstwo%22%3A%22apt%2Ffloor%22%2C%22city%22%3A%22Salt+Lake+City%22%2C%22state%22%3A%22UT%22%2C%22zipcode%22%3A%2284107%22%2C%22country%22%3A%22US%22%2C%22phone%22%3A%22111-222-3331%22%2C%22fax%22%3A%22111-222-3331%22%2C%22contactfirstname%22%3A%22Topaz+Soda%22%2C%22contactlastname%22%3A%22Topaz+Soda%22%2C%22contactphone%22%3A%22111-222-3333%22%2C%22contactemail%22%3A%22Topaz.Soda%40fundtech.com%22%2C%22merchantwebsite%22%3A%22totaltseeddata.com%22%2C%22billingroutingnumber%22%3A%22011000015%22%2C%22billingaccountnumber%22%3A%2212348%22%2C%22logoutreturnpath%22%3A%22www.google.in%22%2C%22merchantstatus%22%3A%22Active%22%2C%22merchantreferencenumber%22%3A%22%22%2C%22merchantTimeZone%22%3A%22P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH%40%40%409VzG2qdpPL9lG19%21%21%218dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa%21%21%21r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n%22%7D%5D 
 </msg>
<msg timestamp="20210405 18:48:16.862" level="DEBUG">send: bPOST /sbpsAdmin/merchant/xUpdateMerchantDetail HTTP/1.1\nHost: 10.192.1.220:8003\nUser-Agent: python-requests/2.22.0\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nContent-Type: application/x-www-form-urlencoded\nCookie: JSESSIONID=eqKiLfCfGxjhfF0QC41dFnRjE3MJ-TqwqG1tu7M75QiyglJC28Dy!2138612300\nContent-Length: 1212\n\n
send: bcsrfToken=f8219c82-f3a1-433c-a470-3ea2b8711c8b&amp;usertz=%2B0530&amp;merchantdata=%5B%7B%22resellerid%22%3A%22RESELLER_ID_NOT_FOUND%22%2C%22merchantid%22%3A%22MERCHANT_ID_NOT_FOUND%22%2C%22externalid%22%3A%22EXTERNAL_ID_NOT_FOUND%22%2C%22merchantname%22%3A%22Topaz+Soda%22%2C%22address%22%3A%22street+name+and+number%22%2C%22addresstwo%22%3A%22apt%2Ffloor%22%2C%22city%22%3A%22Salt+Lake+City%22%2C%22state%22%3A%22UT%22%2C%22zipcode%22%3A%2284107%22%2C%22country%22%3A%22US%22%2C%22phone%22%3A%22111-222-3331%22%2C%22fax%22%3A%22111-222-3331%22%2C%22contactfirstname%22%3A%22Topaz+Soda%22%2C%22contactlastname%22%3A%22Topaz+Soda%22%2C%22contactphone%22%3A%22111-222-3333%22%2C%22contactemail%22%3A%22Topaz.Soda%40fundtech.com%22%2C%22merchantwebsite%22%3A%22totaltseeddata.com%22%2C%22billingroutingnumber%22%3A%22011000015%22%2C%22billingaccountnumber%22%3A%2212348%22%2C%22logoutreturnpath%22%3A%22www.google.in%22%2C%22merchantstatus%22%3A%22Active%22%2C%22merchantreferencenumber%22%3A%22%22%2C%22merchantTimeZone%22%3A%22P2EqpaxBJf1agYMeI1mCEX1eYNEmE5VreDtH%40%40%409VzG2qdpPL9lG19%21%21%218dHlrdxvYErdi7EWQo8vApgaEgVKq01wMzqEMKl82T8vHisWMWOhkI1V03tLZo4L7Yynmwmsa%21%21%21r4VaFodEh7WFU38EM1QvvC4HSXVhaAF8n%22%7D%5D
reply: HTTP/1.1 200 OK\n
header: Date: Mon, 05 Apr 2021 13:18:13 GMT
header: Transfer-Encoding: chunked
header: Content-Type: application/json;charset=UTF-8
header: Vary: Origin
header: Vary: Origin
header: Vary: Origin</msg>
<msg timestamp="20210405 18:48:16.862" level="INFO">POST Response : url=http://10.192.1.220:8003/sbpsAdmin/merchant/xUpdateMerchantDetail 
 status=200, reason=OK 
 headers={'Date': 'Mon, 05 Apr 2021 13:18:13 GMT', 'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json;charset=UTF-8', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers'} 
 body={"success":true,"message":"Merchant updated succesfully"} 
 </msg>
<msg timestamp="20210405 18:48:16.863" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210405 18:48:13.168" endtime="20210405 18:48:16.863"></status>
</kw>
<kw name="Pretty Print" library="CommonKeywordsAndVariables">
<arguments>
<arg>${resp.content}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>To Json</arg>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${pretty_output}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${output}</arg>
<arg>pretty_print=True</arg>
</arguments>
<msg timestamp="20210405 18:48:16.864" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210405 18:48:16.867" level="INFO">To JSON using : content={"success":true,"message":"Merchant updated succesfully"} </msg>
<msg timestamp="20210405 18:48:16.868" level="INFO">To JSON using : pretty_print=True </msg>
<status status="PASS" starttime="20210405 18:48:16.864" endtime="20210405 18:48:16.868"></status>
</kw>
<msg timestamp="20210405 18:48:16.868" level="INFO">${pretty_output} = ('PASS', '{\n    "message": "Merchant updated succesfully",\n    "success": true\n}')</msg>
<status status="PASS" starttime="20210405 18:48:16.864" endtime="20210405 18:48:16.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='FAIL'</arg>
<arg>Log</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20210405 18:48:16.868" endtime="20210405 18:48:16.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pretty_output[0]}'=='PASS'</arg>
<arg>Log</arg>
<arg>${pretty_output[1]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pretty_output[1]}</arg>
</arguments>
<msg timestamp="20210405 18:48:16.869" level="INFO">{
    "message": "Merchant updated succesfully",
    "success": true
}